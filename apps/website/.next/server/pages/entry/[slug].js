/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/entry/[slug]";
exports.ids = ["pages/entry/[slug]"];
exports.modules = {

/***/ "../../node_modules/@swc/helpers/lib/_async_to_generator.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@swc/helpers/lib/_async_to_generator.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _asyncToGenerator;\n    }\n}));\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2FzeW5jX3RvX2dlbmVyYXRvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19hc3luY190b19nZW5lcmF0b3IuanM/M2JkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICAgIHRyeSB7XG4gICAgICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICAgICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICAgICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@swc/helpers/lib/_async_to_generator.js\n");

/***/ }),

/***/ "../../node_modules/@swc/helpers/lib/_extends.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@swc/helpers/lib/_extends.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _extends;\n    }\n}));\nfunction extends_() {\n    extends_ = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_.apply(this, arguments);\n}\nfunction _extends() {\n    return extends_.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2V4dGVuZHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcz80NTNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2V4dGVuZHM7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBleHRlbmRzXygpIHtcbiAgICBleHRlbmRzXyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvcih2YXIga2V5IGluIHNvdXJjZSl7XG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xuICAgIHJldHVybiBleHRlbmRzXy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gICAgcmV0dXJuIGV4dGVuZHNfLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@swc/helpers/lib/_extends.js\n");

/***/ }),

/***/ "../../node_modules/@swc/helpers/lib/_interop_require_default.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@swc/helpers/lib/_interop_require_default.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireDefault;\n    }\n}));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzPzk0YTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@swc/helpers/lib/_interop_require_default.js\n");

/***/ }),

/***/ "../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireWildcard;\n    }\n}));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanM/Nzc3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgICAgIHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDtcbiAgICB9KShub2RlSW50ZXJvcCk7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7XG4gICAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5nZXQob2JqKTtcbiAgICB9XG4gICAgdmFyIG5ld09iaiA9IHt9O1xuICAgIHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcbiAgICAgICAgICAgIGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuICAgIGlmIChjYWNoZSkge1xuICAgICAgICBjYWNoZS5zZXQob2JqLCBuZXdPYmopO1xuICAgIH1cbiAgICByZXR1cm4gbmV3T2JqO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _objectWithoutPropertiesLoose;\n    }\n}));\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1QkFBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcz83N2Q0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2U7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gICAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gICAgdmFyIHRhcmdldCA9IHt9O1xuICAgIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgICB2YXIga2V5LCBpO1xuICAgIGZvcihpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspe1xuICAgICAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./components/Day/Day.module.scss":
/*!****************************************!*\
  !*** ./components/Day/Day.module.scss ***!
  \****************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"wrap\": \"Day_wrap__KevKU\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0RheS9EYXkubW9kdWxlLnNjc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9EYXkvRGF5Lm1vZHVsZS5zY3NzP2Q4ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwid3JhcFwiOiBcIkRheV93cmFwX19LZXZLVVwiXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Day/Day.module.scss\n");

/***/ }),

/***/ "./components/Nav/Nav.module.scss":
/*!****************************************!*\
  !*** ./components/Nav/Nav.module.scss ***!
  \****************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"wrap\": \"Nav_wrap__XlS8C\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05hdi9OYXYubW9kdWxlLnNjc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9OYXYvTmF2Lm1vZHVsZS5zY3NzP2M4MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwid3JhcFwiOiBcIk5hdl93cmFwX19YbFM4Q1wiXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Nav/Nav.module.scss\n");

/***/ }),

/***/ "./components/ShareButtonContainer/ShareButtonContainer.module.scss":
/*!**************************************************************************!*\
  !*** ./components/ShareButtonContainer/ShareButtonContainer.module.scss ***!
  \**************************************************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"wrap\": \"ShareButtonContainer_wrap__GAb9n\",\n\t\"box\": \"ShareButtonContainer_box__isLpr\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NoYXJlQnV0dG9uQ29udGFpbmVyL1NoYXJlQnV0dG9uQ29udGFpbmVyLm1vZHVsZS5zY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9TaGFyZUJ1dHRvbkNvbnRhaW5lci9TaGFyZUJ1dHRvbkNvbnRhaW5lci5tb2R1bGUuc2Nzcz8wMWExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0ge1xuXHRcIndyYXBcIjogXCJTaGFyZUJ1dHRvbkNvbnRhaW5lcl93cmFwX19HQWI5blwiLFxuXHRcImJveFwiOiBcIlNoYXJlQnV0dG9uQ29udGFpbmVyX2JveF9faXNMcHJcIlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ShareButtonContainer/ShareButtonContainer.module.scss\n");

/***/ }),

/***/ "./components/Tag/Tag.module.scss":
/*!****************************************!*\
  !*** ./components/Tag/Tag.module.scss ***!
  \****************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"wrap\": \"Tag_wrap__cLv_f\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZy9UYWcubW9kdWxlLnNjc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9UYWcvVGFnLm1vZHVsZS5zY3NzP2Y3NWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwid3JhcFwiOiBcIlRhZ193cmFwX19jTHZfZlwiXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Tag/Tag.module.scss\n");

/***/ }),

/***/ "./components/TagLinkContainer/TagLinkContainer.module.scss":
/*!******************************************************************!*\
  !*** ./components/TagLinkContainer/TagLinkContainer.module.scss ***!
  \******************************************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"wrap\": \"TagLinkContainer_wrap__2COm3\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZ0xpbmtDb250YWluZXIvVGFnTGlua0NvbnRhaW5lci5tb2R1bGUuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL1RhZ0xpbmtDb250YWluZXIvVGFnTGlua0NvbnRhaW5lci5tb2R1bGUuc2Nzcz83MmU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0ge1xuXHRcIndyYXBcIjogXCJUYWdMaW5rQ29udGFpbmVyX3dyYXBfXzJDT20zXCJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/TagLinkContainer/TagLinkContainer.module.scss\n");

/***/ }),

/***/ "./components/Day/Day.tsx":
/*!********************************!*\
  !*** ./components/Day/Day.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Day\": () => (/* binding */ Day)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs */ \"dayjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var dayjs_locale_ja__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/locale/ja */ \"dayjs/locale/ja\");\n/* harmony import */ var dayjs_locale_ja__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_locale_ja__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Day_module_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Day.module.scss */ \"./components/Day/Day.module.scss\");\n/* harmony import */ var _Day_module_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Day_module_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\ndayjs__WEBPACK_IMPORTED_MODULE_1___default().locale((dayjs_locale_ja__WEBPACK_IMPORTED_MODULE_2___default()));\nconst Day = ({ head: { created  }  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        className: (_Day_module_scss__WEBPACK_IMPORTED_MODULE_3___default().wrap),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"time\", {\n            dateTime: dayjs__WEBPACK_IMPORTED_MODULE_1___default()(created).format(\"YYYY-MM-DD\"),\n            children: dayjs__WEBPACK_IMPORTED_MODULE_1___default()(created).format(\"YYYY/MM/DD\")\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Day/Day.tsx\",\n            lineNumber: 13,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Day/Day.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0RheS9EYXkudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDTztBQUVNO0FBRXZDQSxtREFBWSxDQUFDQyx3REFBRUE7QUFFUixNQUFNRyxNQUFvRCxDQUFDLEVBQ2hFQyxNQUFNLEVBQUVDLFFBQU8sRUFBRSxHQUNsQixHQUFLO0lBQ0oscUJBQ0UsOERBQUNDO1FBQUVDLFdBQVdOLDhEQUFXO2tCQUN2Qiw0RUFBQ1E7WUFBS0MsVUFBVVgsNENBQUtBLENBQUNNLFNBQVNNLE1BQU0sQ0FBQztzQkFDbkNaLDRDQUFLQSxDQUFDTSxTQUFTTSxNQUFNLENBQUM7Ozs7Ozs7Ozs7O0FBSS9CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9EYXkvRGF5LnRzeD83MWQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgamEgZnJvbSAnZGF5anMvbG9jYWxlL2phJztcbmltcG9ydCB7IEFydGljbGVzIH0gZnJvbSAnfi9yZXBvc2l0b3JpZXMvYXJ0aWNsZSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vRGF5Lm1vZHVsZS5zY3NzJztcblxuZGF5anMubG9jYWxlKGphKTtcblxuZXhwb3J0IGNvbnN0IERheTogUmVhY3QuRkM8eyBoZWFkOiBBcnRpY2xlc1tudW1iZXJdWydoZWFkJ10gfT4gPSAoe1xuICBoZWFkOiB7IGNyZWF0ZWQgfSxcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8cCBjbGFzc05hbWU9e3N0eWxlcy53cmFwfT5cbiAgICAgIDx0aW1lIGRhdGVUaW1lPXtkYXlqcyhjcmVhdGVkKS5mb3JtYXQoJ1lZWVktTU0tREQnKX0+XG4gICAgICAgIHtkYXlqcyhjcmVhdGVkKS5mb3JtYXQoJ1lZWVkvTU0vREQnKX1cbiAgICAgIDwvdGltZT5cbiAgICA8L3A+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbImRheWpzIiwiamEiLCJzdHlsZXMiLCJsb2NhbGUiLCJEYXkiLCJoZWFkIiwiY3JlYXRlZCIsInAiLCJjbGFzc05hbWUiLCJ3cmFwIiwidGltZSIsImRhdGVUaW1lIiwiZm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Day/Day.tsx\n");

/***/ }),

/***/ "./components/Day/index.ts":
/*!*********************************!*\
  !*** ./components/Day/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Day__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Day */ \"./components/Day/Day.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Day__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Day__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0RheS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL0RheS9pbmRleC50cz9lNzc4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vRGF5JztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Day/index.ts\n");

/***/ }),

/***/ "./components/Footer/Footer.tsx":
/*!**************************************!*\
  !*** ./components/Footer/Footer.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Footer\": () => (/* binding */ Footer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"../../node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// import Link from 'next/link';\nconst Footer = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n        className: \"flex flex-col place-items-center space-y-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                alt: \"did0es\",\n                src: \"/images/icon.svg\",\n                width: 64,\n                height: 64\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Footer/Footer.tsx\",\n                lineNumber: 6,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"\\xa9 2021 did0es\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Footer/Footer.tsx\",\n                lineNumber: 18,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Footer/Footer.tsx\",\n        lineNumber: 5,\n        columnNumber: 3\n    }, undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zvb3Rlci9Gb290ZXIudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUMvQixnQ0FBZ0M7QUFFekIsTUFBTUMsU0FBbUIsa0JBQzlCLDhEQUFDQztRQUFPQyxXQUFVOzswQkFDaEIsOERBQUNILG1EQUFLQTtnQkFDSkksS0FBSTtnQkFDSkMsS0FBSTtnQkFDSkMsT0FBTztnQkFDUEMsUUFBUTs7Ozs7OzBCQVFWLDhEQUFDQzswQkFBSTs7Ozs7Ozs7Ozs7a0JBT1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9Gb290ZXIvRm9vdGVyLnRzeD85NDM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJbWFnZSBmcm9tICduZXh0L2ltYWdlJztcbi8vIGltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5cbmV4cG9ydCBjb25zdCBGb290ZXI6IFJlYWN0LkZDID0gKCkgPT4gKFxuICA8Zm9vdGVyIGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgcGxhY2UtaXRlbXMtY2VudGVyIHNwYWNlLXktNFwiPlxuICAgIDxJbWFnZVxuICAgICAgYWx0PVwiZGlkMGVzXCJcbiAgICAgIHNyYz1cIi9pbWFnZXMvaWNvbi5zdmdcIlxuICAgICAgd2lkdGg9ezY0fVxuICAgICAgaGVpZ2h0PXs2NH1cbiAgICAvPlxuICAgIHsvKlxuICAgIDxMaW5rXG4gICAgICBocmVmPVwiaHR0cHM6Ly9zdHVkaW8uZGlkMGVzLm1lXCJcbiAgICAgIHBhc3NIcmVmPXt0cnVlfVxuICAgID5cbiAgICAqL31cbiAgICA8ZGl2PlxuICAgICAgJiMxNjk7IDIwMjEgZGlkMGVzXG4gICAgPC9kaXY+XG4gICAgey8qXG4gICAgPC9MaW5rPlxuICAgICovfVxuICA8L2Zvb3Rlcj5cbik7XG4iXSwibmFtZXMiOlsiSW1hZ2UiLCJGb290ZXIiLCJmb290ZXIiLCJjbGFzc05hbWUiLCJhbHQiLCJzcmMiLCJ3aWR0aCIsImhlaWdodCIsImRpdiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Footer/Footer.tsx\n");

/***/ }),

/***/ "./components/Footer/index.ts":
/*!************************************!*\
  !*** ./components/Footer/index.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Footer */ \"./components/Footer/Footer.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Footer__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Footer__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zvb3Rlci9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL0Zvb3Rlci9pbmRleC50cz81Y2Y0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vRm9vdGVyJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Footer/index.ts\n");

/***/ }),

/***/ "./components/Header/Header.tsx":
/*!**************************************!*\
  !*** ./components/Header/Header.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Header\": () => (/* binding */ Header)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"../../node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst Header = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n            href: \"/\",\n            className: \"space-y-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"font-mono text-center\",\n                children: `{ appearance: none  }`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Header/Header.tsx\",\n                lineNumber: 6,\n                columnNumber: 7\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Header/Header.tsx\",\n            lineNumber: 5,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Header/Header.tsx\",\n        lineNumber: 4,\n        columnNumber: 3\n    }, undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0hlYWRlci9IZWFkZXIudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2QjtBQUV0QixNQUFNQyxTQUFtQixrQkFDOUIsOERBQUNDO2tCQUNDLDRFQUFDRixrREFBSUE7WUFBQ0csTUFBSztZQUFJQyxXQUFVO3NCQUN2Qiw0RUFBQ0M7Z0JBQUdELFdBQVU7MEJBQXlCLENBQUMscUJBQXFCLENBQUM7Ozs7Ozs7Ozs7Ozs7OztrQkFHbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLnRzeD9lN2RjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5cbmV4cG9ydCBjb25zdCBIZWFkZXI6IFJlYWN0LkZDID0gKCkgPT4gKFxuICA8aGVhZGVyPlxuICAgIDxMaW5rIGhyZWY9XCIvXCIgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwiZm9udC1tb25vIHRleHQtY2VudGVyXCI+e2B7IGFwcGVhcmFuY2U6IG5vbmUgIH1gfTwvaDE+XG4gICAgPC9MaW5rPlxuICA8L2hlYWRlcj5cbik7XG4iXSwibmFtZXMiOlsiTGluayIsIkhlYWRlciIsImhlYWRlciIsImhyZWYiLCJjbGFzc05hbWUiLCJoMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Header/Header.tsx\n");

/***/ }),

/***/ "./components/Header/index.ts":
/*!************************************!*\
  !*** ./components/Header/index.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Header */ \"./components/Header/Header.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Header__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Header__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0hlYWRlci9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL0hlYWRlci9pbmRleC50cz83NWU1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vSGVhZGVyJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Header/index.ts\n");

/***/ }),

/***/ "./components/Layouts/BaseLayout.tsx":
/*!*******************************************!*\
  !*** ./components/Layouts/BaseLayout.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseLayout\": () => (/* binding */ BaseLayout),\n/* harmony export */   \"getBaseLayout\": () => (/* binding */ getBaseLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Footer */ \"./components/Footer/index.ts\");\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Header */ \"./components/Header/index.ts\");\n\n\n\nconst BaseLayout = ({ children  })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Header__WEBPACK_IMPORTED_MODULE_2__.Header, {}, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Layouts/BaseLayout.tsx\",\n                lineNumber: 7,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Layouts/BaseLayout.tsx\",\n                lineNumber: 8,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Footer__WEBPACK_IMPORTED_MODULE_1__.Footer, {}, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Layouts/BaseLayout.tsx\",\n                lineNumber: 9,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true);\nconst getBaseLayout = (page)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BaseLayout, {\n        children: page\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Layouts/BaseLayout.tsx\",\n        lineNumber: 14,\n        columnNumber: 3\n    }, undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0xheW91dHMvQmFzZUxheW91dC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNtQztBQUNBO0FBRTVCLE1BQU1FLGFBQW9DLENBQUMsRUFBRUMsU0FBUSxFQUFFLGlCQUM1RDs7MEJBQ0UsOERBQUNGLDJDQUFNQTs7Ozs7MEJBQ1AsOERBQUNHOzBCQUFNRDs7Ozs7OzBCQUNQLDhEQUFDSCwyQ0FBTUE7Ozs7OztxQkFFVDtBQUVLLE1BQU1LLGdCQUFnQixDQUFDQyxxQkFDNUIsOERBQUNKO2tCQUFZSTs7Ozs7a0JBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9MYXlvdXRzL0Jhc2VMYXlvdXQudHN4PzFjZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRkMsIFByb3BzV2l0aENoaWxkcmVuLCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb290ZXIgfSBmcm9tICcuLi9Gb290ZXInO1xuaW1wb3J0IHsgSGVhZGVyIH0gZnJvbSAnLi4vSGVhZGVyJztcblxuZXhwb3J0IGNvbnN0IEJhc2VMYXlvdXQ6IEZDPFByb3BzV2l0aENoaWxkcmVuPiA9ICh7IGNoaWxkcmVuIH0pID0+IChcbiAgPD5cbiAgICA8SGVhZGVyIC8+XG4gICAgPG1haW4+e2NoaWxkcmVufTwvbWFpbj5cbiAgICA8Rm9vdGVyIC8+XG4gIDwvPlxuKTtcblxuZXhwb3J0IGNvbnN0IGdldEJhc2VMYXlvdXQgPSAocGFnZTogUmVhY3ROb2RlKSA9PiAoXG4gIDxCYXNlTGF5b3V0PntwYWdlfTwvQmFzZUxheW91dD5cbik7XG4iXSwibmFtZXMiOlsiRm9vdGVyIiwiSGVhZGVyIiwiQmFzZUxheW91dCIsImNoaWxkcmVuIiwibWFpbiIsImdldEJhc2VMYXlvdXQiLCJwYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Layouts/BaseLayout.tsx\n");

/***/ }),

/***/ "./components/Nav/Nav.tsx":
/*!********************************!*\
  !*** ./components/Nav/Nav.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Nav\": () => (/* binding */ Nav)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"../../node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var utils_str__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils/str */ \"../../packages/utils/str.ts\");\n/* harmony import */ var _Nav_module_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Nav.module.scss */ \"./components/Nav/Nav.module.scss\");\n/* harmony import */ var _Nav_module_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Nav_module_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst MAX_STRING_LENGTH = 20;\nconst Nav = ({ prevEntry , nextEntry  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (_Nav_module_scss__WEBPACK_IMPORTED_MODULE_3___default().wrap),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: prevEntry && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        href: prevEntry.head.slug,\n                        children: (0,utils_str__WEBPACK_IMPORTED_MODULE_2__.summarize)(prevEntry.head.title, MAX_STRING_LENGTH)\n                    }, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n                    lineNumber: 15,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: nextEntry && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        href: nextEntry.head.slug,\n                        children: (0,utils_str__WEBPACK_IMPORTED_MODULE_2__.summarize)(nextEntry.head.title, MAX_STRING_LENGTH)\n                    }, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n            lineNumber: 14,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Nav/Nav.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05hdi9OYXYudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNTO0FBQ0M7QUFHdkMsTUFBTUcsb0JBQW9CO0FBRW5CLE1BQU1DLE1BR1IsQ0FBQyxFQUFFQyxVQUFTLEVBQUVDLFVBQVMsRUFBRSxHQUFLO0lBQ2pDLHFCQUNFLDhEQUFDQztrQkFDQyw0RUFBQ0M7WUFBSUMsV0FBV1AsOERBQVc7OzhCQUN6Qiw4REFBQ1M7OEJBQ0VOLDJCQUNDLDhEQUFDTCxrREFBSUE7d0JBQUNZLE1BQU1QLFVBQVVRLElBQUksQ0FBQ0MsSUFBSTtrQ0FDNUJiLG9EQUFTQSxDQUFDSSxVQUFVUSxJQUFJLENBQUNFLEtBQUssRUFBRVo7Ozs7Ozs7Ozs7OzhCQUl2Qyw4REFBQ1E7OEJBQ0VMLDJCQUNDLDhEQUFDTixrREFBSUE7d0JBQUNZLE1BQU1OLFVBQVVPLElBQUksQ0FBQ0MsSUFBSTtrQ0FDNUJiLG9EQUFTQSxDQUFDSyxVQUFVTyxJQUFJLENBQUNFLEtBQUssRUFBRVo7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPL0MsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL05hdi9OYXYudHN4PzU3ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCB7IHN1bW1hcml6ZSB9IGZyb20gJ3V0aWxzL3N0cic7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vTmF2Lm1vZHVsZS5zY3NzJztcbmltcG9ydCB7IEVudHJpZXMgfSBmcm9tICd+L3VzZWNhc2VzL2dldEJsb2dEYXRhJztcblxuY29uc3QgTUFYX1NUUklOR19MRU5HVEggPSAyMDtcblxuZXhwb3J0IGNvbnN0IE5hdjogUmVhY3QuRkM8e1xuICBwcmV2RW50cnk6IEVudHJpZXNbbnVtYmVyXSB8IG51bGw7XG4gIG5leHRFbnRyeTogRW50cmllc1tudW1iZXJdIHwgbnVsbDtcbn0+ID0gKHsgcHJldkVudHJ5LCBuZXh0RW50cnkgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxuYXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLndyYXB9PlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICB7cHJldkVudHJ5ICYmIChcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9e3ByZXZFbnRyeS5oZWFkLnNsdWd9PlxuICAgICAgICAgICAgICB7c3VtbWFyaXplKHByZXZFbnRyeS5oZWFkLnRpdGxlLCBNQVhfU1RSSU5HX0xFTkdUSCl9XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICB7bmV4dEVudHJ5ICYmIChcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9e25leHRFbnRyeS5oZWFkLnNsdWd9PlxuICAgICAgICAgICAgICB7c3VtbWFyaXplKG5leHRFbnRyeS5oZWFkLnRpdGxlLCBNQVhfU1RSSU5HX0xFTkdUSCl9XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uYXY+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIkxpbmsiLCJzdW1tYXJpemUiLCJzdHlsZXMiLCJNQVhfU1RSSU5HX0xFTkdUSCIsIk5hdiIsInByZXZFbnRyeSIsIm5leHRFbnRyeSIsIm5hdiIsImRpdiIsImNsYXNzTmFtZSIsIndyYXAiLCJzcGFuIiwiaHJlZiIsImhlYWQiLCJzbHVnIiwidGl0bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Nav/Nav.tsx\n");

/***/ }),

/***/ "./components/Nav/index.ts":
/*!*********************************!*\
  !*** ./components/Nav/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Nav__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Nav */ \"./components/Nav/Nav.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Nav__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Nav__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05hdi9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL05hdi9pbmRleC50cz9jOTg3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vTmF2JztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Nav/index.ts\n");

/***/ }),

/***/ "./components/SEO.tsx":
/*!****************************!*\
  !*** ./components/SEO.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SEO\": () => (/* binding */ SEO)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config */ \"./config/index.ts\");\n\n\n\n// see: https://github.com/vercel/next.js/issues/2213#issuecomment-307478160\n// see: https://technicalseo.com/tools/schema-markup-generator/\nconst jsonLd = (args)=>{\n    const { title , updated , url , imageUrl , description  } = args;\n    const json = [\n        {\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"Article\",\n            mainEntityOfPage: {\n                \"@type\": \"WebPage\",\n                \"@id\": url\n            },\n            headline: title,\n            description: description,\n            url: url,\n            image: [\n                imageUrl\n            ],\n            author: {\n                \"@type\": \"Person\",\n                name: \"did0es\",\n                url: \"https://did0es.me\"\n            },\n            publisher: {\n                \"@type\": \"Organization\",\n                name: \"did0es\",\n                url: \"https://did0es.me\",\n                logo: {\n                    \"@type\": \"ImageObject\",\n                    url: \"https://blog.did0es.me/images/icon.png\"\n                }\n            },\n            datePublished: updated,\n            dateModified: updated\n        },\n        {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"BreadcrumbList\",\n            itemListElement: [\n                {\n                    \"@type\": \"ListItem\",\n                    position: 1,\n                    name: _config__WEBPACK_IMPORTED_MODULE_2__.BlogTitle,\n                    item: \"https://blog.did0es.me\"\n                },\n                {\n                    \"@type\": \"ListItem\",\n                    position: 2,\n                    name: title,\n                    item: url\n                }\n            ]\n        }\n    ];\n    return JSON.stringify(json);\n};\nconst SEO = (props)=>{\n    const { title =_config__WEBPACK_IMPORTED_MODULE_2__.BlogTitle , description =_config__WEBPACK_IMPORTED_MODULE_2__.BlogDescription , propsJsonLd =_config__WEBPACK_IMPORTED_MODULE_2__.DefaultJsonId  } = props;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                rel: \"icon\",\n                href: \"/images/icon.png\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 74,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"viewport\",\n                content: \"initial-scale=1.0, width=device-width\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 75,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"description\",\n                content: `${description}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 76,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"twitter:card\",\n                content: \"summary_large_image\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 77,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"twitter:title\",\n                content: `${title}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 78,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"twitter:image\",\n                content: \"https://blog.did0es.me/images/og.png\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 79,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"twitter:description\",\n                content: `${description}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 83,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:locale\",\n                content: \"ja_JP\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 84,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:type\",\n                content: \"website\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 85,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:url\",\n                content: \"https://blog.did0es.me\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:title\",\n                content: `${title}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 87,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:site_name\",\n                content: `${title}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 88,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:description\",\n                content: `${description}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 89,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:image\",\n                content: \"https://blog.did0es.me/images/og.png\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 90,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:image:secure_url\",\n                content: \"https://blog.did0es.me/images/og.png\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 94,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:image:type\",\n                content: \"image/png\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 98,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:image:width\",\n                content: \"1200\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 99,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                property: \"og:image:height\",\n                content: \"630\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 100,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                rel: \"preconnect\",\n                href: \"https://fonts.gstatic.com\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 101,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                children: title === _config__WEBPACK_IMPORTED_MODULE_2__.BlogTitle ? _config__WEBPACK_IMPORTED_MODULE_2__.BlogTitle : `${title} | ${_config__WEBPACK_IMPORTED_MODULE_2__.BlogTitle}`\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 102,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                type: \"application/ld+json\",\n                dangerouslySetInnerHTML: {\n                    __html: jsonLd({\n                        ...propsJsonLd\n                    })\n                }\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n                lineNumber: 106,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/SEO.tsx\",\n        lineNumber: 73,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z0JBQUtFLFVBQVM7Z0JBQWtCRCxTQUFROzs7Ozs7MEJBQ3pDLDhEQUFDSjtnQkFBS0MsS0FBSTtnQkFBYUMsTUFBSzs7Ozs7OzBCQUM1Qiw4REFBQ3pCOzBCQUNFQSxVQUFVSiw4Q0FBU0EsR0FBR0EsOENBQVNBLEdBQUcsQ0FBQyxFQUFFSSxNQUFNLEdBQUcsRUFBRUosOENBQVNBLENBQUMsQ0FBQzs7Ozs7OzBCQUc5RCw4REFBQ2lDO2dCQUNDQyxNQUFLO2dCQUNMQyx5QkFBeUI7b0JBQ3ZCQyxRQUFRbEMsT0FBTzt3QkFBRSxHQUFHd0IsV0FBVztvQkFBQztnQkFDbEM7Ozs7Ozs7Ozs7OztBQUlSLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9TRU8udHN4PzYwZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCB7IEJsb2dEZXNjcmlwdGlvbiwgQmxvZ1RpdGxlLCBEZWZhdWx0SnNvbklkIH0gZnJvbSAnLi4vY29uZmlnJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBwcm9wc0pzb25MZD86IHR5cGVvZiBEZWZhdWx0SnNvbklkO1xufTtcblxuLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvaXNzdWVzLzIyMTMjaXNzdWVjb21tZW50LTMwNzQ3ODE2MFxuLy8gc2VlOiBodHRwczovL3RlY2huaWNhbHNlby5jb20vdG9vbHMvc2NoZW1hLW1hcmt1cC1nZW5lcmF0b3IvXG5jb25zdCBqc29uTGQgPSAoYXJnczogdHlwZW9mIERlZmF1bHRKc29uSWQpID0+IHtcbiAgY29uc3QgeyB0aXRsZSwgdXBkYXRlZCwgdXJsLCBpbWFnZVVybCwgZGVzY3JpcHRpb24gfSA9IGFyZ3M7XG4gIGNvbnN0IGpzb24gPSBbXG4gICAge1xuICAgICAgJ0Bjb250ZXh0JzogJ2h0dHA6Ly9zY2hlbWEub3JnJyxcbiAgICAgICdAdHlwZSc6ICdBcnRpY2xlJyxcbiAgICAgIG1haW5FbnRpdHlPZlBhZ2U6IHtcbiAgICAgICAgJ0B0eXBlJzogJ1dlYlBhZ2UnLFxuICAgICAgICAnQGlkJzogdXJsLFxuICAgICAgfSxcbiAgICAgIGhlYWRsaW5lOiB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbixcbiAgICAgIHVybDogdXJsLFxuICAgICAgaW1hZ2U6IFtpbWFnZVVybF0sXG4gICAgICBhdXRob3I6IHtcbiAgICAgICAgJ0B0eXBlJzogJ1BlcnNvbicsXG4gICAgICAgIG5hbWU6ICdkaWQwZXMnLFxuICAgICAgICB1cmw6ICdodHRwczovL2RpZDBlcy5tZScsXG4gICAgICB9LFxuICAgICAgcHVibGlzaGVyOiB7XG4gICAgICAgICdAdHlwZSc6ICdPcmdhbml6YXRpb24nLFxuICAgICAgICBuYW1lOiAnZGlkMGVzJyxcbiAgICAgICAgdXJsOiAnaHR0cHM6Ly9kaWQwZXMubWUnLFxuICAgICAgICBsb2dvOiB7XG4gICAgICAgICAgJ0B0eXBlJzogJ0ltYWdlT2JqZWN0JyxcbiAgICAgICAgICB1cmw6ICdodHRwczovL2Jsb2cuZGlkMGVzLm1lL2ltYWdlcy9pY29uLnBuZycsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgZGF0ZVB1Ymxpc2hlZDogdXBkYXRlZCxcbiAgICAgIGRhdGVNb2RpZmllZDogdXBkYXRlZCxcbiAgICB9LFxuICAgIHtcbiAgICAgICdAY29udGV4dCc6ICdodHRwczovL3NjaGVtYS5vcmcnLFxuICAgICAgJ0B0eXBlJzogJ0JyZWFkY3J1bWJMaXN0JyxcbiAgICAgIGl0ZW1MaXN0RWxlbWVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgJ0B0eXBlJzogJ0xpc3RJdGVtJyxcbiAgICAgICAgICBwb3NpdGlvbjogMSxcbiAgICAgICAgICBuYW1lOiBCbG9nVGl0bGUsXG4gICAgICAgICAgaXRlbTogJ2h0dHBzOi8vYmxvZy5kaWQwZXMubWUnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgJ0B0eXBlJzogJ0xpc3RJdGVtJyxcbiAgICAgICAgICBwb3NpdGlvbjogMixcbiAgICAgICAgICBuYW1lOiB0aXRsZSxcbiAgICAgICAgICBpdGVtOiB1cmwsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gIF07XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShqc29uKTtcbn07XG5cbmV4cG9ydCBjb25zdCBTRU86IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgdGl0bGUgPSBCbG9nVGl0bGUsXG4gICAgZGVzY3JpcHRpb24gPSBCbG9nRGVzY3JpcHRpb24sXG4gICAgcHJvcHNKc29uTGQgPSBEZWZhdWx0SnNvbklkLFxuICB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8SGVhZD5cbiAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2ltYWdlcy9pY29uLnBuZ1wiIC8+XG4gICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwiaW5pdGlhbC1zY2FsZT0xLjAsIHdpZHRoPWRldmljZS13aWR0aFwiIC8+XG4gICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtgJHtkZXNjcmlwdGlvbn1gfSAvPlxuICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6Y2FyZFwiIGNvbnRlbnQ9XCJzdW1tYXJ5X2xhcmdlX2ltYWdlXCIgLz5cbiAgICAgIDxtZXRhIG5hbWU9XCJ0d2l0dGVyOnRpdGxlXCIgY29udGVudD17YCR7dGl0bGV9YH0gLz5cbiAgICAgIDxtZXRhXG4gICAgICAgIG5hbWU9XCJ0d2l0dGVyOmltYWdlXCJcbiAgICAgICAgY29udGVudD1cImh0dHBzOi8vYmxvZy5kaWQwZXMubWUvaW1hZ2VzL29nLnBuZ1wiXG4gICAgICAvPlxuICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6ZGVzY3JpcHRpb25cIiBjb250ZW50PXtgJHtkZXNjcmlwdGlvbn1gfSAvPlxuICAgICAgPG1ldGEgcHJvcGVydHk9XCJvZzpsb2NhbGVcIiBjb250ZW50PVwiamFfSlBcIiAvPlxuICAgICAgPG1ldGEgcHJvcGVydHk9XCJvZzp0eXBlXCIgY29udGVudD1cIndlYnNpdGVcIiAvPlxuICAgICAgPG1ldGEgcHJvcGVydHk9XCJvZzp1cmxcIiBjb250ZW50PVwiaHR0cHM6Ly9ibG9nLmRpZDBlcy5tZVwiIC8+XG4gICAgICA8bWV0YSBwcm9wZXJ0eT1cIm9nOnRpdGxlXCIgY29udGVudD17YCR7dGl0bGV9YH0gLz5cbiAgICAgIDxtZXRhIHByb3BlcnR5PVwib2c6c2l0ZV9uYW1lXCIgY29udGVudD17YCR7dGl0bGV9YH0gLz5cbiAgICAgIDxtZXRhIHByb3BlcnR5PVwib2c6ZGVzY3JpcHRpb25cIiBjb250ZW50PXtgJHtkZXNjcmlwdGlvbn1gfSAvPlxuICAgICAgPG1ldGFcbiAgICAgICAgcHJvcGVydHk9XCJvZzppbWFnZVwiXG4gICAgICAgIGNvbnRlbnQ9XCJodHRwczovL2Jsb2cuZGlkMGVzLm1lL2ltYWdlcy9vZy5wbmdcIlxuICAgICAgLz5cbiAgICAgIDxtZXRhXG4gICAgICAgIHByb3BlcnR5PVwib2c6aW1hZ2U6c2VjdXJlX3VybFwiXG4gICAgICAgIGNvbnRlbnQ9XCJodHRwczovL2Jsb2cuZGlkMGVzLm1lL2ltYWdlcy9vZy5wbmdcIlxuICAgICAgLz5cbiAgICAgIDxtZXRhIHByb3BlcnR5PVwib2c6aW1hZ2U6dHlwZVwiIGNvbnRlbnQ9XCJpbWFnZS9wbmdcIiAvPlxuICAgICAgPG1ldGEgcHJvcGVydHk9XCJvZzppbWFnZTp3aWR0aFwiIGNvbnRlbnQ9XCIxMjAwXCIgLz5cbiAgICAgIDxtZXRhIHByb3BlcnR5PVwib2c6aW1hZ2U6aGVpZ2h0XCIgY29udGVudD1cIjYzMFwiIC8+XG4gICAgICA8bGluayByZWw9XCJwcmVjb25uZWN0XCIgaHJlZj1cImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb21cIiAvPlxuICAgICAgPHRpdGxlPlxuICAgICAgICB7dGl0bGUgPT09IEJsb2dUaXRsZSA/IEJsb2dUaXRsZSA6IGAke3RpdGxlfSB8ICR7QmxvZ1RpdGxlfWB9XG4gICAgICA8L3RpdGxlPlxuXG4gICAgICA8c2NyaXB0XG4gICAgICAgIHR5cGU9XCJhcHBsaWNhdGlvbi9sZCtqc29uXCJcbiAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICBfX2h0bWw6IGpzb25MZCh7IC4uLnByb3BzSnNvbkxkIH0pLFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L0hlYWQ+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIkhlYWQiLCJCbG9nRGVzY3JpcHRpb24iLCJCbG9nVGl0bGUiLCJEZWZhdWx0SnNvbklkIiwianNvbkxkIiwiYXJncyIsInRpdGxlIiwidXBkYXRlZCIsInVybCIsImltYWdlVXJsIiwiZGVzY3JpcHRpb24iLCJqc29uIiwibWFpbkVudGl0eU9mUGFnZSIsImhlYWRsaW5lIiwiaW1hZ2UiLCJhdXRob3IiLCJuYW1lIiwicHVibGlzaGVyIiwibG9nbyIsImRhdGVQdWJsaXNoZWQiLCJkYXRlTW9kaWZpZWQiLCJpdGVtTGlzdEVsZW1lbnQiLCJwb3NpdGlvbiIsIml0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwiU0VPIiwicHJvcHMiLCJwcm9wc0pzb25MZCIsImxpbmsiLCJyZWwiLCJocmVmIiwibWV0YSIsImNvbnRlbnQiLCJwcm9wZXJ0eSIsInNjcmlwdCIsInR5cGUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/SEO.tsx\n");

/***/ }),

/***/ "./components/ShareButtonContainer/ShareButtonContainer.tsx":
/*!******************************************************************!*\
  !*** ./components/ShareButtonContainer/ShareButtonContainer.tsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShareButtonContainer\": () => (/* binding */ ShareButtonContainer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/image */ \"../../node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ShareButtonContainer_module_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ShareButtonContainer.module.scss */ \"./components/ShareButtonContainer/ShareButtonContainer.module.scss\");\n/* harmony import */ var _ShareButtonContainer_module_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ShareButtonContainer_module_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var utils_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils/hooks */ \"../../packages/utils/hooks/index.ts\");\n\n\n\n\nconst ShareButtonContainer = ()=>{\n    const { mounted  } = (0,utils_hooks__WEBPACK_IMPORTED_MODULE_2__.useMount)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_ShareButtonContainer_module_scss__WEBPACK_IMPORTED_MODULE_3___default().wrap),\n        children: mounted && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                    href: \"https://twitter.com/share?ref_src=twsrc%5Etfw\",\n                    className: \"twitter-share-button\",\n                    \"data-show-count\": \"false\",\n                    style: {\n                        outline: \"none\"\n                    },\n                    children: \"Tweet\"\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ShareButtonContainer/ShareButtonContainer.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                    href: \"https://b.hatena.ne.jp/entry/\",\n                    className: \"hatena-bookmark-button\",\n                    \"data-hatena-bookmark-layout\": \"basic-label\",\n                    \"data-hatena-bookmark-lang\": \"ja\",\n                    title: \"このエントリーをはてなブックマークに追加\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        src: \"https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png\",\n                        alt: \"このエントリーをはてなブックマークに追加\",\n                        width: \"20\",\n                        height: \"20\",\n                        style: {\n                            border: \"none\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ShareButtonContainer/ShareButtonContainer.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ShareButtonContainer/ShareButtonContainer.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true)\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ShareButtonContainer/ShareButtonContainer.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NoYXJlQnV0dG9uQ29udGFpbmVyL1NoYXJlQnV0dG9uQ29udGFpbmVyLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBK0I7QUFDeUI7QUFDakI7QUFFaEMsTUFBTUcsdUJBQWlDLElBQU07SUFDbEQsTUFBTSxFQUFFQyxRQUFPLEVBQUUsR0FBR0YscURBQVFBO0lBQzVCLHFCQUNFLDhEQUFDRztRQUFJQyxXQUFXTCwrRUFBVztrQkFDeEJHLHlCQUNDOzs4QkFDRSw4REFBQ0k7b0JBQ0NDLE1BQUs7b0JBQ0xILFdBQVU7b0JBQ1ZJLG1CQUFnQjtvQkFDaEJDLE9BQU87d0JBQUVDLFNBQVM7b0JBQU87OEJBQzFCOzs7Ozs7OEJBR0QsOERBQUNKO29CQUNDQyxNQUFLO29CQUNMSCxXQUFVO29CQUNWTywrQkFBNEI7b0JBQzVCQyw2QkFBMEI7b0JBQzFCQyxPQUFNOzhCQUVOLDRFQUFDZixtREFBS0E7d0JBQ0pnQixLQUFJO3dCQUNKQyxLQUFJO3dCQUNKQyxPQUFNO3dCQUNOQyxRQUFPO3dCQUNQUixPQUFPOzRCQUFFUyxRQUFRO3dCQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPdEMsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL1NoYXJlQnV0dG9uQ29udGFpbmVyL1NoYXJlQnV0dG9uQ29udGFpbmVyLnRzeD9mYWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJbWFnZSBmcm9tICduZXh0L2ltYWdlJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9TaGFyZUJ1dHRvbkNvbnRhaW5lci5tb2R1bGUuc2Nzcyc7XG5pbXBvcnQgeyB1c2VNb3VudCB9IGZyb20gJ3V0aWxzL2hvb2tzJztcblxuZXhwb3J0IGNvbnN0IFNoYXJlQnV0dG9uQ29udGFpbmVyOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgeyBtb3VudGVkIH0gPSB1c2VNb3VudCgpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMud3JhcH0+XG4gICAgICB7bW91bnRlZCAmJiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3NoYXJlP3JlZl9zcmM9dHdzcmMlNUV0ZndcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidHdpdHRlci1zaGFyZS1idXR0b25cIlxuICAgICAgICAgICAgZGF0YS1zaG93LWNvdW50PVwiZmFsc2VcIlxuICAgICAgICAgICAgc3R5bGU9e3sgb3V0bGluZTogJ25vbmUnIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgVHdlZXRcbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2IuaGF0ZW5hLm5lLmpwL2VudHJ5L1wiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJoYXRlbmEtYm9va21hcmstYnV0dG9uXCJcbiAgICAgICAgICAgIGRhdGEtaGF0ZW5hLWJvb2ttYXJrLWxheW91dD1cImJhc2ljLWxhYmVsXCJcbiAgICAgICAgICAgIGRhdGEtaGF0ZW5hLWJvb2ttYXJrLWxhbmc9XCJqYVwiXG4gICAgICAgICAgICB0aXRsZT1cIuOBk+OBruOCqOODs+ODiOODquODvOOCkuOBr+OBpuOBquODluODg+OCr+ODnuODvOOCr+OBq+i/veWKoFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vYi5zdC1oYXRlbmEuY29tL2ltYWdlcy92NC9wdWJsaWMvZW50cnktYnV0dG9uL2J1dHRvbi1vbmx5QDJ4LnBuZ1wiXG4gICAgICAgICAgICAgIGFsdD1cIuOBk+OBruOCqOODs+ODiOODquODvOOCkuOBr+OBpuOBquODluODg+OCr+ODnuODvOOCr+OBq+i/veWKoFwiXG4gICAgICAgICAgICAgIHdpZHRoPVwiMjBcIlxuICAgICAgICAgICAgICBoZWlnaHQ9XCIyMFwiXG4gICAgICAgICAgICAgIHN0eWxlPXt7IGJvcmRlcjogJ25vbmUnIH19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdLCJuYW1lcyI6WyJJbWFnZSIsInN0eWxlcyIsInVzZU1vdW50IiwiU2hhcmVCdXR0b25Db250YWluZXIiLCJtb3VudGVkIiwiZGl2IiwiY2xhc3NOYW1lIiwid3JhcCIsImEiLCJocmVmIiwiZGF0YS1zaG93LWNvdW50Iiwic3R5bGUiLCJvdXRsaW5lIiwiZGF0YS1oYXRlbmEtYm9va21hcmstbGF5b3V0IiwiZGF0YS1oYXRlbmEtYm9va21hcmstbGFuZyIsInRpdGxlIiwic3JjIiwiYWx0Iiwid2lkdGgiLCJoZWlnaHQiLCJib3JkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ShareButtonContainer/ShareButtonContainer.tsx\n");

/***/ }),

/***/ "./components/ShareButtonContainer/index.ts":
/*!**************************************************!*\
  !*** ./components/ShareButtonContainer/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ShareButtonContainer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ShareButtonContainer */ \"./components/ShareButtonContainer/ShareButtonContainer.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _ShareButtonContainer__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _ShareButtonContainer__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NoYXJlQnV0dG9uQ29udGFpbmVyL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uL2NvbXBvbmVudHMvU2hhcmVCdXR0b25Db250YWluZXIvaW5kZXgudHM/N2M1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL1NoYXJlQnV0dG9uQ29udGFpbmVyJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ShareButtonContainer/index.ts\n");

/***/ }),

/***/ "./components/Tag/Tag.tsx":
/*!********************************!*\
  !*** ./components/Tag/Tag.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tag\": () => (/* binding */ Tag)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"../../node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Tag_module_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tag.module.scss */ \"./components/Tag/Tag.module.scss\");\n/* harmony import */ var _Tag_module_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Tag_module_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst Tag = ({ tagName  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n        href: `/tags/${tagName}`,\n        className: (_Tag_module_scss__WEBPACK_IMPORTED_MODULE_2___default().wrap),\n        children: [\n            \"#\",\n            tagName\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Tag/Tag.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZy9UYWcudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTZCO0FBRVU7QUFFaEMsTUFBTUUsTUFBcUMsQ0FBQyxFQUFFQyxRQUFPLEVBQUUsR0FBSztJQUNqRSxxQkFDRSw4REFBQ0gsa0RBQUlBO1FBQUNJLE1BQU0sQ0FBQyxNQUFNLEVBQUVELFFBQVEsQ0FBQztRQUFFRSxXQUFXSiw4REFBVzs7WUFBRTtZQUNwREU7Ozs7Ozs7QUFHUixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uL2NvbXBvbmVudHMvVGFnL1RhZy50c3g/ZTQxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IHsgVGFnc01hcCB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vVGFnLm1vZHVsZS5zY3NzJztcblxuZXhwb3J0IGNvbnN0IFRhZzogUmVhY3QuRkM8eyB0YWdOYW1lOiBzdHJpbmcgfT4gPSAoeyB0YWdOYW1lIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGluayBocmVmPXtgL3RhZ3MvJHt0YWdOYW1lfWB9IGNsYXNzTmFtZT17c3R5bGVzLndyYXB9PlxuICAgICAgI3t0YWdOYW1lfVxuICAgIDwvTGluaz5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiTGluayIsInN0eWxlcyIsIlRhZyIsInRhZ05hbWUiLCJocmVmIiwiY2xhc3NOYW1lIiwid3JhcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Tag/Tag.tsx\n");

/***/ }),

/***/ "./components/Tag/index.ts":
/*!*********************************!*\
  !*** ./components/Tag/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Tag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tag */ \"./components/Tag/Tag.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Tag__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Tag__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL1RhZy9pbmRleC50cz9mZjNhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vVGFnJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Tag/index.ts\n");

/***/ }),

/***/ "./components/TagLinkContainer/TagLinkContainer.tsx":
/*!**********************************************************!*\
  !*** ./components/TagLinkContainer/TagLinkContainer.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TagLinkContainer\": () => (/* binding */ TagLinkContainer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Tag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tag */ \"./components/Tag/index.ts\");\n/* harmony import */ var _TagLinkContainer_module_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TagLinkContainer.module.scss */ \"./components/TagLinkContainer/TagLinkContainer.module.scss\");\n/* harmony import */ var _TagLinkContainer_module_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_TagLinkContainer_module_scss__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst TagLinkContainer = ({ head: { tags  }  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: tags.map((tag)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: (_TagLinkContainer_module_scss__WEBPACK_IMPORTED_MODULE_2___default().wrap),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Tag__WEBPACK_IMPORTED_MODULE_1__.Tag, {\n                    tagName: tag\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/TagLinkContainer/TagLinkContainer.tsx\",\n                    lineNumber: 12,\n                    columnNumber: 11\n                }, undefined)\n            }, tag, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/TagLinkContainer/TagLinkContainer.tsx\",\n                lineNumber: 11,\n                columnNumber: 9\n            }, undefined))\n    }, void 0, false, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/TagLinkContainer/TagLinkContainer.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZ0xpbmtDb250YWluZXIvVGFnTGlua0NvbnRhaW5lci50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUM2QjtBQUN1QjtBQUU3QyxNQUFNRSxtQkFBaUUsQ0FBQyxFQUM3RUMsTUFBTSxFQUFFQyxLQUFJLEVBQUUsR0FDZixHQUFLO0lBQ0oscUJBQ0UsOERBQUNDO2tCQUNFRCxLQUFLRSxHQUFHLENBQUMsQ0FBQ0Msb0JBQ1QsOERBQUNDO2dCQUFLQyxXQUFXUiwyRUFBVzswQkFDMUIsNEVBQUNELHFDQUFHQTtvQkFBQ1csU0FBU0o7Ozs7OztlQURtQkE7Ozs7Ozs7Ozs7QUFNM0MsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb21wb25lbnRzL1RhZ0xpbmtDb250YWluZXIvVGFnTGlua0NvbnRhaW5lci50c3g/OTQ0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcnRpY2xlcyB9IGZyb20gJ34vcmVwb3NpdG9yaWVzL2FydGljbGUnO1xuaW1wb3J0IHsgVGFnIH0gZnJvbSAnLi4vVGFnJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9UYWdMaW5rQ29udGFpbmVyLm1vZHVsZS5zY3NzJztcblxuZXhwb3J0IGNvbnN0IFRhZ0xpbmtDb250YWluZXI6IFJlYWN0LkZDPHsgaGVhZDogQXJ0aWNsZXNbbnVtYmVyXVsnaGVhZCddIH0+ID0gKHtcbiAgaGVhZDogeyB0YWdzIH0sXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIHt0YWdzLm1hcCgodGFnKSA9PiAoXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT17c3R5bGVzLndyYXB9IGtleT17dGFnfT5cbiAgICAgICAgICA8VGFnIHRhZ05hbWU9e3RhZ30gLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKSl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIlRhZyIsInN0eWxlcyIsIlRhZ0xpbmtDb250YWluZXIiLCJoZWFkIiwidGFncyIsImRpdiIsIm1hcCIsInRhZyIsInNwYW4iLCJjbGFzc05hbWUiLCJ3cmFwIiwidGFnTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/TagLinkContainer/TagLinkContainer.tsx\n");

/***/ }),

/***/ "./components/TagLinkContainer/index.ts":
/*!**********************************************!*\
  !*** ./components/TagLinkContainer/index.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TagLinkContainer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TagLinkContainer */ \"./components/TagLinkContainer/TagLinkContainer.tsx\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _TagLinkContainer__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _TagLinkContainer__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RhZ0xpbmtDb250YWluZXIvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9UYWdMaW5rQ29udGFpbmVyL2luZGV4LnRzPzliYmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9UYWdMaW5rQ29udGFpbmVyJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/TagLinkContainer/index.ts\n");

/***/ }),

/***/ "./components/Template.tsx":
/*!*********************************!*\
  !*** ./components/Template.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Template\": () => (/* binding */ Template)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/config */ \"./config/index.ts\");\n/* harmony import */ var _Day__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Day */ \"./components/Day/index.ts\");\n/* harmony import */ var _SEO__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SEO */ \"./components/SEO.tsx\");\n/* harmony import */ var utils_str__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! utils/str */ \"../../packages/utils/str.ts\");\n/* harmony import */ var _ShareButtonContainer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ShareButtonContainer */ \"./components/ShareButtonContainer/index.ts\");\n/* harmony import */ var _TagLinkContainer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TagLinkContainer */ \"./components/TagLinkContainer/index.ts\");\n/* harmony import */ var _ToC__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ToC */ \"./components/ToC.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! utils/notion-block-renderer */ \"../../packages/utils/notion-block-renderer.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ToC__WEBPACK_IMPORTED_MODULE_7__]);\n_ToC__WEBPACK_IMPORTED_MODULE_7__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\nconst Template = (props)=>{\n    const { head , body  } = props;\n    const html = body.map((body)=>body.htmlStr).join(\"\");\n    const title = head.title;\n    const description = (0,utils_str__WEBPACK_IMPORTED_MODULE_4__.summarize)(html);\n    const jsonLd = {\n        title: title,\n        description: description,\n        url: _config__WEBPACK_IMPORTED_MODULE_1__.BlogHost + `/entry/${head.slug}`,\n        imageUrl: _config__WEBPACK_IMPORTED_MODULE_1__.OgImageUrl,\n        updated: _config__WEBPACK_IMPORTED_MODULE_1__.DateNow\n    };\n    const articleRef = (0,react__WEBPACK_IMPORTED_MODULE_8__.useRef)(null);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SEO__WEBPACK_IMPORTED_MODULE_3__.SEO, {\n                title: title,\n                description: description,\n                propsJsonLd: jsonLd\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"article\", {\n                className: \"space-y-20\",\n                ref: articleRef,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-4 mt-20\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Day__WEBPACK_IMPORTED_MODULE_2__.Day, {\n                                head: head\n                            }, void 0, false, {\n                                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                                lineNumber: 42,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                children: head.title\n                            }, void 0, false, {\n                                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                                lineNumber: 43,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TagLinkContainer__WEBPACK_IMPORTED_MODULE_6__.TagLinkContainer, {\n                                head: head\n                            }, void 0, false, {\n                                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                                lineNumber: 44,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ToC__WEBPACK_IMPORTED_MODULE_7__.ToC, {\n                        body: body\n                    }, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: body.map((article, index)=>article.content !== null && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n                                children: (0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_9__.renderer)(article.content)\n                            }, index, false, {\n                                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                                lineNumber: 51,\n                                columnNumber: 17\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ShareButtonContainer__WEBPACK_IMPORTED_MODULE_5__.ShareButtonContainer, {}, void 0, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/Template.tsx\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RlbXBsYXRlLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RTtBQUM1QztBQUNBO0FBQ1U7QUFDd0I7QUFHUjtBQUMxQjtBQUNhO0FBRWM7QUFRaEQsTUFBTVksV0FBdUMsQ0FBQ0MsUUFBVTtJQUM3RCxNQUFNLEVBQUVDLEtBQUksRUFBRUMsS0FBSSxFQUFFLEdBQUdGO0lBRXZCLE1BQU1HLE9BQU9ELEtBQUtFLEdBQUcsQ0FBQyxDQUFDRixPQUFTQSxLQUFLRyxPQUFPLEVBQUVDLElBQUksQ0FBQztJQUNuRCxNQUFNQyxRQUFRTixLQUFLTSxLQUFLO0lBQ3hCLE1BQU1DLGNBQWNoQixvREFBU0EsQ0FBQ1c7SUFFOUIsTUFBTU0sU0FBK0I7UUFDbkNGLE9BQU9BO1FBQ1BDLGFBQWFBO1FBQ2JFLEtBQUt2Qiw2Q0FBUUEsR0FBRyxDQUFDLE9BQU8sRUFBRWMsS0FBS1UsSUFBSSxDQUFDLENBQUM7UUFDckNDLFVBQVV2QiwrQ0FBVUE7UUFDcEJ3QixTQUFTekIsNENBQU9BO0lBQ2xCO0lBRUEsTUFBTTBCLGFBQWFqQiw2Q0FBTUEsQ0FBcUIsSUFBSTtJQUVsRCxxQkFDRTs7MEJBQ0UsOERBQUNOLHFDQUFHQTtnQkFBQ2dCLE9BQU9BO2dCQUFPQyxhQUFhQTtnQkFBYU8sYUFBYU47Ozs7OzswQkFDMUQsOERBQUNPO2dCQUFRQyxXQUFVO2dCQUFhQyxLQUFLSjs7a0NBQ25DLDhEQUFDSzt3QkFBSUYsV0FBVTs7MENBQ2IsOERBQUMzQixxQ0FBR0E7Z0NBQUNXLE1BQU1BOzs7Ozs7MENBQ1gsOERBQUNtQjswQ0FBSW5CLEtBQUtNLEtBQUs7Ozs7OzswQ0FDZiw4REFBQ2IsK0RBQWdCQTtnQ0FBQ08sTUFBTUE7Ozs7Ozs7Ozs7OztrQ0FFMUIsOERBQUNOLHFDQUFHQTt3QkFBQ08sTUFBTUE7Ozs7OztrQ0FDWCw4REFBQ2lCO2tDQUNFakIsS0FBS0UsR0FBRyxDQUNQLENBQUNZLFNBQVNLLFFBQ1JMLFFBQVFNLE9BQU8sS0FBSyxJQUFJLGtCQUN0Qiw4REFBQzFCLDJDQUFRQTswQ0FBY0UscUVBQVFBLENBQUNrQixRQUFRTSxPQUFPOytCQUFoQ0Q7Ozs7Ozs7Ozs7a0NBSXZCLDhEQUFDNUIsdUVBQW9CQTs7Ozs7Ozs7Ozs7OztBQUk3QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uL2NvbXBvbmVudHMvVGVtcGxhdGUudHN4P2IyNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmxvZ0hvc3QsIERhdGVOb3csIERlZmF1bHRKc29uSWQsIE9nSW1hZ2VVcmwgfSBmcm9tICd+L2NvbmZpZyc7XG5pbXBvcnQgeyBEYXkgfSBmcm9tICcuL0RheSc7XG5pbXBvcnQgeyBTRU8gfSBmcm9tICcuL1NFTyc7XG5pbXBvcnQgeyBzdW1tYXJpemUgfSBmcm9tICd1dGlscy9zdHInO1xuaW1wb3J0IHsgU2hhcmVCdXR0b25Db250YWluZXIgfSBmcm9tICcuL1NoYXJlQnV0dG9uQ29udGFpbmVyJztcbmltcG9ydCB7IFByaXNtIGFzIFN5bnRheEhpZ2hsaWdodGVyIH0gZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyJztcbmltcG9ydCB7IHRvbW9ycm93IH0gZnJvbSAncmVhY3Qtc3ludGF4LWhpZ2hsaWdodGVyL2Rpc3QvY2pzL3N0eWxlcy9wcmlzbSc7XG5pbXBvcnQgeyBUYWdMaW5rQ29udGFpbmVyIH0gZnJvbSAnLi9UYWdMaW5rQ29udGFpbmVyJztcbmltcG9ydCB7IFRvQyB9IGZyb20gJy4vVG9DJztcbmltcG9ydCB7IEZyYWdtZW50LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBcnRpY2xlcyB9IGZyb20gJ34vcmVwb3NpdG9yaWVzL2FydGljbGUnO1xuaW1wb3J0IHsgcmVuZGVyZXIgfSBmcm9tICd1dGlscy9ub3Rpb24tYmxvY2stcmVuZGVyZXInO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIHR3dHRyOiBhbnk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IFRlbXBsYXRlOiBSZWFjdC5GQzxBcnRpY2xlc1tudW1iZXJdPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IGhlYWQsIGJvZHkgfSA9IHByb3BzO1xuXG4gIGNvbnN0IGh0bWwgPSBib2R5Lm1hcCgoYm9keSkgPT4gYm9keS5odG1sU3RyKS5qb2luKCcnKTtcbiAgY29uc3QgdGl0bGUgPSBoZWFkLnRpdGxlO1xuICBjb25zdCBkZXNjcmlwdGlvbiA9IHN1bW1hcml6ZShodG1sKTtcblxuICBjb25zdCBqc29uTGQ6IHR5cGVvZiBEZWZhdWx0SnNvbklkID0ge1xuICAgIHRpdGxlOiB0aXRsZSxcbiAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sXG4gICAgdXJsOiBCbG9nSG9zdCArIGAvZW50cnkvJHtoZWFkLnNsdWd9YCxcbiAgICBpbWFnZVVybDogT2dJbWFnZVVybCxcbiAgICB1cGRhdGVkOiBEYXRlTm93LFxuICB9O1xuXG4gIGNvbnN0IGFydGljbGVSZWYgPSB1c2VSZWY8SFRNTEVsZW1lbnQgfCBudWxsPihudWxsKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8U0VPIHRpdGxlPXt0aXRsZX0gZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufSBwcm9wc0pzb25MZD17anNvbkxkfSAvPlxuICAgICAgPGFydGljbGUgY2xhc3NOYW1lPVwic3BhY2UteS0yMFwiIHJlZj17YXJ0aWNsZVJlZn0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS00IG10LTIwXCI+XG4gICAgICAgICAgPERheSBoZWFkPXtoZWFkfSAvPlxuICAgICAgICAgIDxoMT57aGVhZC50aXRsZX08L2gxPlxuICAgICAgICAgIDxUYWdMaW5rQ29udGFpbmVyIGhlYWQ9e2hlYWR9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8VG9DIGJvZHk9e2JvZHl9IC8+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAge2JvZHkubWFwKFxuICAgICAgICAgICAgKGFydGljbGUsIGluZGV4KSA9PlxuICAgICAgICAgICAgICBhcnRpY2xlLmNvbnRlbnQgIT09IG51bGwgJiYgKFxuICAgICAgICAgICAgICAgIDxGcmFnbWVudCBrZXk9e2luZGV4fT57cmVuZGVyZXIoYXJ0aWNsZS5jb250ZW50KX08L0ZyYWdtZW50PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxTaGFyZUJ1dHRvbkNvbnRhaW5lciAvPlxuICAgICAgPC9hcnRpY2xlPlxuICAgIDwvPlxuICApO1xufTtcbiJdLCJuYW1lcyI6WyJCbG9nSG9zdCIsIkRhdGVOb3ciLCJPZ0ltYWdlVXJsIiwiRGF5IiwiU0VPIiwic3VtbWFyaXplIiwiU2hhcmVCdXR0b25Db250YWluZXIiLCJUYWdMaW5rQ29udGFpbmVyIiwiVG9DIiwiRnJhZ21lbnQiLCJ1c2VSZWYiLCJyZW5kZXJlciIsIlRlbXBsYXRlIiwicHJvcHMiLCJoZWFkIiwiYm9keSIsImh0bWwiLCJtYXAiLCJodG1sU3RyIiwiam9pbiIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJqc29uTGQiLCJ1cmwiLCJzbHVnIiwiaW1hZ2VVcmwiLCJ1cGRhdGVkIiwiYXJ0aWNsZVJlZiIsInByb3BzSnNvbkxkIiwiYXJ0aWNsZSIsImNsYXNzTmFtZSIsInJlZiIsImRpdiIsImgxIiwiaW5kZXgiLCJjb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Template.tsx\n");

/***/ }),

/***/ "./components/ToC.tsx":
/*!****************************!*\
  !*** ./components/ToC.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ToC\": () => (/* binding */ ToC)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"unist-util-visit\");\n/* harmony import */ var hast_util_from_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-from-html */ \"hast-util-from-html\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([unist_util_visit__WEBPACK_IMPORTED_MODULE_2__, hast_util_from_html__WEBPACK_IMPORTED_MODULE_3__]);\n([unist_util_visit__WEBPACK_IMPORTED_MODULE_2__, hast_util_from_html__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst createHeadingNodes = (content)=>{\n    const hast = (0,hast_util_from_html__WEBPACK_IMPORTED_MODULE_3__.fromHtml)(content);\n    const headingNodes = [];\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(hast, \"element\", (child)=>{\n        const { tagName , children  } = child;\n        if (/^h[0-9]$/.test(tagName)) {\n            const headingNode = {\n                depth: parseInt(tagName[1]),\n                value: children.filter((item)=>item.type === \"text\").map((item)=>item.value).join(\"\")\n            };\n            headingNodes.push(headingNode);\n        }\n    });\n    return headingNodes;\n};\nconst renderToC = (depth, value)=>{\n    if (depth === 1) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                href: `#${value}`,\n                children: value\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                lineNumber: 30,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n            lineNumber: 29,\n            columnNumber: 7\n        }, undefined);\n    } else {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                className: \"ml-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                    href: `#${value}`,\n                    children: value\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                    lineNumber: 37,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                lineNumber: 36,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n            lineNumber: 35,\n            columnNumber: 7\n        }, undefined);\n    }\n};\n/**\n * @description Notion APIがToCに対応するまでの暫定コンポーネント。\n */ const ToC = ({ body  })=>{\n    const html = body.map((value)=>value.htmlStr).join(\"\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"目次\"\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                lineNumber: 51,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                className: \"space-y-2\",\n                children: createHeadingNodes(html)?.map((node, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                        children: renderToC(node.depth, node.value)\n                    }, i, false, {\n                        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n                lineNumber: 52,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/components/ToC.tsx\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RvQy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDZTtBQUVNO0FBRy9DLE1BQU1HLHFCQUFxQixDQUFDQyxVQUFvQjtJQUM5QyxNQUFNQyxPQUFPSCw2REFBUUEsQ0FBQ0U7SUFDdEIsTUFBTUUsZUFBbUQsRUFBRTtJQUMzREwsdURBQUtBLENBQUNJLE1BQU0sV0FBVyxDQUFDRSxRQUFVO1FBQ2hDLE1BQU0sRUFBRUMsUUFBTyxFQUFFQyxTQUFRLEVBQUUsR0FBR0Y7UUFDOUIsSUFBSSxXQUFXRyxJQUFJLENBQUNGLFVBQVU7WUFDNUIsTUFBTUcsY0FBYztnQkFDbEJDLE9BQU9DLFNBQVNMLE9BQU8sQ0FBQyxFQUFFO2dCQUMxQk0sT0FBT0wsU0FDSk0sTUFBTSxDQUFDLENBQUNDLE9BQXVCQSxLQUFLQyxJQUFJLEtBQUssUUFDN0NDLEdBQUcsQ0FBQyxDQUFDRixPQUFTQSxLQUFLRixLQUFLLEVBQ3hCSyxJQUFJLENBQUM7WUFDVjtZQUNBYixhQUFhYyxJQUFJLENBQUNUO1FBQ3BCLENBQUM7SUFDSDtJQUNBLE9BQU9MO0FBQ1Q7QUFFQSxNQUFNZSxZQUFZLENBQUNULE9BQWVFLFFBQWtCO0lBQ2xELElBQUlGLFVBQVUsR0FBRztRQUNmLHFCQUNFLDhEQUFDVTtzQkFDQyw0RUFBQ0M7Z0JBQUVDLE1BQU0sQ0FBQyxDQUFDLEVBQUVWLE1BQU0sQ0FBQzswQkFBR0E7Ozs7Ozs7Ozs7O0lBRzdCLE9BQU87UUFDTCxxQkFDRSw4REFBQ1c7c0JBQ0MsNEVBQUNIO2dCQUFHSSxXQUFVOzBCQUNaLDRFQUFDSDtvQkFBRUMsTUFBTSxDQUFDLENBQUMsRUFBRVYsTUFBTSxDQUFDOzhCQUFHQTs7Ozs7Ozs7Ozs7Ozs7OztJQUkvQixDQUFDO0FBQ0g7QUFFQTs7Q0FFQyxHQUNNLE1BQU1hLE1BQW9ELENBQUMsRUFBRUMsS0FBSSxFQUFFLEdBQUs7SUFDN0UsTUFBTUMsT0FBT0QsS0FBS1YsR0FBRyxDQUFDLENBQUNKLFFBQVVBLE1BQU1nQixPQUFPLEVBQUVYLElBQUksQ0FBQztJQUNyRCxxQkFDRSw4REFBQ1k7UUFBSUwsV0FBVTs7MEJBQ2IsOERBQUNNOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNQO2dCQUFHQyxXQUFVOzBCQUNYdkIsbUJBQW1CMEIsT0FBT1gsSUFBSSxDQUFDZSxNQUFNQyxrQkFDcEMsOERBQUNsQyx1REFBYztrQ0FDWnFCLFVBQVVZLEtBQUtyQixLQUFLLEVBQUVxQixLQUFLbkIsS0FBSzt1QkFEZG9COzs7Ozs7Ozs7Ozs7Ozs7O0FBTy9CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vY29tcG9uZW50cy9Ub0MudHN4PzgyMjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHZpc2l0IH0gZnJvbSAndW5pc3QtdXRpbC12aXNpdCc7XG5pbXBvcnQgeyBBcnRpY2xlcyB9IGZyb20gJ34vcmVwb3NpdG9yaWVzL2FydGljbGUnO1xuaW1wb3J0IHsgZnJvbUh0bWwgfSBmcm9tICdoYXN0LXV0aWwtZnJvbS1odG1sJztcbmltcG9ydCB7IFRleHQgfSBmcm9tICdoYXN0JztcblxuY29uc3QgY3JlYXRlSGVhZGluZ05vZGVzID0gKGNvbnRlbnQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBoYXN0ID0gZnJvbUh0bWwoY29udGVudCk7XG4gIGNvbnN0IGhlYWRpbmdOb2RlczogeyBkZXB0aDogbnVtYmVyOyB2YWx1ZTogc3RyaW5nIH1bXSA9IFtdO1xuICB2aXNpdChoYXN0LCAnZWxlbWVudCcsIChjaGlsZCkgPT4ge1xuICAgIGNvbnN0IHsgdGFnTmFtZSwgY2hpbGRyZW4gfSA9IGNoaWxkO1xuICAgIGlmICgvXmhbMC05XSQvLnRlc3QodGFnTmFtZSkpIHtcbiAgICAgIGNvbnN0IGhlYWRpbmdOb2RlID0ge1xuICAgICAgICBkZXB0aDogcGFyc2VJbnQodGFnTmFtZVsxXSksXG4gICAgICAgIHZhbHVlOiBjaGlsZHJlblxuICAgICAgICAgIC5maWx0ZXIoKGl0ZW0pOiBpdGVtIGlzIFRleHQgPT4gaXRlbS50eXBlID09PSAndGV4dCcpXG4gICAgICAgICAgLm1hcCgoaXRlbSkgPT4gaXRlbS52YWx1ZSlcbiAgICAgICAgICAuam9pbignJyksXG4gICAgICB9O1xuICAgICAgaGVhZGluZ05vZGVzLnB1c2goaGVhZGluZ05vZGUpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBoZWFkaW5nTm9kZXM7XG59O1xuXG5jb25zdCByZW5kZXJUb0MgPSAoZGVwdGg6IG51bWJlciwgdmFsdWU6IHN0cmluZykgPT4ge1xuICBpZiAoZGVwdGggPT09IDEpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGxpPlxuICAgICAgICA8YSBocmVmPXtgIyR7dmFsdWV9YH0+e3ZhbHVlfTwvYT5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKFxuICAgICAgPHVsPlxuICAgICAgICA8bGkgY2xhc3NOYW1lPVwibWwtNFwiPlxuICAgICAgICAgIDxhIGhyZWY9e2AjJHt2YWx1ZX1gfT57dmFsdWV9PC9hPlxuICAgICAgICA8L2xpPlxuICAgICAgPC91bD5cbiAgICApO1xuICB9XG59O1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvbiBOb3Rpb24gQVBJ44GMVG9D44Gr5a++5b+c44GZ44KL44G+44Gn44Gu5pqr5a6a44Kz44Oz44Od44O844ON44Oz44OI44CCXG4gKi9cbmV4cG9ydCBjb25zdCBUb0M6IFJlYWN0LkZDPHsgYm9keTogQXJ0aWNsZXNbbnVtYmVyXVsnYm9keSddIH0+ID0gKHsgYm9keSB9KSA9PiB7XG4gIGNvbnN0IGh0bWwgPSBib2R5Lm1hcCgodmFsdWUpID0+IHZhbHVlLmh0bWxTdHIpLmpvaW4oJycpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0yXCI+XG4gICAgICA8aDE+55uu5qyhPC9oMT5cbiAgICAgIDx1bCBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cbiAgICAgICAge2NyZWF0ZUhlYWRpbmdOb2RlcyhodG1sKT8ubWFwKChub2RlLCBpKSA9PiAoXG4gICAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aX0+XG4gICAgICAgICAgICB7cmVuZGVyVG9DKG5vZGUuZGVwdGgsIG5vZGUudmFsdWUpfVxuICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICkpfVxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ2aXNpdCIsImZyb21IdG1sIiwiY3JlYXRlSGVhZGluZ05vZGVzIiwiY29udGVudCIsImhhc3QiLCJoZWFkaW5nTm9kZXMiLCJjaGlsZCIsInRhZ05hbWUiLCJjaGlsZHJlbiIsInRlc3QiLCJoZWFkaW5nTm9kZSIsImRlcHRoIiwicGFyc2VJbnQiLCJ2YWx1ZSIsImZpbHRlciIsIml0ZW0iLCJ0eXBlIiwibWFwIiwiam9pbiIsInB1c2giLCJyZW5kZXJUb0MiLCJsaSIsImEiLCJocmVmIiwidWwiLCJjbGFzc05hbWUiLCJUb0MiLCJib2R5IiwiaHRtbCIsImh0bWxTdHIiLCJkaXYiLCJoMSIsIm5vZGUiLCJpIiwiRnJhZ21lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ToC.tsx\n");

/***/ }),

/***/ "./config/index.ts":
/*!*************************!*\
  !*** ./config/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BlogDescription\": () => (/* binding */ BlogDescription),\n/* harmony export */   \"BlogHost\": () => (/* binding */ BlogHost),\n/* harmony export */   \"BlogTitle\": () => (/* binding */ BlogTitle),\n/* harmony export */   \"DateNow\": () => (/* binding */ DateNow),\n/* harmony export */   \"DefaultJsonId\": () => (/* binding */ DefaultJsonId),\n/* harmony export */   \"OgImageUrl\": () => (/* binding */ OgImageUrl),\n/* harmony export */   \"TagsMap\": () => (/* binding */ TagsMap)\n/* harmony export */ });\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"dayjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n\nconst BlogTitle = \"{ appearance: none }\";\nconst BlogDescription = \"Blog - { appearance: none }\";\nconst BlogHost = \"https://blog.did0es.me\";\nconst OgImageUrl = \"https://blog.did0es.me/images/og.png\";\nconst DateNow = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().toISOString();\nconst TagsMap = {\n    engineering: \"技術\",\n    lifestyle: \"生活\",\n    frontend: \"フロントエンド\",\n    react: \"React\",\n    webgl: \"WebGL\",\n    vj: \"VJ\",\n    nextjs: \"Next.js\",\n    personal_research: \"自由研究\",\n    others: \"その他\"\n};\nconst DefaultJsonId = {\n    title: BlogTitle,\n    description: BlogDescription,\n    url: BlogHost,\n    imageUrl: OgImageUrl,\n    updated: DateNow\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTBCO0FBRW5CLE1BQU1DLFlBQVksdUJBQXVCO0FBRXpDLE1BQU1DLGtCQUFrQiw4QkFBOEI7QUFFdEQsTUFBTUMsV0FBVyx5QkFBeUI7QUFFMUMsTUFBTUMsYUFBYSx1Q0FBdUM7QUFFMUQsTUFBTUMsVUFBVUwsNENBQUtBLEdBQUdNLFdBQVcsR0FBRztBQUV0QyxNQUFNQyxVQUFVO0lBQ3JCQyxhQUFhO0lBQ2JDLFdBQVc7SUFDWEMsVUFBVTtJQUNWQyxPQUFPO0lBQ1BDLE9BQU87SUFDUEMsSUFBSTtJQUNKQyxRQUFRO0lBQ1JDLG1CQUFtQjtJQUNuQkMsUUFBUTtBQUNWLEVBQUU7QUFFSyxNQUFNQyxnQkFBZ0I7SUFDM0JDLE9BQU9qQjtJQUNQa0IsYUFBYWpCO0lBQ2JrQixLQUFLakI7SUFDTGtCLFVBQVVqQjtJQUNWa0IsU0FBU2pCO0FBQ1gsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9jb25maWcvaW5kZXgudHM/NmQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xuXG5leHBvcnQgY29uc3QgQmxvZ1RpdGxlID0gJ3sgYXBwZWFyYW5jZTogbm9uZSB9JztcblxuZXhwb3J0IGNvbnN0IEJsb2dEZXNjcmlwdGlvbiA9ICdCbG9nIC0geyBhcHBlYXJhbmNlOiBub25lIH0nO1xuXG5leHBvcnQgY29uc3QgQmxvZ0hvc3QgPSAnaHR0cHM6Ly9ibG9nLmRpZDBlcy5tZSc7XG5cbmV4cG9ydCBjb25zdCBPZ0ltYWdlVXJsID0gJ2h0dHBzOi8vYmxvZy5kaWQwZXMubWUvaW1hZ2VzL29nLnBuZyc7XG5cbmV4cG9ydCBjb25zdCBEYXRlTm93ID0gZGF5anMoKS50b0lTT1N0cmluZygpO1xuXG5leHBvcnQgY29uc3QgVGFnc01hcCA9IHtcbiAgZW5naW5lZXJpbmc6ICfmioDooZMnLFxuICBsaWZlc3R5bGU6ICfnlJ/mtLsnLFxuICBmcm9udGVuZDogJ+ODleODreODs+ODiOOCqOODs+ODiScsXG4gIHJlYWN0OiAnUmVhY3QnLFxuICB3ZWJnbDogJ1dlYkdMJyxcbiAgdmo6ICdWSicsXG4gIG5leHRqczogJ05leHQuanMnLFxuICBwZXJzb25hbF9yZXNlYXJjaDogJ+iHqueUseeglOepticsXG4gIG90aGVyczogJ+OBneOBruS7licsXG59O1xuXG5leHBvcnQgY29uc3QgRGVmYXVsdEpzb25JZCA9IHtcbiAgdGl0bGU6IEJsb2dUaXRsZSxcbiAgZGVzY3JpcHRpb246IEJsb2dEZXNjcmlwdGlvbixcbiAgdXJsOiBCbG9nSG9zdCxcbiAgaW1hZ2VVcmw6IE9nSW1hZ2VVcmwsXG4gIHVwZGF0ZWQ6IERhdGVOb3csXG59O1xuIl0sIm5hbWVzIjpbImRheWpzIiwiQmxvZ1RpdGxlIiwiQmxvZ0Rlc2NyaXB0aW9uIiwiQmxvZ0hvc3QiLCJPZ0ltYWdlVXJsIiwiRGF0ZU5vdyIsInRvSVNPU3RyaW5nIiwiVGFnc01hcCIsImVuZ2luZWVyaW5nIiwibGlmZXN0eWxlIiwiZnJvbnRlbmQiLCJyZWFjdCIsIndlYmdsIiwidmoiLCJuZXh0anMiLCJwZXJzb25hbF9yZXNlYXJjaCIsIm90aGVycyIsIkRlZmF1bHRKc29uSWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidXJsIiwiaW1hZ2VVcmwiLCJ1cGRhdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./config/index.ts\n");

/***/ }),

/***/ "./models/articleBody.ts":
/*!*******************************!*\
  !*** ./models/articleBody.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom/server */ \"react-dom/server\");\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom_server__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! utils/notion-block-renderer */ \"../../packages/utils/notion-block-renderer.tsx\");\n\n\nvar ArticleBodyModel;\n(function(ArticleBodyModel) {\n    function transform(result) {\n        if ((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_1__.isBlockObject)(result)) {\n            return {\n                content: result,\n                htmlStr: react_dom_server__WEBPACK_IMPORTED_MODULE_0___default().renderToString((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_1__.renderer)(result))\n            };\n        }\n        return {\n            content: {\n                type: \"unsupported\"\n            },\n            htmlStr: \"\"\n        };\n    }\n    ArticleBodyModel.transform = transform;\n})(ArticleBodyModel || (ArticleBodyModel = {}));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArticleBodyModel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9tb2RlbHMvYXJ0aWNsZUJvZHkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQU1UO0FBT3JDLElBQVVHOztJQUNELFNBQVNDLFVBQVVDLE1BQTJCLEVBQW9CO1FBQ3ZFLElBQUlKLDBFQUFhQSxDQUFDSSxTQUFTO1lBQ3pCLE9BQU87Z0JBQ0xDLFNBQVNEO2dCQUNURSxTQUFTUCxzRUFBNkIsQ0FBQ0UscUVBQVFBLENBQUNHO1lBQ2xEO1FBQ0YsQ0FBQztRQUNELE9BQU87WUFDTEMsU0FBUztnQkFDUEcsTUFBTTtZQUNSO1lBQ0FGLFNBQVM7UUFDWDtJQUNGO3FCQWJnQkgsWUFBQUE7R0FEUkQscUJBQUFBO0FBaUJWLGlFQUFlQSxnQkFBZ0JBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4vbW9kZWxzL2FydGljbGVCb2R5LnRzP2U5NGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0RE9NU2VydmVyIGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInO1xuaW1wb3J0IHsgVW5zdXBwb3J0ZWRCbG9ja09iamVjdFJlc3BvbnNlIH0gZnJvbSAnQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvYXBpLWVuZHBvaW50cyc7XG5pbXBvcnQge1xuICBpc0Jsb2NrT2JqZWN0LFxuICByZW5kZXJlcixcbiAgQmxvY2tPYmplY3RSZXNwb25zZSxcbn0gZnJvbSAndXRpbHMvbm90aW9uLWJsb2NrLXJlbmRlcmVyJztcblxudHlwZSBBcnRpY2xlQm9keU1vZGVsID0gUmVhZG9ubHk8e1xuICBjb250ZW50OiBCbG9ja09iamVjdFJlc3BvbnNlO1xuICBodG1sU3RyOiBzdHJpbmc7XG59PjtcblxubmFtZXNwYWNlIEFydGljbGVCb2R5TW9kZWwge1xuICBleHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtKHJlc3VsdDogQmxvY2tPYmplY3RSZXNwb25zZSk6IEFydGljbGVCb2R5TW9kZWwge1xuICAgIGlmIChpc0Jsb2NrT2JqZWN0KHJlc3VsdCkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbnRlbnQ6IHJlc3VsdCxcbiAgICAgICAgaHRtbFN0cjogUmVhY3RET01TZXJ2ZXIucmVuZGVyVG9TdHJpbmcocmVuZGVyZXIocmVzdWx0KSksXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgY29udGVudDoge1xuICAgICAgICB0eXBlOiAndW5zdXBwb3J0ZWQnLFxuICAgICAgfSBhcyB1bmtub3duIGFzIFVuc3VwcG9ydGVkQmxvY2tPYmplY3RSZXNwb25zZSxcbiAgICAgIGh0bWxTdHI6ICcnLFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXJ0aWNsZUJvZHlNb2RlbDtcbiJdLCJuYW1lcyI6WyJSZWFjdERPTVNlcnZlciIsImlzQmxvY2tPYmplY3QiLCJyZW5kZXJlciIsIkFydGljbGVCb2R5TW9kZWwiLCJ0cmFuc2Zvcm0iLCJyZXN1bHQiLCJjb250ZW50IiwiaHRtbFN0ciIsInJlbmRlclRvU3RyaW5nIiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./models/articleBody.ts\n");

/***/ }),

/***/ "./models/articles.ts":
/*!****************************!*\
  !*** ./models/articles.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils/notion-block-renderer */ \"../../packages/utils/notion-block-renderer.tsx\");\n/* harmony import */ var _articleBody__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./articleBody */ \"./models/articleBody.ts\");\n\n\nvar ArticlesModel;\n(function(ArticlesModel) {\n    function transform(result) {\n        return {\n            head: result.head,\n            body: normalizeList(result.body)\n        };\n    }\n    ArticlesModel.transform = transform;\n    function normalizeList(body) {\n        const bulletedListItems = [];\n        const numberedListItems = [];\n        const todoListItems = [];\n        body.forEach((item, index)=>{\n            if ((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_0__.isBlockObject)(item.content)) {\n                if ((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_0__.isBulletListItem)(item.content)) {\n                    bulletedListItems.push({\n                        item: item.content,\n                        index\n                    });\n                }\n                if ((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_0__.isNumberedListItem)(item.content)) {\n                    numberedListItems.push({\n                        item: item.content,\n                        index\n                    });\n                }\n                if ((0,utils_notion_block_renderer__WEBPACK_IMPORTED_MODULE_0__.isTodo)(item.content)) {\n                    todoListItems.push({\n                        item: item.content,\n                        index\n                    });\n                }\n            }\n        });\n        [\n            {\n                type: \"bulleted_list\",\n                listItems: bulletedListItems\n            },\n            {\n                type: \"numbered_list\",\n                listItems: numberedListItems\n            },\n            {\n                type: \"todo_list\",\n                listItems: todoListItems\n            }\n        ].forEach(({ type , listItems  })=>{\n            // @ts-expect-error\n            groupByNumbering(listItems).forEach((items)=>{\n                const first = items[0];\n                const last = items[items.length - 1];\n                const content = _articleBody__WEBPACK_IMPORTED_MODULE_1__[\"default\"].transform({\n                    type,\n                    // @ts-expect-error\n                    items: items.map((value)=>value.item)\n                });\n                if (last.index - first.index > 0) {\n                    body.splice(first.index, last.index - first.index + 1, content);\n                }\n            });\n        });\n        return body;\n    }\n    function groupByNumbering(arr) {\n        return arr.reduce((pValue, cValue)=>{\n            const lastSubArray = pValue[pValue.length - 1];\n            if (!lastSubArray || lastSubArray[lastSubArray.length - 1].index !== cValue.index - 1) {\n                pValue.push([]);\n            }\n            pValue[pValue.length - 1].push(cValue);\n            return pValue;\n        }, []);\n    }\n})(ArticlesModel || (ArticlesModel = {}));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArticlesModel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQnVsbGV0ZWRMaXN0SXRlbUJsb2NrT2JqZWN0UmVzcG9uc2UsXG4gIE51bWJlcmVkTGlzdEl0ZW1CbG9ja09iamVjdFJlc3BvbnNlLFxuICBUb0RvQmxvY2tPYmplY3RSZXNwb25zZSxcbn0gZnJvbSAnQG5vdGlvbmhxL2NsaWVudC9idWlsZC9zcmMvYXBpLWVuZHBvaW50cyc7XG5pbXBvcnQge1xuICBpc0Jsb2NrT2JqZWN0LFxuICBpc0J1bGxldExpc3RJdGVtLFxuICBpc051bWJlcmVkTGlzdEl0ZW0sXG4gIGlzVG9kbyxcbn0gZnJvbSAndXRpbHMvbm90aW9uLWJsb2NrLXJlbmRlcmVyJztcbmltcG9ydCB7IEFydGljbGVzIH0gZnJvbSAnfi9yZXBvc2l0b3JpZXMvYXJ0aWNsZSc7XG5pbXBvcnQgQXJ0aWNsZUJvZHlNb2RlbCBmcm9tICcuL2FydGljbGVCb2R5JztcblxudHlwZSBBcnRpY2xlc01vZGVsID0gUmVhZG9ubHk8QXJ0aWNsZXNbbnVtYmVyXT47XG5cbm5hbWVzcGFjZSBBcnRpY2xlc01vZGVsIHtcbiAgZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybShyZXN1bHQ6IEFydGljbGVzW251bWJlcl0pOiBBcnRpY2xlc01vZGVsIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVhZDogcmVzdWx0LmhlYWQsXG4gICAgICBib2R5OiBub3JtYWxpemVMaXN0KHJlc3VsdC5ib2R5KSxcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm9ybWFsaXplTGlzdChib2R5OiBBcnRpY2xlc1tudW1iZXJdWydib2R5J10pIHtcbiAgICBjb25zdCBidWxsZXRlZExpc3RJdGVtczoge1xuICAgICAgaXRlbTogQnVsbGV0ZWRMaXN0SXRlbUJsb2NrT2JqZWN0UmVzcG9uc2U7XG4gICAgICBpbmRleDogbnVtYmVyO1xuICAgIH1bXSA9IFtdO1xuICAgIGNvbnN0IG51bWJlcmVkTGlzdEl0ZW1zOiB7XG4gICAgICBpdGVtOiBOdW1iZXJlZExpc3RJdGVtQmxvY2tPYmplY3RSZXNwb25zZTtcbiAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgfVtdID0gW107XG4gICAgY29uc3QgdG9kb0xpc3RJdGVtczoge1xuICAgICAgaXRlbTogVG9Eb0Jsb2NrT2JqZWN0UmVzcG9uc2U7XG4gICAgICBpbmRleDogbnVtYmVyO1xuICAgIH1bXSA9IFtdO1xuXG4gICAgYm9keS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGlzQmxvY2tPYmplY3QoaXRlbS5jb250ZW50KSkge1xuICAgICAgICBpZiAoaXNCdWxsZXRMaXN0SXRlbShpdGVtLmNvbnRlbnQpKSB7XG4gICAgICAgICAgYnVsbGV0ZWRMaXN0SXRlbXMucHVzaCh7XG4gICAgICAgICAgICBpdGVtOiBpdGVtLmNvbnRlbnQsXG4gICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNOdW1iZXJlZExpc3RJdGVtKGl0ZW0uY29udGVudCkpIHtcbiAgICAgICAgICBudW1iZXJlZExpc3RJdGVtcy5wdXNoKHtcbiAgICAgICAgICAgIGl0ZW06IGl0ZW0uY29udGVudCxcbiAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1RvZG8oaXRlbS5jb250ZW50KSkge1xuICAgICAgICAgIHRvZG9MaXN0SXRlbXMucHVzaCh7XG4gICAgICAgICAgICBpdGVtOiBpdGVtLmNvbnRlbnQsXG4gICAgICAgICAgICBpbmRleCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgKFxuICAgICAgW1xuICAgICAgICB7IHR5cGU6ICdidWxsZXRlZF9saXN0JywgbGlzdEl0ZW1zOiBidWxsZXRlZExpc3RJdGVtcyB9LFxuICAgICAgICB7IHR5cGU6ICdudW1iZXJlZF9saXN0JywgbGlzdEl0ZW1zOiBudW1iZXJlZExpc3RJdGVtcyB9LFxuICAgICAgICB7IHR5cGU6ICd0b2RvX2xpc3QnLCBsaXN0SXRlbXM6IHRvZG9MaXN0SXRlbXMgfSxcbiAgICAgIF0gYXMgY29uc3RcbiAgICApLmZvckVhY2goKHsgdHlwZSwgbGlzdEl0ZW1zIH0pID0+IHtcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgIGdyb3VwQnlOdW1iZXJpbmcobGlzdEl0ZW1zKS5mb3JFYWNoKChpdGVtcykgPT4ge1xuICAgICAgICBjb25zdCBmaXJzdCA9IGl0ZW1zWzBdO1xuICAgICAgICBjb25zdCBsYXN0ID0gaXRlbXNbaXRlbXMubGVuZ3RoIC0gMV07XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBBcnRpY2xlQm9keU1vZGVsLnRyYW5zZm9ybSh7XG4gICAgICAgICAgdHlwZSxcbiAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgICAgICAgaXRlbXM6IGl0ZW1zLm1hcCgodmFsdWUpID0+IHZhbHVlLml0ZW0pLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGxhc3QuaW5kZXggLSBmaXJzdC5pbmRleCA+IDApIHtcbiAgICAgICAgICBib2R5LnNwbGljZShmaXJzdC5pbmRleCwgbGFzdC5pbmRleCAtIGZpcnN0LmluZGV4ICsgMSwgY29udGVudCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGJvZHk7XG4gIH1cblxuICBmdW5jdGlvbiBncm91cEJ5TnVtYmVyaW5nPFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBhbnk+PihhcnI6IFRbXSkge1xuICAgIHJldHVybiBhcnIucmVkdWNlKChwVmFsdWUsIGNWYWx1ZSkgPT4ge1xuICAgICAgY29uc3QgbGFzdFN1YkFycmF5ID0gcFZhbHVlW3BWYWx1ZS5sZW5ndGggLSAxXTtcblxuICAgICAgaWYgKFxuICAgICAgICAhbGFzdFN1YkFycmF5IHx8XG4gICAgICAgIGxhc3RTdWJBcnJheVtsYXN0U3ViQXJyYXkubGVuZ3RoIC0gMV0uaW5kZXggIT09IGNWYWx1ZS5pbmRleCAtIDFcbiAgICAgICkge1xuICAgICAgICBwVmFsdWUucHVzaChbXSk7XG4gICAgICB9XG5cbiAgICAgIHBWYWx1ZVtwVmFsdWUubGVuZ3RoIC0gMV0ucHVzaChjVmFsdWUpO1xuXG4gICAgICByZXR1cm4gcFZhbHVlO1xuICAgIH0sIFtdIGFzIFRbXVtdKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcnRpY2xlc01vZGVsO1xuIl0sIm5hbWVzIjpbImlzQmxvY2tPYmplY3QiLCJpc0J1bGxldExpc3RJdGVtIiwiaXNOdW1iZXJlZExpc3RJdGVtIiwiaXNUb2RvIiwiQXJ0aWNsZUJvZHlNb2RlbCIsIkFydGljbGVzTW9kZWwiLCJ0cmFuc2Zvcm0iLCJyZXN1bHQiLCJoZWFkIiwiYm9keSIsIm5vcm1hbGl6ZUxpc3QiLCJidWxsZXRlZExpc3RJdGVtcyIsIm51bWJlcmVkTGlzdEl0ZW1zIiwidG9kb0xpc3RJdGVtcyIsImZvckVhY2giLCJpdGVtIiwiaW5kZXgiLCJjb250ZW50IiwicHVzaCIsInR5cGUiLCJsaXN0SXRlbXMiLCJncm91cEJ5TnVtYmVyaW5nIiwiaXRlbXMiLCJmaXJzdCIsImxhc3QiLCJsZW5ndGgiLCJtYXAiLCJ2YWx1ZSIsInNwbGljZSIsImFyciIsInJlZHVjZSIsInBWYWx1ZSIsImNWYWx1ZSIsImxhc3RTdWJBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./models/articles.ts\n");

/***/ }),

/***/ "./pages/entry/[slug].tsx":
/*!********************************!*\
  !*** ./pages/entry/[slug].tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getStaticPaths\": () => (/* binding */ getStaticPaths),\n/* harmony export */   \"getStaticProps\": () => (/* binding */ getStaticProps)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Template__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/components/Template */ \"./components/Template.tsx\");\n/* harmony import */ var _components_Nav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/components/Nav */ \"./components/Nav/index.ts\");\n/* harmony import */ var _usecases_getArticles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/usecases/getArticles */ \"./usecases/getArticles.ts\");\n/* harmony import */ var _components_Layouts_BaseLayout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ~/components/Layouts/BaseLayout */ \"./components/Layouts/BaseLayout.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_Template__WEBPACK_IMPORTED_MODULE_1__]);\n_components_Template__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nconst getStaticProps = async (context)=>{\n    const data = await (0,_usecases_getArticles__WEBPACK_IMPORTED_MODULE_3__.getArticles)().invoke();\n    const entry = data.find((d)=>d.head.slug === context.params?.slug);\n    const currentIndex = data.indexOf(entry);\n    const prevEntry = currentIndex !== -1 && currentIndex < data.length - 1 ? data[currentIndex + 1] : null;\n    const nextEntry = currentIndex !== -1 && currentIndex > 0 ? data[currentIndex - 1] : null;\n    if (entry != null) {\n        return {\n            props: {\n                entry,\n                prevEntry,\n                nextEntry\n            }\n        };\n    } else {\n        return {\n            notFound: true\n        };\n    }\n};\nconst getStaticPaths = async ()=>{\n    const data = await (0,_usecases_getArticles__WEBPACK_IMPORTED_MODULE_3__.getArticles)().invoke();\n    if (data != null) {\n        const paths = data.map((d)=>({\n                params: {\n                    slug: d.head.slug\n                }\n            }));\n        return {\n            paths,\n            fallback: false\n        };\n    } else {\n        throw new Error();\n    }\n};\nconst Slug = (props)=>{\n    const { entry , prevEntry , nextEntry  } = props;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Template__WEBPACK_IMPORTED_MODULE_1__.Template, {\n                ...entry\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/pages/entry/[slug].tsx\",\n                lineNumber: 53,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Nav__WEBPACK_IMPORTED_MODULE_2__.Nav, {\n                prevEntry: prevEntry,\n                nextEntry: nextEntry\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/apps/website/pages/entry/[slug].tsx\",\n                lineNumber: 54,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true);\n};\nSlug.getLayout = _components_Layouts_BaseLayout__WEBPACK_IMPORTED_MODULE_4__.getBaseLayout;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Slug);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9lbnRyeS9bc2x1Z10udHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUQ7QUFDVjtBQUNjO0FBR1c7QUFFekQsTUFBTUksaUJBQWlCLE9BQU9DLFVBQW1DO0lBQ3RFLE1BQU1DLE9BQU8sTUFBTUosa0VBQVdBLEdBQUdLLE1BQU07SUFFdkMsTUFBTUMsUUFBUUYsS0FBS0csSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLElBQUksQ0FBQ0MsSUFBSSxLQUFLUCxRQUFRUSxNQUFNLEVBQUVEO0lBQy9ELE1BQU1FLGVBQWVSLEtBQUtTLE9BQU8sQ0FBQ1A7SUFDbEMsTUFBTVEsWUFDSkYsaUJBQWlCLENBQUMsS0FBS0EsZUFBZVIsS0FBS1csTUFBTSxHQUFHLElBQ2hEWCxJQUFJLENBQUNRLGVBQWUsRUFBRSxHQUN0QixJQUFJO0lBQ1YsTUFBTUksWUFDSkosaUJBQWlCLENBQUMsS0FBS0EsZUFBZSxJQUFJUixJQUFJLENBQUNRLGVBQWUsRUFBRSxHQUFHLElBQUk7SUFFekUsSUFBSU4sU0FBUyxJQUFJLEVBQUU7UUFDakIsT0FBTztZQUFFVyxPQUFPO2dCQUFFWDtnQkFBT1E7Z0JBQVdFO1lBQVU7UUFBRTtJQUNsRCxPQUFPO1FBQ0wsT0FBTztZQUNMRSxVQUFVLElBQUk7UUFDaEI7SUFDRixDQUFDO0FBQ0gsRUFBRTtBQUVLLE1BQU1DLGlCQUFpQixVQUFZO0lBQ3hDLE1BQU1mLE9BQU8sTUFBTUosa0VBQVdBLEdBQUdLLE1BQU07SUFFdkMsSUFBSUQsUUFBUSxJQUFJLEVBQUU7UUFDaEIsTUFBTWdCLFFBQVFoQixLQUFLaUIsR0FBRyxDQUFDLENBQUNiLElBQU87Z0JBQzdCRyxRQUFRO29CQUNORCxNQUFNRixFQUFFQyxJQUFJLENBQUNDLElBQUk7Z0JBQ25CO1lBQ0Y7UUFDQSxPQUFPO1lBQ0xVO1lBQ0FFLFVBQVUsS0FBSztRQUNqQjtJQUNGLE9BQU87UUFDTCxNQUFNLElBQUlDLFFBQVE7SUFDcEIsQ0FBQztBQUNILEVBQUU7QUFFRixNQUFNQyxPQUNKLENBQUNQLFFBQVU7SUFDVCxNQUFNLEVBQUVYLE1BQUssRUFBRVEsVUFBUyxFQUFFRSxVQUFTLEVBQUUsR0FBR0M7SUFFeEMscUJBQ0U7OzBCQUNFLDhEQUFDbkIsMERBQVFBO2dCQUFFLEdBQUdRLEtBQUs7Ozs7OzswQkFDbkIsOERBQUNQLGdEQUFHQTtnQkFBQ2UsV0FBV0E7Z0JBQVdFLFdBQVdBOzs7Ozs7OztBQUc1QztBQUVGUSxLQUFLQyxTQUFTLEdBQUd4Qix5RUFBYUE7QUFFOUIsaUVBQWV1QixJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uL3BhZ2VzL2VudHJ5L1tzbHVnXS50c3g/MzA2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZSB9IGZyb20gJ34vY29tcG9uZW50cy9UZW1wbGF0ZSc7XG5pbXBvcnQgeyBOYXYgfSBmcm9tICd+L2NvbXBvbmVudHMvTmF2JztcbmltcG9ydCB7IGdldEFydGljbGVzIH0gZnJvbSAnfi91c2VjYXNlcy9nZXRBcnRpY2xlcyc7XG5pbXBvcnQgeyBHZXRTdGF0aWNQcm9wc0NvbnRleHQsIEluZmVyR2V0U3RhdGljUHJvcHNUeXBlIH0gZnJvbSAnbmV4dCc7XG5pbXBvcnQgeyBOZXh0UGFnZVdpdGhMYXlvdXQgfSBmcm9tICcuLi9fYXBwJztcbmltcG9ydCB7IGdldEJhc2VMYXlvdXQgfSBmcm9tICd+L2NvbXBvbmVudHMvTGF5b3V0cy9CYXNlTGF5b3V0JztcblxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gYXN5bmMgKGNvbnRleHQ6IEdldFN0YXRpY1Byb3BzQ29udGV4dCkgPT4ge1xuICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0QXJ0aWNsZXMoKS5pbnZva2UoKTtcblxuICBjb25zdCBlbnRyeSA9IGRhdGEuZmluZCgoZCkgPT4gZC5oZWFkLnNsdWcgPT09IGNvbnRleHQucGFyYW1zPy5zbHVnKSE7XG4gIGNvbnN0IGN1cnJlbnRJbmRleCA9IGRhdGEuaW5kZXhPZihlbnRyeSk7XG4gIGNvbnN0IHByZXZFbnRyeSA9XG4gICAgY3VycmVudEluZGV4ICE9PSAtMSAmJiBjdXJyZW50SW5kZXggPCBkYXRhLmxlbmd0aCAtIDFcbiAgICAgID8gZGF0YVtjdXJyZW50SW5kZXggKyAxXVxuICAgICAgOiBudWxsO1xuICBjb25zdCBuZXh0RW50cnkgPVxuICAgIGN1cnJlbnRJbmRleCAhPT0gLTEgJiYgY3VycmVudEluZGV4ID4gMCA/IGRhdGFbY3VycmVudEluZGV4IC0gMV0gOiBudWxsO1xuXG4gIGlmIChlbnRyeSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgZW50cnksIHByZXZFbnRyeSwgbmV4dEVudHJ5IH0gfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgbm90Rm91bmQ6IHRydWUsXG4gICAgfTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0QXJ0aWNsZXMoKS5pbnZva2UoKTtcblxuICBpZiAoZGF0YSAhPSBudWxsKSB7XG4gICAgY29uc3QgcGF0aHMgPSBkYXRhLm1hcCgoZCkgPT4gKHtcbiAgICAgIHBhcmFtczoge1xuICAgICAgICBzbHVnOiBkLmhlYWQuc2x1ZyxcbiAgICAgIH0sXG4gICAgfSkpO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRocyxcbiAgICAgIGZhbGxiYWNrOiBmYWxzZSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcigpO1xuICB9XG59O1xuXG5jb25zdCBTbHVnOiBOZXh0UGFnZVdpdGhMYXlvdXQ8SW5mZXJHZXRTdGF0aWNQcm9wc1R5cGU8dHlwZW9mIGdldFN0YXRpY1Byb3BzPj4gPVxuICAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IGVudHJ5LCBwcmV2RW50cnksIG5leHRFbnRyeSB9ID0gcHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPFRlbXBsYXRlIHsuLi5lbnRyeX0gLz5cbiAgICAgICAgPE5hdiBwcmV2RW50cnk9e3ByZXZFbnRyeX0gbmV4dEVudHJ5PXtuZXh0RW50cnl9IC8+XG4gICAgICA8Lz5cbiAgICApO1xuICB9O1xuXG5TbHVnLmdldExheW91dCA9IGdldEJhc2VMYXlvdXQ7XG5cbmV4cG9ydCBkZWZhdWx0IFNsdWc7XG4iXSwibmFtZXMiOlsiVGVtcGxhdGUiLCJOYXYiLCJnZXRBcnRpY2xlcyIsImdldEJhc2VMYXlvdXQiLCJnZXRTdGF0aWNQcm9wcyIsImNvbnRleHQiLCJkYXRhIiwiaW52b2tlIiwiZW50cnkiLCJmaW5kIiwiZCIsImhlYWQiLCJzbHVnIiwicGFyYW1zIiwiY3VycmVudEluZGV4IiwiaW5kZXhPZiIsInByZXZFbnRyeSIsImxlbmd0aCIsIm5leHRFbnRyeSIsInByb3BzIiwibm90Rm91bmQiLCJnZXRTdGF0aWNQYXRocyIsInBhdGhzIiwibWFwIiwiZmFsbGJhY2siLCJFcnJvciIsIlNsdWciLCJnZXRMYXlvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/entry/[slug].tsx\n");

/***/ }),

/***/ "./repositories/article.ts":
/*!*********************************!*\
  !*** ./repositories/article.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var utils_notion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils/notion */ \"../../packages/utils/notion.ts\");\n/* harmony import */ var _models_articles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/models/articles */ \"./models/articles.ts\");\n/* harmony import */ var _models_articleBody__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/models/articleBody */ \"./models/articleBody.ts\");\n\n\n\nconst article = {\n    async getArticles () {\n        const client = (0,utils_notion__WEBPACK_IMPORTED_MODULE_0__.createNotionClient)();\n        const databaseId = process.env.NOTION_DATABASE_ID;\n        try {\n            const databaseResults = (await client.databases.query({\n                database_id: databaseId,\n                filter: {\n                    property: \"Status\",\n                    select: {\n                        equals: \"Published\"\n                    }\n                }\n            })).results;\n            const entries = [];\n            for (const result of databaseResults){\n                const pageProps = (await client.pages.retrieve({\n                    page_id: result.id\n                })).properties;\n                const pageContents = await client.blocks.children.list({\n                    block_id: result.id\n                });\n                entries.push({\n                    head: {\n                        slug: pageProps.Slug.rich_text[0].plain_text,\n                        tags: pageProps.Tags.multi_select.map(({ name  })=>name),\n                        created: pageProps.Created.created_time,\n                        updated: pageProps.Updated.last_edited_time,\n                        title: pageProps.Name.title[0].plain_text,\n                        coverImageUrl: pageProps.cover?.external.url ?? null\n                    },\n                    body: pageContents.results.map(_models_articleBody__WEBPACK_IMPORTED_MODULE_2__[\"default\"].transform)\n                });\n            }\n            return entries.map(_models_articles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].transform);\n        } catch (e) {\n            throw e;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (article);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXBvc2l0b3JpZXMvYXJ0aWNsZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSWtEO0FBRVo7QUFDZTtBQTRCckQsTUFBTUcsVUFBNkI7SUFDakMsTUFBTUMsZUFBYztRQUNsQixNQUFNQyxTQUFTTCxnRUFBa0JBO1FBQ2pDLE1BQU1NLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0Msa0JBQWtCO1FBRWpELElBQUk7WUFDRixNQUFNQyxrQkFBa0IsQ0FDdEIsTUFBTUwsT0FBT00sU0FBUyxDQUFDQyxLQUFLLENBQUM7Z0JBQzNCQyxhQUFhUDtnQkFDYlEsUUFBUTtvQkFDTkMsVUFBVTtvQkFDVkMsUUFBUTt3QkFDTkMsUUFBUTtvQkFDVjtnQkFDRjtZQUNGLEVBQUMsRUFDREMsT0FBTztZQUVULE1BQU1DLFVBQW9CLEVBQUU7WUFDNUIsS0FBSyxNQUFNQyxVQUFVVixnQkFBaUI7Z0JBQ3BDLE1BQU1XLFlBQVksQ0FDZixNQUFNaEIsT0FBT2lCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDO29CQUMzQkMsU0FBU0osT0FBT0ssRUFBRTtnQkFDcEIsRUFBQyxFQUNEQyxVQUFVO2dCQUNaLE1BQU1DLGVBQWUsTUFBTXRCLE9BQU91QixNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDO29CQUNyREMsVUFBVVgsT0FBT0ssRUFBRTtnQkFDckI7Z0JBQ0FOLFFBQVFhLElBQUksQ0FBQztvQkFDWEMsTUFBTTt3QkFDSkMsTUFBTWIsVUFBVWMsSUFBSSxDQUFDQyxTQUFTLENBQUMsRUFBRSxDQUFDQyxVQUFVO3dCQUM1Q0MsTUFBTWpCLFVBQVVrQixJQUFJLENBQUNDLFlBQVksQ0FBQ0MsR0FBRyxDQUNuQyxDQUFDLEVBQUVDLEtBQUksRUFBb0IsR0FBS0E7d0JBRWxDQyxTQUFTdEIsVUFBVXVCLE9BQU8sQ0FBQ0MsWUFBWTt3QkFDdkNDLFNBQVN6QixVQUFVMEIsT0FBTyxDQUFDQyxnQkFBZ0I7d0JBQzNDQyxPQUFPNUIsVUFBVTZCLElBQUksQ0FBQ0QsS0FBSyxDQUFDLEVBQUUsQ0FBQ1osVUFBVTt3QkFDekNjLGVBQWU5QixVQUFVK0IsS0FBSyxFQUFFQyxTQUFTQyxHQUFHLElBQUksSUFBSTtvQkFDdEQ7b0JBQ0FDLE1BQU0sYUFBY3JDLE9BQU8sQ0FBMkJ1QixHQUFHLENBQ3ZEdkMscUVBQTJCO2dCQUUvQjtZQUNGO1lBRUEsT0FBT2lCLFFBQVFzQixHQUFHLENBQUN4QyxrRUFBZTtRQUNwQyxFQUFFLE9BQU93RCxHQUFHO1lBQ1YsTUFBTUEsRUFBRTtRQUNWO0lBQ0Y7QUFDRjtBQUVBLGlFQUFldEQsT0FBT0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi9yZXBvc2l0b3JpZXMvYXJ0aWNsZS50cz83OTZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEdldFBhZ2VSZXNwb25zZSxcbiAgUXVlcnlEYXRhYmFzZVJlc3BvbnNlLFxufSBmcm9tICdAbm90aW9uaHEvY2xpZW50L2J1aWxkL3NyYy9hcGktZW5kcG9pbnRzJztcbmltcG9ydCB7IGNyZWF0ZU5vdGlvbkNsaWVudCB9IGZyb20gJ3V0aWxzL25vdGlvbic7XG5pbXBvcnQgeyBCbG9ja09iamVjdFJlc3BvbnNlIH0gZnJvbSAnfi8uLi8uLi9wYWNrYWdlcy91dGlscy9ub3Rpb24tYmxvY2stcmVuZGVyZXInO1xuaW1wb3J0IG1vZGVsIGZyb20gJ34vbW9kZWxzL2FydGljbGVzJztcbmltcG9ydCBhcnRpY2xlc0JvZHlNb2RlbCBmcm9tICd+L21vZGVscy9hcnRpY2xlQm9keSc7XG5cbmV4cG9ydCB0eXBlIERhdGFiYXNlUmVzdWx0cyA9IChRdWVyeURhdGFiYXNlUmVzcG9uc2VbJ3Jlc3VsdHMnXVtudW1iZXJdICYge1xuICBwcm9wZXJ0aWVzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xufSlbXTtcbmV4cG9ydCB0eXBlIFBhZ2VQcm9wc1Jlc3VsdHMgPSBHZXRQYWdlUmVzcG9uc2UgJiB7XG4gIHByb3BlcnRpZXM6IFJlY29yZDxzdHJpbmcsIGFueT47XG59O1xuXG5leHBvcnQgdHlwZSBBcnRpY2xlcyA9IHtcbiAgaGVhZDoge1xuICAgIHNsdWc6IHN0cmluZztcbiAgICB0YWdzOiBzdHJpbmdbXTtcbiAgICBjcmVhdGVkOiBzdHJpbmc7XG4gICAgdXBkYXRlZDogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgY292ZXJJbWFnZVVybDogc3RyaW5nIHwgbnVsbDtcbiAgfTtcbiAgYm9keToge1xuICAgIGNvbnRlbnQ6IEJsb2NrT2JqZWN0UmVzcG9uc2U7XG4gICAgaHRtbFN0cjogc3RyaW5nO1xuICB9W107XG59W107XG5cbmludGVyZmFjZSBBcnRpY2xlUmVwb3NpdG9yeSB7XG4gIGdldEFydGljbGVzKCk6IFByb21pc2U8QXJ0aWNsZXM+O1xufVxuXG5jb25zdCBhcnRpY2xlOiBBcnRpY2xlUmVwb3NpdG9yeSA9IHtcbiAgYXN5bmMgZ2V0QXJ0aWNsZXMoKSB7XG4gICAgY29uc3QgY2xpZW50ID0gY3JlYXRlTm90aW9uQ2xpZW50KCk7XG4gICAgY29uc3QgZGF0YWJhc2VJZCA9IHByb2Nlc3MuZW52Lk5PVElPTl9EQVRBQkFTRV9JRCE7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YWJhc2VSZXN1bHRzID0gKFxuICAgICAgICBhd2FpdCBjbGllbnQuZGF0YWJhc2VzLnF1ZXJ5KHtcbiAgICAgICAgICBkYXRhYmFzZV9pZDogZGF0YWJhc2VJZCxcbiAgICAgICAgICBmaWx0ZXI6IHtcbiAgICAgICAgICAgIHByb3BlcnR5OiAnU3RhdHVzJyxcbiAgICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgICBlcXVhbHM6ICdQdWJsaXNoZWQnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KVxuICAgICAgKS5yZXN1bHRzIGFzIHVua25vd24gYXMgRGF0YWJhc2VSZXN1bHRzO1xuXG4gICAgICBjb25zdCBlbnRyaWVzOiBBcnRpY2xlcyA9IFtdO1xuICAgICAgZm9yIChjb25zdCByZXN1bHQgb2YgZGF0YWJhc2VSZXN1bHRzKSB7XG4gICAgICAgIGNvbnN0IHBhZ2VQcm9wcyA9IChcbiAgICAgICAgICAoYXdhaXQgY2xpZW50LnBhZ2VzLnJldHJpZXZlKHtcbiAgICAgICAgICAgIHBhZ2VfaWQ6IHJlc3VsdC5pZCxcbiAgICAgICAgICB9KSkgYXMgdW5rbm93biBhcyBQYWdlUHJvcHNSZXN1bHRzXG4gICAgICAgICkucHJvcGVydGllcztcbiAgICAgICAgY29uc3QgcGFnZUNvbnRlbnRzID0gYXdhaXQgY2xpZW50LmJsb2Nrcy5jaGlsZHJlbi5saXN0KHtcbiAgICAgICAgICBibG9ja19pZDogcmVzdWx0LmlkLFxuICAgICAgICB9KTtcbiAgICAgICAgZW50cmllcy5wdXNoKHtcbiAgICAgICAgICBoZWFkOiB7XG4gICAgICAgICAgICBzbHVnOiBwYWdlUHJvcHMuU2x1Zy5yaWNoX3RleHRbMF0ucGxhaW5fdGV4dCxcbiAgICAgICAgICAgIHRhZ3M6IHBhZ2VQcm9wcy5UYWdzLm11bHRpX3NlbGVjdC5tYXAoXG4gICAgICAgICAgICAgICh7IG5hbWUgfTogeyBuYW1lOiBzdHJpbmcgfSkgPT4gbmFtZVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGNyZWF0ZWQ6IHBhZ2VQcm9wcy5DcmVhdGVkLmNyZWF0ZWRfdGltZSxcbiAgICAgICAgICAgIHVwZGF0ZWQ6IHBhZ2VQcm9wcy5VcGRhdGVkLmxhc3RfZWRpdGVkX3RpbWUsXG4gICAgICAgICAgICB0aXRsZTogcGFnZVByb3BzLk5hbWUudGl0bGVbMF0ucGxhaW5fdGV4dCxcbiAgICAgICAgICAgIGNvdmVySW1hZ2VVcmw6IHBhZ2VQcm9wcy5jb3Zlcj8uZXh0ZXJuYWwudXJsID8/IG51bGwsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiAocGFnZUNvbnRlbnRzLnJlc3VsdHMgYXMgQmxvY2tPYmplY3RSZXNwb25zZVtdKS5tYXAoXG4gICAgICAgICAgICBhcnRpY2xlc0JvZHlNb2RlbC50cmFuc2Zvcm1cbiAgICAgICAgICApLFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVudHJpZXMubWFwKG1vZGVsLnRyYW5zZm9ybSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBhcnRpY2xlO1xuIl0sIm5hbWVzIjpbImNyZWF0ZU5vdGlvbkNsaWVudCIsIm1vZGVsIiwiYXJ0aWNsZXNCb2R5TW9kZWwiLCJhcnRpY2xlIiwiZ2V0QXJ0aWNsZXMiLCJjbGllbnQiLCJkYXRhYmFzZUlkIiwicHJvY2VzcyIsImVudiIsIk5PVElPTl9EQVRBQkFTRV9JRCIsImRhdGFiYXNlUmVzdWx0cyIsImRhdGFiYXNlcyIsInF1ZXJ5IiwiZGF0YWJhc2VfaWQiLCJmaWx0ZXIiLCJwcm9wZXJ0eSIsInNlbGVjdCIsImVxdWFscyIsInJlc3VsdHMiLCJlbnRyaWVzIiwicmVzdWx0IiwicGFnZVByb3BzIiwicGFnZXMiLCJyZXRyaWV2ZSIsInBhZ2VfaWQiLCJpZCIsInByb3BlcnRpZXMiLCJwYWdlQ29udGVudHMiLCJibG9ja3MiLCJjaGlsZHJlbiIsImxpc3QiLCJibG9ja19pZCIsInB1c2giLCJoZWFkIiwic2x1ZyIsIlNsdWciLCJyaWNoX3RleHQiLCJwbGFpbl90ZXh0IiwidGFncyIsIlRhZ3MiLCJtdWx0aV9zZWxlY3QiLCJtYXAiLCJuYW1lIiwiY3JlYXRlZCIsIkNyZWF0ZWQiLCJjcmVhdGVkX3RpbWUiLCJ1cGRhdGVkIiwiVXBkYXRlZCIsImxhc3RfZWRpdGVkX3RpbWUiLCJ0aXRsZSIsIk5hbWUiLCJjb3ZlckltYWdlVXJsIiwiY292ZXIiLCJleHRlcm5hbCIsInVybCIsImJvZHkiLCJ0cmFuc2Zvcm0iLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./repositories/article.ts\n");

/***/ }),

/***/ "./usecases/getArticles.ts":
/*!*********************************!*\
  !*** ./usecases/getArticles.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getArticles\": () => (/* binding */ getArticles)\n/* harmony export */ });\n/* harmony import */ var _models_articles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/models/articles */ \"./models/articles.ts\");\n/* harmony import */ var _repositories_article__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/repositories/article */ \"./repositories/article.ts\");\n\n\nfunction getArticles() {\n    return {\n        async invoke () {\n            const result = await _repositories_article__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getArticles();\n            return result.map(_models_articles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transform);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91c2VjYXNlcy9nZXRBcnRpY2xlcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDSTtBQUVuQyxTQUFTRSxjQUFjO0lBQzVCLE9BQU87UUFDTCxNQUFNQyxVQUFTO1lBQ2IsTUFBTUMsU0FBUyxNQUFNSCx5RUFBZ0I7WUFDckMsT0FBT0csT0FBT0MsR0FBRyxDQUFDTCxrRUFBZTtRQUNuQztJQUNGO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi91c2VjYXNlcy9nZXRBcnRpY2xlcy50cz9mZGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2RlbCBmcm9tICd+L21vZGVscy9hcnRpY2xlcyc7XG5pbXBvcnQgcmVwbyBmcm9tICd+L3JlcG9zaXRvcmllcy9hcnRpY2xlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFydGljbGVzKCkge1xuICByZXR1cm4ge1xuICAgIGFzeW5jIGludm9rZSgpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlcG8uZ2V0QXJ0aWNsZXMoKTtcbiAgICAgIHJldHVybiByZXN1bHQubWFwKG1vZGVsLnRyYW5zZm9ybSk7XG4gICAgfSxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJtb2RlbCIsInJlcG8iLCJnZXRBcnRpY2xlcyIsImludm9rZSIsInJlc3VsdCIsIm1hcCIsInRyYW5zZm9ybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./usecases/getArticles.ts\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/add-base-path.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/client/add-base-path.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addBasePath = addBasePath;\nvar _addPathPrefix = __webpack_require__(/*! ../shared/lib/router/utils/add-path-prefix */ \"../shared/lib/router/utils/add-path-prefix\");\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"../../node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst basePath =  false || \"\";\nfunction addBasePath(path, required) {\n    if (false) {}\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash((0, _addPathPrefix).addPathPrefix(path, basePath));\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvYWRkLWJhc2UtcGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxtQkFBbUIsR0FBR0U7QUFDdEIsSUFBSUMsaUJBQWlCQyxtQkFBT0EsQ0FBQyw4RkFBNEM7QUFDekUsSUFBSUMsMEJBQTBCRCxtQkFBT0EsQ0FBQyxtR0FBNEI7QUFDbEUsTUFBTUUsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTTCxZQUFZUSxJQUFJLEVBQUVDLFFBQVEsRUFBRTtJQUNqQyxJQUFJSixLQUEwQyxFQUFFLEVBSS9DO0lBQ0QsT0FBTyxDQUFDLEdBQUdGLHVCQUF1QixFQUFFUSwwQkFBMEIsQ0FBQyxDQUFDLEdBQUdWLGNBQWMsRUFBRVcsYUFBYSxDQUFDSixNQUFNSjtBQUMzRztBQUVBLElBQUksQ0FBQyxPQUFPTixRQUFRZSxPQUFPLEtBQUssY0FBZSxPQUFPZixRQUFRZSxPQUFPLEtBQUssWUFBWWYsUUFBUWUsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPZixRQUFRZSxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLbEIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRZSxPQUFPLEVBQUUsY0FBYztRQUFFZCxPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT21CLE1BQU0sQ0FBQ2pCLFFBQVFlLE9BQU8sRUFBRWY7SUFDL0JrQixPQUFPbEIsT0FBTyxHQUFHQSxRQUFRZSxPQUFPO0FBQ2xDLENBQUMsQ0FFRCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1iYXNlLXBhdGguanM/YjczOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYWRkQmFzZVBhdGggPSBhZGRCYXNlUGF0aDtcbnZhciBfYWRkUGF0aFByZWZpeCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1wcmVmaXhcIik7XG52YXIgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBhZGRCYXNlUGF0aChwYXRoLCByZXF1aXJlZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX0NMSUVOVF9CQVNFX1BBVEgpIHtcbiAgICAgICAgaWYgKCFyZXF1aXJlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2goKDAsIF9hZGRQYXRoUHJlZml4KS5hZGRQYXRoUHJlZml4KHBhdGgsIGJhc2VQYXRoKSk7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1iYXNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYWRkQmFzZVBhdGgiLCJfYWRkUGF0aFByZWZpeCIsInJlcXVpcmUiLCJfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwicmVxdWlyZWQiLCJfX05FWFRfTUFOVUFMX0NMSUVOVF9CQVNFX1BBVEgiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImFkZFBhdGhQcmVmaXgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/add-base-path.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/add-locale.js":
/*!*********************************************************!*\
  !*** ../../node_modules/next/dist/client/add-locale.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.addLocale = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"../../node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst addLocale = (path, ...args)=>{\n    if (false) {}\n    return path;\n};\nexports.addLocale = addLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvYWRkLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pCLElBQUlHLDBCQUEwQkMsbUJBQU9BLENBQUMsbUdBQTRCO0FBQ2xFLE1BQU1GLFlBQVksQ0FBQ0csTUFBTSxHQUFHQyxPQUFPO0lBQy9CLElBQUlDLEtBQStCLEVBQUUsRUFFcEM7SUFDRCxPQUFPRjtBQUNYO0FBQ0FMLGlCQUFpQixHQUFHRTtBQUVwQixJQUFJLENBQUMsT0FBT0YsUUFBUVcsT0FBTyxLQUFLLGNBQWUsT0FBT1gsUUFBUVcsT0FBTyxLQUFLLFlBQVlYLFFBQVFXLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT1gsUUFBUVcsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS2QsT0FBT0MsY0FBYyxDQUFDQyxRQUFRVyxPQUFPLEVBQUUsY0FBYztRQUFFVixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT2UsTUFBTSxDQUFDYixRQUFRVyxPQUFPLEVBQUVYO0lBQy9CYyxPQUFPZCxPQUFPLEdBQUdBLFFBQVFXLE9BQU87QUFDbEMsQ0FBQyxDQUVELHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvYWRkLWxvY2FsZS5qcz81YmFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hZGRMb2NhbGUgPSB2b2lkIDA7XG52YXIgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBhZGRMb2NhbGUgPSAocGF0aCwgLi4uYXJncyk9PntcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICByZXR1cm4gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaChyZXF1aXJlKCcuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlJykuYWRkTG9jYWxlKHBhdGgsIC4uLmFyZ3MpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59O1xuZXhwb3J0cy5hZGRMb2NhbGUgPSBhZGRMb2NhbGU7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYWRkTG9jYWxlIiwiX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2giLCJyZXF1aXJlIiwicGF0aCIsImFyZ3MiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/add-locale.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/detect-domain-locale.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/next/dist/client/detect-domain-locale.js ***!
  \*******************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectDomainLocale = void 0;\nconst detectDomainLocale = (...args)=>{\n    if (false) {}\n};\nexports.detectDomainLocale = detectDomainLocale;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsMEJBQTBCLEdBQUcsS0FBSztBQUNsQyxNQUFNRSxxQkFBcUIsQ0FBQyxHQUFHQyxPQUFPO0lBQ2xDLElBQUlDLEtBQStCLEVBQUUsRUFFcEM7QUFDTDtBQUNBSiwwQkFBMEIsR0FBR0U7QUFFN0IsSUFBSSxDQUFDLE9BQU9GLFFBQVFRLE9BQU8sS0FBSyxjQUFlLE9BQU9SLFFBQVFRLE9BQU8sS0FBSyxZQUFZUixRQUFRUSxPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9SLFFBQVFRLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktYLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUVEsT0FBTyxFQUFFLGNBQWM7UUFBRVAsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9ZLE1BQU0sQ0FBQ1YsUUFBUVEsT0FBTyxFQUFFUjtJQUMvQlcsT0FBT1gsT0FBTyxHQUFHQSxRQUFRUSxPQUFPO0FBQ2xDLENBQUMsQ0FFRCxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2RldGVjdC1kb21haW4tbG9jYWxlLmpzP2MxZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRldGVjdERvbWFpbkxvY2FsZSA9IHZvaWQgMDtcbmNvbnN0IGRldGVjdERvbWFpbkxvY2FsZSA9ICguLi5hcmdzKT0+e1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKCcuLi9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGUoLi4uYXJncyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGV0ZWN0RG9tYWluTG9jYWxlID0gZGV0ZWN0RG9tYWluTG9jYWxlO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJhcmdzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/detect-domain-locale.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/get-domain-locale.js":
/*!****************************************************************!*\
  !*** ../../node_modules/next/dist/client/get-domain-locale.js ***!
  \****************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvZ2V0LWRvbWFpbi1sb2NhbGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsdUJBQXVCLEdBQUdFO0FBQzFCLE1BQU1DLFdBQVdDLE1BQWtDLElBQUk7QUFDdkQsU0FBU0YsZ0JBQWdCSyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEVBQUU7SUFDM0QsSUFBSU4sS0FBK0IsRUFBRSxFQVdwQyxNQUFNO1FBQ0gsT0FBTyxLQUFLO0lBQ2hCLENBQUM7QUFDTDtBQUVBLElBQUksQ0FBQyxPQUFPSixRQUFRdUIsT0FBTyxLQUFLLGNBQWUsT0FBT3ZCLFFBQVF1QixPQUFPLEtBQUssWUFBWXZCLFFBQVF1QixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU92QixRQUFRdUIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySzFCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUXVCLE9BQU8sRUFBRSxjQUFjO1FBQUV0QixPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBTzJCLE1BQU0sQ0FBQ3pCLFFBQVF1QixPQUFPLEVBQUV2QjtJQUMvQjBCLE9BQU8xQixPQUFPLEdBQUdBLFFBQVF1QixPQUFPO0FBQ2xDLENBQUMsQ0FFRCw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2dldC1kb21haW4tbG9jYWxlLmpzPzBkMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldERvbWFpbkxvY2FsZSA9IGdldERvbWFpbkxvY2FsZTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCAnJztcbmZ1bmN0aW9uIGdldERvbWFpbkxvY2FsZShwYXRoLCBsb2NhbGUsIGxvY2FsZXMsIGRvbWFpbkxvY2FsZXMpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICBjb25zdCBub3JtYWxpemVMb2NhbGVQYXRoID0gcmVxdWlyZSgnLi9ub3JtYWxpemUtbG9jYWxlLXBhdGgnKS5ub3JtYWxpemVMb2NhbGVQYXRoO1xuICAgICAgICBjb25zdCBkZXRlY3REb21haW5Mb2NhbGUgPSByZXF1aXJlKCcuL2RldGVjdC1kb21haW4tbG9jYWxlJykuZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBsb2NhbGUgfHwgbm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZG9tYWluID0gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgY29uc3QgcHJvdG8gPSBgaHR0cCR7ZG9tYWluLmh0dHAgPyAnJyA6ICdzJ306Ly9gO1xuICAgICAgICAgICAgY29uc3QgZmluYWxMb2NhbGUgPSB0YXJnZXQgPT09IGRvbWFpbi5kZWZhdWx0TG9jYWxlID8gJycgOiBgLyR7dGFyZ2V0fWA7XG4gICAgICAgICAgICByZXR1cm4gYCR7cHJvdG99JHtkb21haW4uZG9tYWlufSR7YmFzZVBhdGh9JHtmaW5hbExvY2FsZX0ke3BhdGh9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWRvbWFpbi1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0RG9tYWluTG9jYWxlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJsb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVxdWlyZSIsImRldGVjdERvbWFpbkxvY2FsZSIsInRhcmdldCIsImRldGVjdGVkTG9jYWxlIiwiZG9tYWluIiwidW5kZWZpbmVkIiwicHJvdG8iLCJodHRwIiwiZmluYWxMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/get-domain-locale.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/has-base-path.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/client/has-base-path.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.hasBasePath = hasBasePath;\nvar _pathHasPrefix = __webpack_require__(/*! ../shared/lib/router/utils/path-has-prefix */ \"../shared/lib/router/utils/path-has-prefix\");\nconst basePath =  false || \"\";\nfunction hasBasePath(path) {\n    return (0, _pathHasPrefix).pathHasPrefix(path, basePath);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=has-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvaGFzLWJhc2UtcGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxtQkFBbUIsR0FBR0U7QUFDdEIsSUFBSUMsaUJBQWlCQyxtQkFBT0EsQ0FBQyw4RkFBNEM7QUFDekUsTUFBTUMsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTSixZQUFZTyxJQUFJLEVBQUU7SUFDdkIsT0FBTyxDQUFDLEdBQUdOLGNBQWMsRUFBRU8sYUFBYSxDQUFDRCxNQUFNSjtBQUNuRDtBQUVBLElBQUksQ0FBQyxPQUFPTCxRQUFRVyxPQUFPLEtBQUssY0FBZSxPQUFPWCxRQUFRVyxPQUFPLEtBQUssWUFBWVgsUUFBUVcsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPWCxRQUFRVyxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLZCxPQUFPQyxjQUFjLENBQUNDLFFBQVFXLE9BQU8sRUFBRSxjQUFjO1FBQUVWLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPZSxNQUFNLENBQUNiLFFBQVFXLE9BQU8sRUFBRVg7SUFDL0JjLE9BQU9kLE9BQU8sR0FBR0EsUUFBUVcsT0FBTztBQUNsQyxDQUFDLENBRUQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzP2UzZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmhhc0Jhc2VQYXRoID0gaGFzQmFzZVBhdGg7XG52YXIgX3BhdGhIYXNQcmVmaXggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4XCIpO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gaGFzQmFzZVBhdGgocGF0aCkge1xuICAgIHJldHVybiAoMCwgX3BhdGhIYXNQcmVmaXgpLnBhdGhIYXNQcmVmaXgocGF0aCwgYmFzZVBhdGgpO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXMtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhhc0Jhc2VQYXRoIiwiX3BhdGhIYXNQcmVmaXgiLCJyZXF1aXJlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJwYXRoSGFzUHJlZml4IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/has-base-path.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/head-manager.js":
/*!***********************************************************!*\
  !*** ../../node_modules/next/dist/client/head-manager.js ***!
  \***********************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = initHeadManager;\nexports.isEqualNode = isEqualNode;\nexports.DOMAttributeNames = void 0;\nfunction initHeadManager() {\n    return {\n        mountedInstances: new Set(),\n        updateHead: (head)=>{\n            const tags = {};\n            head.forEach((h)=>{\n                if (// it won't be inlined. In this case revert to the original behavior\n                h.type === \"link\" && h.props[\"data-optimized-fonts\"]) {\n                    if (document.querySelector(`style[data-href=\"${h.props[\"data-href\"]}\"]`)) {\n                        return;\n                    } else {\n                        h.props.href = h.props[\"data-href\"];\n                        h.props[\"data-href\"] = undefined;\n                    }\n                }\n                const components = tags[h.type] || [];\n                components.push(h);\n                tags[h.type] = components;\n            });\n            const titleComponent = tags.title ? tags.title[0] : null;\n            let title = \"\";\n            if (titleComponent) {\n                const { children  } = titleComponent.props;\n                title = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n            }\n            if (title !== document.title) document.title = title;\n            [\n                \"meta\",\n                \"base\",\n                \"link\",\n                \"style\",\n                \"script\"\n            ].forEach((type)=>{\n                updateElements(type, tags[type] || []);\n            });\n        }\n    };\n}\nconst DOMAttributeNames = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\",\n    noModule: \"noModule\"\n};\nexports.DOMAttributeNames = DOMAttributeNames;\nfunction reactElementToDOM({ type , props  }) {\n    const el = document.createElement(type);\n    for(const p in props){\n        if (!props.hasOwnProperty(p)) continue;\n        if (p === \"children\" || p === \"dangerouslySetInnerHTML\") continue;\n        // we don't render undefined props to the DOM\n        if (props[p] === undefined) continue;\n        const attr = DOMAttributeNames[p] || p.toLowerCase();\n        if (type === \"script\" && (attr === \"async\" || attr === \"defer\" || attr === \"noModule\")) {\n            el[attr] = !!props[p];\n        } else {\n            el.setAttribute(attr, props[p]);\n        }\n    }\n    const { children , dangerouslySetInnerHTML  } = props;\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    }\n    return el;\n}\nfunction isEqualNode(oldTag, newTag) {\n    if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n        const nonce = newTag.getAttribute(\"nonce\");\n        // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n        // be stripped if there is no content security policy response header that includes a nonce.\n        if (nonce && !oldTag.getAttribute(\"nonce\")) {\n            const cloneTag = newTag.cloneNode(true);\n            cloneTag.setAttribute(\"nonce\", \"\");\n            cloneTag.nonce = nonce;\n            return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n        }\n    }\n    return oldTag.isEqualNode(newTag);\n}\nfunction updateElements(type, components) {\n    const headEl = document.getElementsByTagName(\"head\")[0];\n    const headCountEl = headEl.querySelector(\"meta[name=next-head-count]\");\n    if (true) {\n        if (!headCountEl) {\n            console.error(\"Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing\");\n            return;\n        }\n    }\n    const headCount = Number(headCountEl.content);\n    const oldTags = [];\n    for(let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null){\n        var ref;\n        if ((j == null ? void 0 : (ref = j.tagName) == null ? void 0 : ref.toLowerCase()) === type) {\n            oldTags.push(j);\n        }\n    }\n    const newTags = components.map(reactElementToDOM).filter((newTag)=>{\n        for(let k = 0, len = oldTags.length; k < len; k++){\n            const oldTag = oldTags[k];\n            if (isEqualNode(oldTag, newTag)) {\n                oldTags.splice(k, 1);\n                return false;\n            }\n        }\n        return true;\n    });\n    oldTags.forEach((t)=>{\n        var ref;\n        return (ref = t.parentNode) == null ? void 0 : ref.removeChild(t);\n    });\n    newTags.forEach((t)=>headEl.insertBefore(t, headCountEl));\n    headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/head-manager.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/image.js":
/*!****************************************************!*\
  !*** ../../node_modules/next/dist/client/image.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"../../node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../shared/lib/head */ \"../../node_modules/next/dist/shared/lib/head.js\"));\nvar _imageBlurSvg = __webpack_require__(/*! ../shared/lib/image-blur-svg */ \"../shared/lib/image-blur-svg\");\nvar _imageConfig = __webpack_require__(/*! ../shared/lib/image-config */ \"../shared/lib/image-config\");\nvar _imageConfigContext = __webpack_require__(/*! ../shared/lib/image-config-context */ \"../shared/lib/image-config-context\");\nvar _warnOnce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"../shared/lib/utils/warn-once\");\nvar _imageLoader = _interop_require_default(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"next/dist/shared/lib/image-loader\"));\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":true,\"domains\":[],\"remotePatterns\":[{\"protocol\":\"https\",\"hostname\":\"b.st-hatena.com\",\"port\":\"\",\"pathname\":\"/images/**\"}]};\nconst allImgs = new Map();\nlet perfObserver;\nif (true) {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({ deviceSizes , allSizes  }, width, sizes) {\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs({ config , src , unoptimized , width , quality , sizes , loader  }) {\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>`${loader({\n                config,\n                src,\n                quality,\n                width: w\n            })} ${kind === \"w\" ? w : i + 1}${kind}`).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentNode) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`);\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(\",\")}.`);\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n            }\n        }\n    });\n}\nconst ImageElement = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        style: _extends({}, imgStyle, blurStyle),\n        ref: (0, _react).useCallback((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!srcString) {\n                    console.error(`Image is missing required \"src\" property:`, img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n});\nconst Image = /*#__PURE__*/ (0, _react).forwardRef((_param, forwardedRef)=>{\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL , layout , objectFit , objectPosition , lazyBoundary , lazyRoot  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\",\n        \"layout\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"lazyBoundary\",\n        \"lazyRoot\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error(`Image with src \"${src}\" is missing \"loader\" prop.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`);\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = _extends({}, style, layoutStyle);\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n                }\n                if (height) {\n                    throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n                } else if (isNaN(widthInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n                } else if (isNaN(heightInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(\",\")}.`);\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\",\")}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _warnOnce).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnOnce).warnOnce(`Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` + `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`);\n            }\n        }\n        if (false) {}\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL\n        })}\")`\n    } : {};\n    if (true) {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (false) {}\n    }\n    const linkProps = {\n        // @ts-expect-error upgrade react types to react 18\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    };\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n        ref: forwardedRef\n    })), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n});\nvar _default = Image;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/image.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/link.js":
/*!***************************************************!*\
  !*** ../../node_modules/next/dist/client/link.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"../../node_modules/next/dist/shared/lib/router/router.js\");\nvar _formatUrl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"../shared/lib/router/utils/format-url\");\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"../../node_modules/next/dist/client/add-locale.js\");\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"../shared/lib/app-router-context\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"../../node_modules/next/dist/client/use-intersection.js\");\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"../../node_modules/next/dist/client/get-domain-locale.js\");\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"../../node_modules/next/dist/client/add-base-path.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options) {\n    if (true) {\n        return;\n    }\n    if (!(0, _router).isLocalURL(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formatUrl).formatUrl(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : \"\"));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter: onMouseEnterProp , onTouchStart: onTouchStartProp , legacyBehavior =true === false  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const prefetchEnabled = prefetchProp !== false;\n    const pagesRouter = _react.default.useContext(_routerContext.RouterContext);\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(`Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`);\n                }\n            }\n        }\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n            }\n            if (onMouseEnterProp) {\n                console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n                }\n                throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : \"\"));\n            }\n        } else {}\n    } else {\n        if (true) {\n            var ref;\n            if (((ref = children) == null ? void 0 : ref.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        });\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            });\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getDomainLocale).getDomainLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/normalize-trailing-slash.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.normalizePathTrailingSlash = void 0;\nvar _removeTrailingSlash = __webpack_require__(/*! ../shared/lib/router/utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nconst normalizePathTrailingSlash = (path)=>{\n    if (!path.startsWith(\"/\") || undefined) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsePath).parsePath(path);\n    if (false) {}\n    return `${(0, _removeTrailingSlash).removeTrailingSlash(pathname)}${query}${hash}`;\n};\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELGtDQUFrQyxHQUFHLEtBQUs7QUFDMUMsSUFBSUcsdUJBQXVCQyxtQkFBT0EsQ0FBQywwR0FBa0Q7QUFDckYsSUFBSUMsYUFBYUQsbUJBQU9BLENBQUMsb0ZBQXVDO0FBQ2hFLE1BQU1GLDZCQUE2QixDQUFDSSxPQUFPO0lBQ3ZDLElBQUksQ0FBQ0EsS0FBS0MsVUFBVSxDQUFDLFFBQVFDLFNBQXdDLEVBQUU7UUFDbkUsT0FBT0Y7SUFDWCxDQUFDO0lBQ0QsTUFBTSxFQUFFSyxTQUFRLEVBQUdDLE1BQUssRUFBR0MsS0FBSSxFQUFHLEdBQUcsQ0FBQyxHQUFHUixVQUFVLEVBQUVTLFNBQVMsQ0FBQ1I7SUFDL0QsSUFBSUUsS0FBaUMsRUFBRSxFQVF0QztJQUNELE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBR0wsb0JBQW9CLEVBQUVjLG1CQUFtQixDQUFDTixVQUFVLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxDQUFDO0FBQ3RGO0FBQ0FiLGtDQUFrQyxHQUFHRTtBQUVyQyxJQUFJLENBQUMsT0FBT0YsUUFBUW1CLE9BQU8sS0FBSyxjQUFlLE9BQU9uQixRQUFRbUIsT0FBTyxLQUFLLFlBQVluQixRQUFRbUIsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPbkIsUUFBUW1CLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDckt0QixPQUFPQyxjQUFjLENBQUNDLFFBQVFtQixPQUFPLEVBQUUsY0FBYztRQUFFbEIsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU91QixNQUFNLENBQUNyQixRQUFRbUIsT0FBTyxFQUFFbkI7SUFDL0JzQixPQUFPdEIsT0FBTyxHQUFHQSxRQUFRbUIsT0FBTztBQUNsQyxDQUFDLENBRUQsb0RBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/ZWQwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG52YXIgX3JlbW92ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aFwiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gKHBhdGgpPT57XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoJy8nKSB8fCBwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChwYXRoKTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHsoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSBpZiAocGF0aG5hbWUuZW5kc1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke3BhdGhuYW1lfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7cGF0aG5hbWV9LyR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGAkeygwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSl9JHtxdWVyeX0ke2hhc2h9YDtcbn07XG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2g7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsIl9yZW1vdmVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsIl9wYXJzZVBhdGgiLCJwYXRoIiwic3RhcnRzV2l0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giLCJwYXJzZVBhdGgiLCJfX05FWFRfVFJBSUxJTkdfU0xBU0giLCJ0ZXN0IiwicmVtb3ZlVHJhaWxpbmdTbGFzaCIsImVuZHNXaXRoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/remove-base-path.js":
/*!***************************************************************!*\
  !*** ../../node_modules/next/dist/client/remove-base-path.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeBasePath = removeBasePath;\nvar _hasBasePath = __webpack_require__(/*! ./has-base-path */ \"../../node_modules/next/dist/client/has-base-path.js\");\nconst basePath =  false || \"\";\nfunction removeBasePath(path) {\n    if (false) {}\n    path = path.slice(basePath.length);\n    if (!path.startsWith(\"/\")) path = `/${path}`;\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-base-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWJhc2UtcGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxzQkFBc0IsR0FBR0U7QUFDekIsSUFBSUMsZUFBZUMsbUJBQU9BLENBQUMsNkVBQWlCO0FBQzVDLE1BQU1DLFdBQVdDLE1BQWtDLElBQUk7QUFDdkQsU0FBU0osZUFBZU8sSUFBSSxFQUFFO0lBQzFCLElBQUlILEtBQTBDLEVBQUUsRUFJL0M7SUFDREcsT0FBT0EsS0FBS0csS0FBSyxDQUFDUCxTQUFTUSxNQUFNO0lBQ2pDLElBQUksQ0FBQ0osS0FBS0ssVUFBVSxDQUFDLE1BQU1MLE9BQU8sQ0FBQyxDQUFDLEVBQUVBLEtBQUssQ0FBQztJQUM1QyxPQUFPQTtBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9ULFFBQVFlLE9BQU8sS0FBSyxjQUFlLE9BQU9mLFFBQVFlLE9BQU8sS0FBSyxZQUFZZixRQUFRZSxPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9mLFFBQVFlLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktsQixPQUFPQyxjQUFjLENBQUNDLFFBQVFlLE9BQU8sRUFBRSxjQUFjO1FBQUVkLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPbUIsTUFBTSxDQUFDakIsUUFBUWUsT0FBTyxFQUFFZjtJQUMvQmtCLE9BQU9sQixPQUFPLEdBQUdBLFFBQVFlLE9BQU87QUFDbEMsQ0FBQyxDQUVELDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWJhc2UtcGF0aC5qcz8yYTIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVCYXNlUGF0aCA9IHJlbW92ZUJhc2VQYXRoO1xudmFyIF9oYXNCYXNlUGF0aCA9IHJlcXVpcmUoXCIuL2hhcy1iYXNlLXBhdGhcIik7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiByZW1vdmVCYXNlUGF0aChwYXRoKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCkge1xuICAgICAgICBpZiAoISgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXRoID0gcGF0aC5zbGljZShiYXNlUGF0aC5sZW5ndGgpO1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKCcvJykpIHBhdGggPSBgLyR7cGF0aH1gO1xuICAgIHJldHVybiBwYXRoO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJlbW92ZUJhc2VQYXRoIiwiX2hhc0Jhc2VQYXRoIiwicmVxdWlyZSIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwiX19ORVhUX01BTlVBTF9DTElFTlRfQkFTRV9QQVRIIiwiaGFzQmFzZVBhdGgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/remove-base-path.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/remove-locale.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/client/remove-locale.js ***!
  \************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeLocale = removeLocale;\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nfunction removeLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=remove-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxvQkFBb0IsR0FBR0U7QUFDdkIsSUFBSUMsYUFBYUMsbUJBQU9BLENBQUMsb0ZBQXVDO0FBQ2hFLFNBQVNGLGFBQWFHLElBQUksRUFBRUMsTUFBTSxFQUFFO0lBQ2hDLElBQUlDLEtBQStCLEVBQUUsRUFLcEM7SUFDRCxPQUFPRjtBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9MLFFBQVFrQixPQUFPLEtBQUssY0FBZSxPQUFPbEIsUUFBUWtCLE9BQU8sS0FBSyxZQUFZbEIsUUFBUWtCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2xCLFFBQVFrQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLckIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRa0IsT0FBTyxFQUFFLGNBQWM7UUFBRWpCLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPc0IsTUFBTSxDQUFDcEIsUUFBUWtCLE9BQU8sRUFBRWxCO0lBQy9CcUIsT0FBT3JCLE9BQU8sR0FBR0EsUUFBUWtCLE9BQU87QUFDbEMsQ0FBQyxDQUVELHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWxvY2FsZS5qcz80ZjllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVMb2NhbGUgPSByZW1vdmVMb2NhbGU7XG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoXCIpO1xuZnVuY3Rpb24gcmVtb3ZlTG9jYWxlKHBhdGgsIGxvY2FsZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IHsgcGF0aG5hbWUgIH0gPSAoMCwgX3BhcnNlUGF0aCkucGFyc2VQYXRoKHBhdGgpO1xuICAgICAgICBjb25zdCBwYXRoTG93ZXIgPSBwYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBsb2NhbGVMb3dlciA9IGxvY2FsZSA9PSBudWxsID8gdm9pZCAwIDogbG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiBsb2NhbGUgJiYgKHBhdGhMb3dlci5zdGFydHNXaXRoKGAvJHtsb2NhbGVMb3dlcn0vYCkgfHwgcGF0aExvd2VyID09PSBgLyR7bG9jYWxlTG93ZXJ9YCkgPyBgJHtwYXRobmFtZS5sZW5ndGggPT09IGxvY2FsZS5sZW5ndGggKyAxID8gYC9gIDogYGB9JHtwYXRoLnNsaWNlKGxvY2FsZS5sZW5ndGggKyAxKX1gIDogcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZS1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlTG9jYWxlIiwiX3BhcnNlUGF0aCIsInJlcXVpcmUiLCJwYXRoIiwibG9jYWxlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJwYXRobmFtZSIsInBhcnNlUGF0aCIsInBhdGhMb3dlciIsInRvTG93ZXJDYXNlIiwibG9jYWxlTG93ZXIiLCJzdGFydHNXaXRoIiwibGVuZ3RoIiwic2xpY2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/remove-locale.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/request-idle-callback.js":
/*!********************************************************************!*\
  !*** ../../node_modules/next/dist/client/request-idle-callback.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return self.setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELDBCQUEwQixHQUFHQSwyQkFBMkIsR0FBRyxLQUFLO0FBQ2hFLE1BQU1HLHNCQUFzQixPQUFPQyxTQUFTLGVBQWVBLEtBQUtELG1CQUFtQixJQUFJQyxLQUFLRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxXQUFXLFNBQVNDLEVBQUUsRUFBRTtJQUN6SSxJQUFJQyxRQUFRQyxLQUFLQyxHQUFHO0lBQ3BCLE9BQU9OLEtBQUtPLFVBQVUsQ0FBQyxXQUFXO1FBQzlCSixHQUFHO1lBQ0NLLFlBQVksS0FBSztZQUNqQkMsZUFBZSxXQUFXO2dCQUN0QixPQUFPQyxLQUFLQyxHQUFHLENBQUMsR0FBRyxLQUFNTixDQUFBQSxLQUFLQyxHQUFHLEtBQUtGLEtBQUk7WUFDOUM7UUFDSjtJQUNKLEdBQUc7QUFDUDtBQUNBUiwyQkFBMkIsR0FBR0c7QUFDOUIsTUFBTUQscUJBQXFCLE9BQU9FLFNBQVMsZUFBZUEsS0FBS0Ysa0JBQWtCLElBQUlFLEtBQUtGLGtCQUFrQixDQUFDRyxJQUFJLENBQUNDLFdBQVcsU0FBU1UsRUFBRSxFQUFFO0lBQ3RJLE9BQU9DLGFBQWFEO0FBQ3hCO0FBQ0FoQiwwQkFBMEIsR0FBR0U7QUFFN0IsSUFBSSxDQUFDLE9BQU9GLFFBQVFrQixPQUFPLEtBQUssY0FBZSxPQUFPbEIsUUFBUWtCLE9BQU8sS0FBSyxZQUFZbEIsUUFBUWtCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2xCLFFBQVFrQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLckIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRa0IsT0FBTyxFQUFFLGNBQWM7UUFBRWpCLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPc0IsTUFBTSxDQUFDcEIsUUFBUWtCLE9BQU8sRUFBRWxCO0lBQy9CcUIsT0FBT3JCLE9BQU8sR0FBR0EsUUFBUWtCLE9BQU87QUFDbEMsQ0FBQyxDQUVELGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzP2U5NzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNhbmNlbElkbGVDYWxsYmFjayA9IGV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHZvaWQgMDtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjay5iaW5kKHdpbmRvdykgfHwgZnVuY3Rpb24oY2IpIHtcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgIHJldHVybiBzZWxmLnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKHtcbiAgICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCAxKTtcbn07XG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gY2FuY2VsSWRsZUNhbGxiYWNrO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/route-loader.js":
/*!***********************************************************!*\
  !*** ../../node_modules/next/dist/client/route-loader.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _getAssetPathFromRoute = _interop_require_default(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _trustedTypes = __webpack_require__(/*! ./trusted-types */ \"../../node_modules/next/dist/client/trusted-types.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"../../node_modules/next/dist/client/request-idle-callback.js\");\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if (\"future\" in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nconst ASSET_LOAD_ERROR = Symbol(\"ASSET_LOAD_ERROR\");\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement(\"link\");\n        return(// with relList.support\n        !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports(\"prefetch\"));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((resolve, reject)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return resolve();\n        }\n        link = document.createElement(\"link\");\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = resolve;\n        link.onerror = ()=>reject(markAssetError(new Error(`Failed to prefetch: ${href}`)));\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement(\"script\");\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)));\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms));\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client build manifest\")));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        const scriptUrl = assetPrefix + \"/_next/static/chunks/pages\" + encodeURI((0, _getAssetPathFromRoute).default(route, \".js\"));\n        return Promise.resolve({\n            scripts: [\n                (0, _trustedTypes).__unsafeCreateTrustedScriptURL(scriptUrl)\n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + \"/_next/\" + encodeURI(entry));\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith(\".js\")).map((v)=>(0, _trustedTypes).__unsafeCreateTrustedScriptURL(v)),\n            css: allFiles.filter((v)=>v.endsWith(\".css\"))\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                }));\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route, execute) {\n            (execute ? Promise.resolve().then(()=>execute()).then((exports1)=>({\n                    component: exports1 && exports1.default || exports1,\n                    exports: exports1\n                }), (err)=>({\n                    error: err\n                })) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route);\n                if (old && \"resolve\" in old) {\n                    if (input) {\n                        entrypoints.set(route, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route, input);\n                    } else {\n                        entrypoints.delete(route);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route);\n                }\n            });\n        },\n        loadRoute (route, prefetch) {\n            return withFuture(route, routes, ()=>{\n                let devBuildPromiseResolve;\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        devBuildPromiseResolve = resolve;\n                    });\n                }\n                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet))\n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        }));\n                }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return \"error\" in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                }).finally(()=>{\n                    return devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve();\n                });\n            });\n        },\n        prefetch (route) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script.toString(), \"script\")) : [])).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route, true).catch(()=>{}));\n            }).catch(()=>{});\n        }\n    };\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/script.js":
/*!*****************************************************!*\
  !*** ../../node_modules/next/dist/client/script.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"../../node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"../../node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _reactDom = _interop_require_default(__webpack_require__(/*! react-dom */ \"react-dom\"));\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _headManagerContext = __webpack_require__(/*! ../shared/lib/head-manager-context */ \"./head-manager-context\");\nvar _headManager = __webpack_require__(/*! ./head-manager */ \"../../node_modules/next/dist/client/head-manager.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"../../node_modules/next/dist/client/request-idle-callback.js\");\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"onReady\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\"\n];\nconst loadScript = (props)=>{\n    const { src , id , onLoad =()=>{} , onReady =null , dangerouslySetInnerHTML , children =\"\" , strategy =\"afterInteractive\" , onError  } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n        // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    /** Execute after the script first loaded */ const afterLoad = ()=>{\n        // Run onReady for the first time after load event\n        if (onReady) {\n            onReady();\n        }\n        // add cacheKey to LoadCache when load successfully\n        LoadCache.add(cacheKey);\n    };\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n            afterLoad();\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n        afterLoad();\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n        afterLoad();\n    } else if (src) {\n        el.src = src;\n        // do not add cacheKey into LoadCache for remote script here\n        // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n        ScriptCache.set(src, loadPromise);\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy =\"afterInteractive\"  } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props));\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')\n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n    const { id , src =\"\" , onLoad =()=>{} , onReady =null , strategy =\"afterInteractive\" , onError  } = props, restProps = _object_without_properties_loose(props, [\n        \"id\",\n        \"src\",\n        \"onLoad\",\n        \"onReady\",\n        \"strategy\",\n        \"onError\"\n    ]);\n    // Context is available only during SSR\n    const { updateScripts , scripts , getIsSsr , appDir , nonce  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */ const hasOnReadyEffectCalled = (0, _react).useRef(false);\n    (0, _react).useEffect(()=>{\n        const cacheKey = id || src;\n        if (!hasOnReadyEffectCalled.current) {\n            // Run onReady if script has loaded before but component is re-mounted\n            if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n                onReady();\n            }\n            hasOnReadyEffectCalled.current = true;\n        }\n    }, [\n        onReady,\n        id,\n        src\n    ]);\n    const hasLoadScriptEffectCalled = (0, _react).useRef(false);\n    (0, _react).useEffect(()=>{\n        if (!hasLoadScriptEffectCalled.current) {\n            if (strategy === \"afterInteractive\") {\n                loadScript(props);\n            } else if (strategy === \"lazyOnload\") {\n                loadLazyScript(props);\n            }\n            hasLoadScriptEffectCalled.current = true;\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                _extends({\n                    id,\n                    src,\n                    onLoad,\n                    onReady,\n                    onError\n                }, restProps)\n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    // For the app directory, we need React Float to preload these scripts.\n    if (appDir) {\n        // Before interactive scripts need to be loaded by Next.js' runtime instead\n        // of native <script> tags, because they no longer have `defer`.\n        if (strategy === \"beforeInteractive\") {\n            if (!src) {\n                // For inlined scripts, we put the content in `children`.\n                if (restProps.dangerouslySetInnerHTML) {\n                    restProps.children = restProps.dangerouslySetInnerHTML.__html;\n                    delete restProps.dangerouslySetInnerHTML;\n                }\n                return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                    nonce: nonce,\n                    dangerouslySetInnerHTML: {\n                        __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                            0,\n                            _extends({}, restProps)\n                        ])})`\n                    }\n                });\n            }\n            // @ts-ignore\n            _reactDom.default.preload(src, restProps.integrity ? {\n                as: \"script\",\n                integrity: restProps.integrity\n            } : {\n                as: \"script\"\n            });\n            return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                nonce: nonce,\n                dangerouslySetInnerHTML: {\n                    __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                        src\n                    ])})`\n                }\n            });\n        } else if (strategy === \"afterInteractive\") {\n            if (src) {\n                // @ts-ignore\n                _reactDom.default.preload(src, restProps.integrity ? {\n                    as: \"script\",\n                    integrity: restProps.integrity\n                } : {\n                    as: \"script\"\n                });\n            }\n        }\n    }\n    return null;\n}\nObject.defineProperty(Script, \"__nextScript\", {\n    value: true\n});\nvar _default = Script;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=script.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/script.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/trusted-types.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/client/trusted-types.js ***!
  \************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.__unsafeCreateTrustedScriptURL = __unsafeCreateTrustedScriptURL;\n/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */ let policy;\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */ function getPolicy() {\n    if (typeof policy === \"undefined\" && \"undefined\" !== \"undefined\") { var ref; }\n    return policy;\n}\nfunction __unsafeCreateTrustedScriptURL(url) {\n    var ref;\n    return ((ref = getPolicy()) == null ? void 0 : ref.createScriptURL(url)) || url;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=trusted-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvdHJ1c3RlZC10eXBlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCxzQ0FBc0MsR0FBR0U7QUFDekM7OztDQUdDLEdBQUcsSUFBSUM7QUFDUjs7O0NBR0MsR0FBRyxTQUFTQyxZQUFZO0lBQ3JCLElBQUksT0FBT0QsV0FBVyxlQUFlLGdCQUFrQixhQUFhLFlBT25FO0lBQ0QsT0FBT0E7QUFDWDtBQUNBLFNBQVNELCtCQUErQlcsR0FBRyxFQUFFO0lBQ3pDLElBQUlSO0lBQ0osT0FBTyxDQUFDLENBQUNBLE1BQU1ELFdBQVUsS0FBTSxJQUFJLEdBQUcsS0FBSyxJQUFJQyxJQUFJTyxlQUFlLENBQUNDLElBQUksS0FBS0E7QUFDaEY7QUFFQSxJQUFJLENBQUMsT0FBT2IsUUFBUWMsT0FBTyxLQUFLLGNBQWUsT0FBT2QsUUFBUWMsT0FBTyxLQUFLLFlBQVlkLFFBQVFjLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2QsUUFBUWMsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNyS2pCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUWMsT0FBTyxFQUFFLGNBQWM7UUFBRWIsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9rQixNQUFNLENBQUNoQixRQUFRYyxPQUFPLEVBQUVkO0lBQy9CaUIsT0FBT2pCLE9BQU8sR0FBR0EsUUFBUWMsT0FBTztBQUNsQyxDQUFDLENBRUQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzPzNkMzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCA9IF9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTDtcbi8qKlxuICogU3RvcmVzIHRoZSBUcnVzdGVkIFR5cGVzIFBvbGljeS4gU3RhcnRzIGFzIHVuZGVmaW5lZCBhbmQgY2FuIGJlIHNldCB0byBudWxsXG4gKiBpZiBUcnVzdGVkIFR5cGVzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIuXG4gKi8gbGV0IHBvbGljeTtcbi8qKlxuICogR2V0dGVyIGZvciB0aGUgVHJ1c3RlZCBUeXBlcyBQb2xpY3kuIElmIGl0IGlzIHVuZGVmaW5lZCwgaXQgaXMgaW5zdGFudGlhdGVkXG4gKiBoZXJlIG9yIHNldCB0byBudWxsIGlmIFRydXN0ZWQgVHlwZXMgaXMgbm90IHN1cHBvcnRlZCBpbiB0aGUgYnJvd3Nlci5cbiAqLyBmdW5jdGlvbiBnZXRQb2xpY3koKSB7XG4gICAgaWYgKHR5cGVvZiBwb2xpY3kgPT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciByZWY7XG4gICAgICAgIHBvbGljeSA9ICgocmVmID0gd2luZG93LnRydXN0ZWRUeXBlcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVQb2xpY3koJ25leHRqcycsIHtcbiAgICAgICAgICAgIGNyZWF0ZUhUTUw6IChpbnB1dCk9PmlucHV0LFxuICAgICAgICAgICAgY3JlYXRlU2NyaXB0OiAoaW5wdXQpPT5pbnB1dCxcbiAgICAgICAgICAgIGNyZWF0ZVNjcmlwdFVSTDogKGlucHV0KT0+aW5wdXRcbiAgICAgICAgfSkpIHx8IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBwb2xpY3k7XG59XG5mdW5jdGlvbiBfX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkwodXJsKSB7XG4gICAgdmFyIHJlZjtcbiAgICByZXR1cm4gKChyZWYgPSBnZXRQb2xpY3koKSkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVTY3JpcHRVUkwodXJsKSkgfHwgdXJsO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnVzdGVkLXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCIsInBvbGljeSIsImdldFBvbGljeSIsInJlZiIsIndpbmRvdyIsInRydXN0ZWRUeXBlcyIsImNyZWF0ZVBvbGljeSIsImNyZWF0ZUhUTUwiLCJpbnB1dCIsImNyZWF0ZVNjcmlwdCIsImNyZWF0ZVNjcmlwdFVSTCIsInVybCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/trusted-types.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/client/use-intersection.js":
/*!***************************************************************!*\
  !*** ../../node_modules/next/dist/client/use-intersection.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"../../node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const elementRef = (0, _react).useRef(null);\n    const setElement = (0, _react).useCallback((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvdXNlLWludGVyc2VjdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCx1QkFBdUIsR0FBR0U7QUFDMUIsSUFBSUMsU0FBU0MsbUJBQU9BLENBQUMsb0JBQU87QUFDNUIsSUFBSUMsdUJBQXVCRCxtQkFBT0EsQ0FBQyw2RkFBeUI7QUFDNUQsTUFBTUUsMEJBQTBCLE9BQU9DLHlCQUF5QjtBQUNoRSxNQUFNQyxZQUFZLElBQUlDO0FBQ3RCLE1BQU1DLFNBQVMsRUFBRTtBQUNqQixTQUFTQyxlQUFlQyxPQUFPLEVBQUU7SUFDN0IsTUFBTUMsS0FBSztRQUNQQyxNQUFNRixRQUFRRSxJQUFJLElBQUksSUFBSTtRQUMxQkMsUUFBUUgsUUFBUUksVUFBVSxJQUFJO0lBQ2xDO0lBQ0EsTUFBTUMsV0FBV1AsT0FBT1EsSUFBSSxDQUFDLENBQUNDLE1BQU1BLElBQUlMLElBQUksS0FBS0QsR0FBR0MsSUFBSSxJQUFJSyxJQUFJSixNQUFNLEtBQUtGLEdBQUdFLE1BQU07SUFDcEYsSUFBSUs7SUFDSixJQUFJSCxVQUFVO1FBQ1ZHLFdBQVdaLFVBQVVhLEdBQUcsQ0FBQ0o7UUFDekIsSUFBSUcsVUFBVTtZQUNWLE9BQU9BO1FBQ1gsQ0FBQztJQUNMLENBQUM7SUFDRCxNQUFNRSxXQUFXLElBQUliO0lBQ3JCLE1BQU1jLFdBQVcsSUFBSWhCLHFCQUFxQixDQUFDaUIsVUFBVTtRQUNqREEsUUFBUUMsT0FBTyxDQUFDLENBQUNDLFFBQVE7WUFDckIsTUFBTUMsV0FBV0wsU0FBU0QsR0FBRyxDQUFDSyxNQUFNRSxNQUFNO1lBQzFDLE1BQU1DLFlBQVlILE1BQU1JLGNBQWMsSUFBSUosTUFBTUssaUJBQWlCLEdBQUc7WUFDcEUsSUFBSUosWUFBWUUsV0FBVztnQkFDdkJGLFNBQVNFO1lBQ2IsQ0FBQztRQUNMO0lBQ0osR0FBR2pC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QWMsQ0FBQ0MsUUFBUTRELE9BQU8sRUFBRSxjQUFjO1FBQUUzRCxPQUFPLElBQUk7SUFBQztJQUNuRUgsT0FBT2dFLE1BQU0sQ0FBQzlELFFBQVE0RCxPQUFPLEVBQUU1RDtJQUMvQitELE9BQU8vRCxPQUFPLEdBQUdBLFFBQVE0RCxPQUFPO0FBQ2xDLENBQUMsQ0FFRCw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3VzZS1pbnRlcnNlY3Rpb24uanM/MzBhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMudXNlSW50ZXJzZWN0aW9uID0gdXNlSW50ZXJzZWN0aW9uO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfcmVxdWVzdElkbGVDYWxsYmFjayA9IHJlcXVpcmUoXCIuL3JlcXVlc3QtaWRsZS1jYWxsYmFja1wiKTtcbmNvbnN0IGhhc0ludGVyc2VjdGlvbk9ic2VydmVyID0gdHlwZW9mIEludGVyc2VjdGlvbk9ic2VydmVyID09PSAnZnVuY3Rpb24nO1xuY29uc3Qgb2JzZXJ2ZXJzID0gbmV3IE1hcCgpO1xuY29uc3QgaWRMaXN0ID0gW107XG5mdW5jdGlvbiBjcmVhdGVPYnNlcnZlcihvcHRpb25zKSB7XG4gICAgY29uc3QgaWQgPSB7XG4gICAgICAgIHJvb3Q6IG9wdGlvbnMucm9vdCB8fCBudWxsLFxuICAgICAgICBtYXJnaW46IG9wdGlvbnMucm9vdE1hcmdpbiB8fCAnJ1xuICAgIH07XG4gICAgY29uc3QgZXhpc3RpbmcgPSBpZExpc3QuZmluZCgob2JqKT0+b2JqLnJvb3QgPT09IGlkLnJvb3QgJiYgb2JqLm1hcmdpbiA9PT0gaWQubWFyZ2luKTtcbiAgICBsZXQgaW5zdGFuY2U7XG4gICAgaWYgKGV4aXN0aW5nKSB7XG4gICAgICAgIGluc3RhbmNlID0gb2JzZXJ2ZXJzLmdldChleGlzdGluZyk7XG4gICAgICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGVsZW1lbnRzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzKT0+e1xuICAgICAgICBlbnRyaWVzLmZvckVhY2goKGVudHJ5KT0+e1xuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBlbGVtZW50cy5nZXQoZW50cnkudGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGVudHJ5LmlzSW50ZXJzZWN0aW5nIHx8IGVudHJ5LmludGVyc2VjdGlvblJhdGlvID4gMDtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayAmJiBpc1Zpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhpc1Zpc2libGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCBvcHRpb25zKTtcbiAgICBpbnN0YW5jZSA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIG9ic2VydmVyLFxuICAgICAgICBlbGVtZW50c1xuICAgIH07XG4gICAgaWRMaXN0LnB1c2goaWQpO1xuICAgIG9ic2VydmVycy5zZXQoaWQsIGluc3RhbmNlKTtcbiAgICByZXR1cm4gaW5zdGFuY2U7XG59XG5mdW5jdGlvbiBvYnNlcnZlKGVsZW1lbnQsIGNhbGxiYWNrLCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyBpZCAsIG9ic2VydmVyICwgZWxlbWVudHMgIH0gPSBjcmVhdGVPYnNlcnZlcihvcHRpb25zKTtcbiAgICBlbGVtZW50cy5zZXQoZWxlbWVudCwgY2FsbGJhY2spO1xuICAgIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVub2JzZXJ2ZSgpIHtcbiAgICAgICAgZWxlbWVudHMuZGVsZXRlKGVsZW1lbnQpO1xuICAgICAgICBvYnNlcnZlci51bm9ic2VydmUoZWxlbWVudCk7XG4gICAgICAgIC8vIERlc3Ryb3kgb2JzZXJ2ZXIgd2hlbiB0aGVyZSdzIG5vdGhpbmcgbGVmdCB0byB3YXRjaDpcbiAgICAgICAgaWYgKGVsZW1lbnRzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIG9ic2VydmVycy5kZWxldGUoaWQpO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBpZExpc3QuZmluZEluZGV4KChvYmopPT5vYmoucm9vdCA9PT0gaWQucm9vdCAmJiBvYmoubWFyZ2luID09PSBpZC5tYXJnaW4pO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICBpZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiB1c2VJbnRlcnNlY3Rpb24oeyByb290UmVmICwgcm9vdE1hcmdpbiAsIGRpc2FibGVkICB9KSB7XG4gICAgY29uc3QgaXNEaXNhYmxlZCA9IGRpc2FibGVkIHx8ICFoYXNJbnRlcnNlY3Rpb25PYnNlcnZlcjtcbiAgICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSAoMCwgX3JlYWN0KS51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgZWxlbWVudFJlZiA9ICgwLCBfcmVhY3QpLnVzZVJlZihudWxsKTtcbiAgICBjb25zdCBzZXRFbGVtZW50ID0gKDAsIF9yZWFjdCkudXNlQ2FsbGJhY2soKGVsZW1lbnQpPT57XG4gICAgICAgIGVsZW1lbnRSZWYuY3VycmVudCA9IGVsZW1lbnQ7XG4gICAgfSwgW10pO1xuICAgICgwLCBfcmVhY3QpLnVzZUVmZmVjdCgoKT0+e1xuICAgICAgICBpZiAoaGFzSW50ZXJzZWN0aW9uT2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgIGlmIChpc0Rpc2FibGVkIHx8IHZpc2libGUpIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlbGVtZW50UmVmLmN1cnJlbnQ7XG4gICAgICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LnRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bm9ic2VydmUgPSBvYnNlcnZlKGVsZW1lbnQsIChpc1Zpc2libGUpPT5pc1Zpc2libGUgJiYgc2V0VmlzaWJsZShpc1Zpc2libGUpLCB7XG4gICAgICAgICAgICAgICAgICAgIHJvb3Q6IHJvb3RSZWYgPT0gbnVsbCA/IHZvaWQgMCA6IHJvb3RSZWYuY3VycmVudCxcbiAgICAgICAgICAgICAgICAgICAgcm9vdE1hcmdpblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB1bm9ic2VydmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIXZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZGxlQ2FsbGJhY2sgPSAoMCwgX3JlcXVlc3RJZGxlQ2FsbGJhY2spLnJlcXVlc3RJZGxlQ2FsbGJhY2soKCk9PnNldFZpc2libGUodHJ1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKT0+KDAsIF9yZXF1ZXN0SWRsZUNhbGxiYWNrKS5jYW5jZWxJZGxlQ2FsbGJhY2soaWRsZUNhbGxiYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB9LCBbXG4gICAgICAgIGlzRGlzYWJsZWQsXG4gICAgICAgIHJvb3RNYXJnaW4sXG4gICAgICAgIHJvb3RSZWYsXG4gICAgICAgIHZpc2libGUsXG4gICAgICAgIGVsZW1lbnRSZWYuY3VycmVudFxuICAgIF0pO1xuICAgIGNvbnN0IHJlc2V0VmlzaWJsZSA9ICgwLCBfcmVhY3QpLnVzZUNhbGxiYWNrKCgpPT57XG4gICAgICAgIHNldFZpc2libGUoZmFsc2UpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBzZXRFbGVtZW50LFxuICAgICAgICB2aXNpYmxlLFxuICAgICAgICByZXNldFZpc2libGVcbiAgICBdO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2UtaW50ZXJzZWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVzZUludGVyc2VjdGlvbiIsIl9yZWFjdCIsInJlcXVpcmUiLCJfcmVxdWVzdElkbGVDYWxsYmFjayIsImhhc0ludGVyc2VjdGlvbk9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlcnMiLCJNYXAiLCJpZExpc3QiLCJjcmVhdGVPYnNlcnZlciIsIm9wdGlvbnMiLCJpZCIsInJvb3QiLCJtYXJnaW4iLCJyb290TWFyZ2luIiwiZXhpc3RpbmciLCJmaW5kIiwib2JqIiwiaW5zdGFuY2UiLCJnZXQiLCJlbGVtZW50cyIsIm9ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImNhbGxiYWNrIiwidGFyZ2V0IiwiaXNWaXNpYmxlIiwiaXNJbnRlcnNlY3RpbmciLCJpbnRlcnNlY3Rpb25SYXRpbyIsInB1c2giLCJzZXQiLCJvYnNlcnZlIiwiZWxlbWVudCIsInVub2JzZXJ2ZSIsImRlbGV0ZSIsInNpemUiLCJkaXNjb25uZWN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJzcGxpY2UiLCJyb290UmVmIiwiZGlzYWJsZWQiLCJpc0Rpc2FibGVkIiwidmlzaWJsZSIsInNldFZpc2libGUiLCJ1c2VTdGF0ZSIsImVsZW1lbnRSZWYiLCJ1c2VSZWYiLCJzZXRFbGVtZW50IiwidXNlQ2FsbGJhY2siLCJjdXJyZW50IiwidXNlRWZmZWN0IiwidGFnTmFtZSIsImlkbGVDYWxsYmFjayIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXNldFZpc2libGUiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/shared/lib/head.js":
/*!*******************************************************!*\
  !*** ../../node_modules/next/dist/shared/lib/head.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultHead = defaultHead;\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"../../node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _sideEffect = _interop_require_default(__webpack_require__(/*! ./side-effect */ \"./side-effect\"));\nvar _ampContext = __webpack_require__(/*! ./amp-context */ \"./amp-context\");\nvar _headManagerContext = __webpack_require__(/*! ./head-manager-context */ \"./head-manager-context\");\nvar _ampMode = __webpack_require__(/*! ./amp-mode */ \"./amp-mode\");\nvar _warnOnce = __webpack_require__(/*! ./utils/warn-once */ \"../shared/lib/utils/warn-once\");\nfunction defaultHead(inAmpMode = false) {\n    const head = [\n        /*#__PURE__*/ _react.default.createElement(\"meta\", {\n            charSet: \"utf-8\"\n        })\n    ];\n    if (!inAmpMode) {\n        head.push(/*#__PURE__*/ _react.default.createElement(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width\"\n        }));\n    }\n    return head;\n}\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === \"string\" || typeof child === \"number\") {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === _react.default.Fragment) {\n        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{\n            if (typeof fragmentChild === \"string\" || typeof fragmentChild === \"number\") {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = [\n    \"name\",\n    \"httpEquiv\",\n    \"charSet\",\n    \"itemProp\"\n];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/ function unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h)=>{\n        let isUnique = true;\n        let hasKey = false;\n        if (h.key && typeof h.key !== \"number\" && h.key.indexOf(\"$\") > 0) {\n            hasKey = true;\n            const key = h.key.slice(h.key.indexOf(\"$\") + 1);\n            if (keys.has(key)) {\n                isUnique = false;\n            } else {\n                keys.add(key);\n            }\n        }\n        // eslint-disable-next-line default-case\n        switch(h.type){\n            case \"title\":\n            case \"base\":\n                if (tags.has(h.type)) {\n                    isUnique = false;\n                } else {\n                    tags.add(h.type);\n                }\n                break;\n            case \"meta\":\n                for(let i = 0, len = METATYPES.length; i < len; i++){\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype)) continue;\n                    if (metatype === \"charSet\") {\n                        if (metaTypes.has(metatype)) {\n                            isUnique = false;\n                        } else {\n                            metaTypes.add(metatype);\n                        }\n                    } else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if ((metatype !== \"name\" || !hasKey) && categories.has(category)) {\n                            isUnique = false;\n                        } else {\n                            categories.add(category);\n                            metaCategories[metatype] = categories;\n                        }\n                    }\n                }\n                break;\n        }\n        return isUnique;\n    };\n}\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */ function reduceComponents(headChildrenElements, props) {\n    const { inAmpMode  } = props;\n    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{\n        const key = c.key || i;\n        if (false) {}\n        if (true) {\n            // omit JSON-LD structured data snippets from the warning\n            if (c.type === \"script\" && c.props[\"type\"] !== \"application/ld+json\") {\n                const srcMessage = c.props[\"src\"] ? `<script> tag with src=\"${c.props[\"src\"]}\"` : `inline <script>`;\n                (0, _warnOnce).warnOnce(`Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`);\n            } else if (c.type === \"link\" && c.props[\"rel\"] === \"stylesheet\") {\n                (0, _warnOnce).warnOnce(`Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props[\"href\"]}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`);\n            }\n        }\n        return /*#__PURE__*/ _react.default.cloneElement(c, {\n            key\n        });\n    });\n}\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */ function Head({ children  }) {\n    const ampState = (0, _react).useContext(_ampContext.AmpStateContext);\n    const headManager = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    return /*#__PURE__*/ _react.default.createElement(_sideEffect.default, {\n        reduceComponentsToState: reduceComponents,\n        headManager: headManager,\n        inAmpMode: (0, _ampMode).isInAmpMode(ampState)\n    }, children);\n}\nvar _default = Head;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/shared/lib/head.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/shared/lib/router/router.js":
/*!****************************************************************!*\
  !*** ../../node_modules/next/dist/shared/lib/router/router.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchesMiddleware = matchesMiddleware;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.handleSmoothScroll = handleSmoothScroll;\nexports.createKey = createKey;\nexports[\"default\"] = void 0;\nvar _async_to_generator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"../../node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"../../node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"../../node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"../../node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _removeTrailingSlash = __webpack_require__(/*! ./utils/remove-trailing-slash */ \"../shared/lib/router/utils/remove-trailing-slash\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"../../node_modules/next/dist/client/route-loader.js\");\nvar _script = __webpack_require__(/*! ../../../client/script */ \"../../node_modules/next/dist/client/script.js\");\nvar _isError = _interop_require_wildcard(__webpack_require__(/*! ../../../lib/is-error */ \"../../node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../page-path/denormalize-page-path */ \"../page-path/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interop_require_default(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interop_require_default(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"../shared/lib/router/utils/format-url\");\nvar _detectDomainLocale = __webpack_require__(/*! ../../../client/detect-domain-locale */ \"../../node_modules/next/dist/client/detect-domain-locale.js\");\nvar _parsePath = __webpack_require__(/*! ./utils/parse-path */ \"../shared/lib/router/utils/parse-path\");\nvar _addLocale = __webpack_require__(/*! ../../../client/add-locale */ \"../../node_modules/next/dist/client/add-locale.js\");\nvar _removeLocale = __webpack_require__(/*! ../../../client/remove-locale */ \"../../node_modules/next/dist/client/remove-locale.js\");\nvar _removeBasePath = __webpack_require__(/*! ../../../client/remove-base-path */ \"../../node_modules/next/dist/client/remove-base-path.js\");\nvar _addBasePath = __webpack_require__(/*! ../../../client/add-base-path */ \"../../node_modules/next/dist/client/add-base-path.js\");\nvar _hasBasePath = __webpack_require__(/*! ../../../client/has-base-path */ \"../../node_modules/next/dist/client/has-base-path.js\");\nvar _isApiRoute = __webpack_require__(/*! ../../../lib/is-api-route */ \"../../node_modules/next/dist/lib/is-api-route.js\");\nvar _getNextPathnameInfo = __webpack_require__(/*! ./utils/get-next-pathname-info */ \"./utils/get-next-pathname-info\");\nvar _formatNextPathnameInfo = __webpack_require__(/*! ./utils/format-next-pathname-info */ \"./utils/format-next-pathname-info\");\nvar _compareStates = __webpack_require__(/*! ./utils/compare-states */ \"./utils/compare-states\");\nvar _isBot = __webpack_require__(/*! ./utils/is-bot */ \"./utils/is-bot\");\nfunction buildCancellationError() {\n    return Object.assign(new Error(\"Route Cancelled\"), {\n        cancelled: true\n    });\n}\nfunction matchesMiddleware(options) {\n    return _matchesMiddleware.apply(this, arguments);\n}\nfunction _matchesMiddleware() {\n    _matchesMiddleware = _async_to_generator(function*(options) {\n        const matchers = yield Promise.resolve(options.router.pageLoader.getMiddleware());\n        if (!matchers) return false;\n        const { pathname: asPathname  } = (0, _parsePath).parsePath(options.asPath);\n        // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`\n        const cleanedAs = (0, _hasBasePath).hasBasePath(asPathname) ? (0, _removeBasePath).removeBasePath(asPathname) : asPathname;\n        const asWithBasePathAndLocale = (0, _addBasePath).addBasePath((0, _addLocale).addLocale(cleanedAs, options.locale));\n        // Check only path match on client. Matching \"has\" should be done on server\n        // where we can access more info such as headers, HttpOnly cookie, etc.\n        return matchers.some((m)=>new RegExp(m.regexp).test(asWithBasePathAndLocale));\n    });\n    return _matchesMiddleware.apply(this, arguments);\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction omit(object, keys) {\n    const omitted = {};\n    Object.keys(object).forEach((key)=>{\n        if (!keys.includes(key)) {\n            omitted[key] = object[key];\n        }\n    });\n    return omitted;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils).isAbsoluteUrl(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasBasePath).hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : \"\") || // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? \"...\" : \"\"}${param}]`;\n        if (optional) {\n            replaced = `${!value ? \"/\" : \"\"}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present\n        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formatUrl).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\");\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formatUrl).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omit(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefWasAbsolute = resolvedHref.startsWith(origin);\n    const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefWasAbsolute ? resolvedHref : (0, _addBasePath).addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asWasAbsolute ? preparedAs : (0, _addBasePath).addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === \"/404\" || cleanPathname === \"/_error\") {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n}\nfunction getMiddlewareData(source, response, options) {\n    const nextConfig = {\n        basePath: options.router.basePath,\n        i18n: {\n            locales: options.router.locales\n        },\n        trailingSlash: Boolean(false)\n    };\n    const rewriteHeader = response.headers.get(\"x-nextjs-rewrite\");\n    let rewriteTarget = rewriteHeader || response.headers.get(\"x-nextjs-matched-path\");\n    const matchedPath = response.headers.get(\"x-matched-path\");\n    if (matchedPath && !rewriteTarget && !matchedPath.includes(\"__next_data_catchall\") && !matchedPath.includes(\"/_error\") && !matchedPath.includes(\"/404\")) {\n        // leverage x-matched-path to detect next.config.js rewrites\n        rewriteTarget = matchedPath;\n    }\n    if (rewriteTarget) {\n        if (rewriteTarget.startsWith(\"/\")) {\n            const parsedRewriteTarget = (0, _parseRelativeUrl).parseRelativeUrl(rewriteTarget);\n            const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(parsedRewriteTarget.pathname, {\n                nextConfig,\n                parseData: true\n            });\n            let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash(pathnameInfo.pathname);\n            return Promise.all([\n                options.router.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest()\n            ]).then(([pages, { __rewrites: rewrites  }])=>{\n                let as = (0, _addLocale).addLocale(pathnameInfo.pathname, pathnameInfo.locale);\n                if ((0, _isDynamic).isDynamicRoute(as) || !rewriteHeader && pages.includes((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(as), options.router.locales).pathname)) {\n                    const parsedSource = (0, _getNextPathnameInfo).getNextPathnameInfo((0, _parseRelativeUrl).parseRelativeUrl(source).pathname, {\n                        parseData: true\n                    });\n                    as = (0, _addBasePath).addBasePath(parsedSource.pathname);\n                    parsedRewriteTarget.pathname = as;\n                }\n                if (false) {} else if (!pages.includes(fsPathname)) {\n                    const resolvedPathname = resolveDynamicRoute(fsPathname, pages);\n                    if (resolvedPathname !== fsPathname) {\n                        fsPathname = resolvedPathname;\n                    }\n                }\n                const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;\n                if ((0, _isDynamic).isDynamicRoute(resolvedHref)) {\n                    const matches = (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(resolvedHref))(as);\n                    Object.assign(parsedRewriteTarget.query, matches || {});\n                }\n                return {\n                    type: \"rewrite\",\n                    parsedAs: parsedRewriteTarget,\n                    resolvedHref\n                };\n            });\n        }\n        const src = (0, _parsePath).parsePath(source);\n        const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n            nextConfig,\n            parseData: true\n        }), {\n            defaultLocale: options.router.defaultLocale,\n            buildId: \"\"\n        }));\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: `${pathname}${src.query}${src.hash}`\n        });\n    }\n    const redirectTarget = response.headers.get(\"x-nextjs-redirect\");\n    if (redirectTarget) {\n        if (redirectTarget.startsWith(\"/\")) {\n            const src = (0, _parsePath).parsePath(redirectTarget);\n            const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n                nextConfig,\n                parseData: true\n            }), {\n                defaultLocale: options.router.defaultLocale,\n                buildId: \"\"\n            }));\n            return Promise.resolve({\n                type: \"redirect-internal\",\n                newAs: `${pathname}${src.query}${src.hash}`,\n                newUrl: `${pathname}${src.query}${src.hash}`\n            });\n        }\n        return Promise.resolve({\n            type: \"redirect-external\",\n            destination: redirectTarget\n        });\n    }\n    return Promise.resolve({\n        type: \"next\"\n    });\n}\nfunction withMiddlewareEffects(options) {\n    return _withMiddlewareEffects.apply(this, arguments);\n}\nfunction _withMiddlewareEffects() {\n    _withMiddlewareEffects = _async_to_generator(function*(options) {\n        const matches = yield matchesMiddleware(options);\n        if (!matches || !options.fetchData) {\n            return null;\n        }\n        try {\n            const data = yield options.fetchData();\n            const effect = yield getMiddlewareData(data.dataHref, data.response, options);\n            return {\n                dataHref: data.dataHref,\n                json: data.json,\n                response: data.response,\n                text: data.text,\n                cacheKey: data.cacheKey,\n                effect\n            };\n        } catch (e) {\n            /**\n     * TODO: Revisit this in the future.\n     * For now we will not consider middleware data errors to be fatal.\n     * maybe we should revisit in the future.\n     */ return null;\n        }\n    });\n    return _withMiddlewareEffects.apply(this, arguments);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol(\"SSG_DATA_NOT_FOUND\");\nfunction fetchRetry(url, attempts, options) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: \"same-origin\",\n        method: options.method || \"GET\",\n        headers: Object.assign({}, options.headers, {\n            \"x-nextjs-data\": \"1\"\n        })\n    }).then((response)=>{\n        return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;\n    });\n}\nfunction handleSmoothScroll(fn, options = {}) {\n    const htmlElement = document.documentElement;\n    const existing = htmlElement.style.scrollBehavior;\n    htmlElement.style.scrollBehavior = \"auto\";\n    if (!options.dontForceLayout) {\n        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n        // Otherwise it will not pickup the change in scrollBehavior\n        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n        htmlElement.getClientRects();\n    }\n    fn();\n    htmlElement.style.scrollBehavior = existing;\n}\nfunction tryToParseAsJSON(text) {\n    try {\n        return JSON.parse(text);\n    } catch (error) {\n        return null;\n    }\n}\nfunction fetchNextData({ dataHref , inflightCache , isPrefetch , hasMiddleware , isServerRender , parseJSON , persistCache , isBackground , unstable_skipClientCache  }) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    var ref1;\n    const getData = (params)=>{\n        return fetchRetry(dataHref, isServerRender ? 3 : 1, {\n            headers: Object.assign({}, isPrefetch ? {\n                purpose: \"prefetch\"\n            } : {}, isPrefetch && hasMiddleware ? {\n                \"x-middleware-prefetch\": \"1\"\n            } : {}),\n            method: (ref1 = params == null ? void 0 : params.method) != null ? ref1 : \"GET\"\n        }).then((response)=>{\n            if (response.ok && (params == null ? void 0 : params.method) === \"HEAD\") {\n                return {\n                    dataHref,\n                    response,\n                    text: \"\",\n                    json: {},\n                    cacheKey\n                };\n            }\n            return response.text().then((text)=>{\n                if (!response.ok) {\n                    /**\n             * When the data response is a redirect because of a middleware\n             * we do not consider it an error. The headers must bring the\n             * mapped location.\n             * TODO: Change the status code in the handler.\n             */ if (hasMiddleware && [\n                        301,\n                        302,\n                        307,\n                        308\n                    ].includes(response.status)) {\n                        return {\n                            dataHref,\n                            response,\n                            text,\n                            json: {},\n                            cacheKey\n                        };\n                    }\n                    if (!hasMiddleware && response.status === 404) {\n                        var ref;\n                        if ((ref = tryToParseAsJSON(text)) == null ? void 0 : ref.notFound) {\n                            return {\n                                dataHref,\n                                json: {\n                                    notFound: SSG_DATA_NOT_FOUND\n                                },\n                                response,\n                                text,\n                                cacheKey\n                            };\n                        }\n                    }\n                    const error = new Error(`Failed to load static props`);\n                    /**\n             * We should only trigger a server-side transition if this was\n             * caused on a client-side transition. Otherwise, we'd get into\n             * an infinite loop.\n             */ if (!isServerRender) {\n                        (0, _routeLoader).markAssetError(error);\n                    }\n                    throw error;\n                }\n                return {\n                    dataHref,\n                    json: parseJSON ? tryToParseAsJSON(text) : null,\n                    response,\n                    text,\n                    cacheKey\n                };\n            });\n        }).then((data)=>{\n            if (!persistCache || \"development\" !== \"production\" || 0) {\n                delete inflightCache[cacheKey];\n            }\n            return data;\n        }).catch((err)=>{\n            if (!unstable_skipClientCache) {\n                delete inflightCache[cacheKey];\n            }\n            if (err.message === \"Failed to fetch\" || // firefox\n            err.message === \"NetworkError when attempting to fetch resource.\" || // safari\n            err.message === \"Load failed\") {\n                (0, _routeLoader).markAssetError(err);\n            }\n            throw err;\n        });\n    };\n    // when skipping client cache we wait to update\n    // inflight cache until successful data response\n    // this allows racing click event with fetching newer data\n    // without blocking navigation when stale data is available\n    if (unstable_skipClientCache && persistCache) {\n        return getData({}).then((data)=>{\n            inflightCache[cacheKey] = Promise.resolve(data);\n            return data;\n        });\n    }\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = getData(isBackground ? {\n        method: \"HEAD\"\n    } : {});\n}\nfunction createKey() {\n    return Math.random().toString(36).slice(2, 10);\n}\nfunction handleHardNavigation({ url , router  }) {\n    // ensure we don't trigger a hard navigation to the same\n    // URL as this can end up with an infinite refresh\n    if (url === (0, _addBasePath).addBasePath((0, _addLocale).addLocale(router.asPath, router.locale))) {\n        throw new Error(`Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`);\n    }\n    window.location.href = url;\n}\nconst getCancelledHandler = ({ route , router  })=>{\n    let cancelled = false;\n    const cancel = router.clc = ()=>{\n        cancelled = true;\n    };\n    const handleCancelled = ()=>{\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === router.clc) {\n            router.clc = null;\n        }\n    };\n    return handleCancelled;\n};\nclass Router {\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Go forward in history\n   */ forward() {\n        window.history.forward();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {}) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"pushState\", url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url, as, options = {}) {\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"replaceState\", url, as, options);\n    }\n    change(method, url, as, options, forcedScroll) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            if (!isLocalURL(url)) {\n                handleHardNavigation({\n                    url,\n                    router: _this\n                });\n                return false;\n            }\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            const isQueryUpdating = options._h === 1;\n            let shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsePath).parsePath(url).pathname === (0, _parsePath).parsePath(as).pathname;\n            const nextState = _extends({}, _this.state);\n            // for static pages with query params in the URL we delay\n            // marking the router ready until after the query is updated\n            // or a navigation has occurred\n            const readyStateChange = _this.isReady !== true;\n            _this.isReady = true;\n            const isSsr = _this.isSsr;\n            if (!isQueryUpdating) {\n                _this.isSsr = false;\n            }\n            // if a route transition is already in progress before\n            // the query updating is triggered ignore query updating\n            if (isQueryUpdating && _this.clc) {\n                return false;\n            }\n            const prevLocale = nextState.locale;\n            if (false) { var ref; }\n            // marking route changes as a navigation start entry\n            if (_utils.ST) {\n                performance.mark(\"routeChange\");\n            }\n            const { shallow =false , scroll =true  } = options;\n            const routeProps = {\n                shallow\n            };\n            if (_this._inFlightRoute && _this.clc) {\n                if (!isSsr) {\n                    Router.events.emit(\"routeChangeError\", buildCancellationError(), _this._inFlightRoute, routeProps);\n                }\n                _this.clc();\n                _this.clc = null;\n            }\n            as = (0, _addBasePath).addBasePath((0, _addLocale).addLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, options.locale, _this.defaultLocale));\n            const cleanedAs = (0, _removeLocale).removeLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, nextState.locale);\n            _this._inFlightRoute = as;\n            const localeChange = prevLocale !== nextState.locale;\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            if (!isQueryUpdating && _this.onlyAHashChange(cleanedAs) && !localeChange) {\n                nextState.asPath = cleanedAs;\n                Router.events.emit(\"hashChangeStart\", as, routeProps);\n                // TODO: do we need the resolved href when only a hash change?\n                _this.changeState(method, url, as, _extends({}, options, {\n                    scroll: false\n                }));\n                if (scroll) {\n                    _this.scrollToHash(cleanedAs);\n                }\n                try {\n                    yield _this.set(nextState, _this.components[nextState.route], null);\n                } catch (err) {\n                    if ((0, _isError).default(err) && err.cancelled) {\n                        Router.events.emit(\"routeChangeError\", err, cleanedAs, routeProps);\n                    }\n                    throw err;\n                }\n                Router.events.emit(\"hashChangeComplete\", as, routeProps);\n                return true;\n            }\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            // The build manifest needs to be loaded before auto-static dynamic pages\n            // get their query parameters to allow ensuring they can be parsed properly\n            // when rewritten to\n            let pages, rewrites;\n            try {\n                [pages, { __rewrites: rewrites  }] = yield Promise.all([\n                    _this.pageLoader.getPageList(),\n                    (0, _routeLoader).getClientBuildManifest(),\n                    _this.pageLoader.getMiddleware()\n                ]);\n            } catch (err) {\n                // If we fail to resolve the page list or client-build manifest, we must\n                // do a server-side transition:\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!_this.urlIsNew(cleanedAs) && !localeChange) {\n                method = \"replaceState\";\n            }\n            // we need to resolve the as value using rewrites for dynamic SSG\n            // pages to allow building the data URL correctly\n            let resolvedAs = as;\n            // url and as should always be prefixed with basePath by this\n            // point by either next/link or router.push/replace so strip the\n            // basePath from the pathname to match the pages dir 1-to-1\n            pathname = pathname ? (0, _removeTrailingSlash).removeTrailingSlash((0, _removeBasePath).removeBasePath(pathname)) : pathname;\n            let route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            const parsedAsPathname = as.startsWith(\"/\") && (0, _parseRelativeUrl).parseRelativeUrl(as).pathname;\n            const isMiddlewareRewrite = !!(parsedAsPathname && route !== parsedAsPathname && (!(0, _isDynamic).isDynamicRoute(route) || !(0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(route))(parsedAsPathname)));\n            // we don't attempt resolve asPath when we need to execute\n            // middleware as the resolving will occur server-side\n            const isMiddlewareMatch = !options.shallow && (yield matchesMiddleware({\n                asPath: as,\n                locale: nextState.locale,\n                router: _this\n            }));\n            if (isQueryUpdating && isMiddlewareMatch) {\n                shouldResolveHref = false;\n            }\n            if (shouldResolveHref && pathname !== \"/_error\") {\n                options._shouldResolveHref = true;\n                if (false) {} else {\n                    parsed.pathname = resolveDynamicRoute(pathname, pages);\n                    if (parsed.pathname !== pathname) {\n                        pathname = parsed.pathname;\n                        parsed.pathname = (0, _addBasePath).addBasePath(pathname);\n                        if (!isMiddlewareMatch) {\n                            url = (0, _formatUrl).formatWithValidation(parsed);\n                        }\n                    }\n                }\n            }\n            if (!isLocalURL(as)) {\n                if (true) {\n                    throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n                }\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                return false;\n            }\n            resolvedAs = (0, _removeLocale).removeLocale((0, _removeBasePath).removeBasePath(resolvedAs), nextState.locale);\n            route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            let routeMatch = false;\n            if ((0, _isDynamic).isDynamicRoute(route)) {\n                const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n                const asPathname = parsedAs.pathname;\n                const routeRegex = (0, _routeRegex).getRouteRegex(route);\n                routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n                const shouldInterpolate = route === asPathname;\n                const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n                if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                    const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param] && !routeRegex.groups[param].optional);\n                    if (missingParams.length > 0 && !isMiddlewareMatch) {\n                        if (true) {\n                            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(\", \")} in the \\`href\\`'s \\`query\\``);\n                        }\n                        throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\", \")}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? \"href-interpolation-failed\" : \"incompatible-href-as\"}`);\n                    }\n                } else if (shouldInterpolate) {\n                    as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n                        pathname: interpolatedAs.result,\n                        query: omit(query, interpolatedAs.params)\n                    }));\n                } else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            if (!isQueryUpdating) {\n                Router.events.emit(\"routeChangeStart\", as, routeProps);\n            }\n            try {\n                var ref2, ref3, ref4;\n                let routeInfo = yield _this.getRouteInfo({\n                    route,\n                    pathname,\n                    query,\n                    as,\n                    resolvedAs,\n                    routeProps,\n                    locale: nextState.locale,\n                    isPreview: nextState.isPreview,\n                    hasMiddleware: isMiddlewareMatch,\n                    unstable_skipClientCache: options.unstable_skipClientCache,\n                    isQueryUpdating: isQueryUpdating && !_this.isFallback,\n                    isMiddlewareRewrite\n                });\n                if (\"route\" in routeInfo && isMiddlewareMatch) {\n                    pathname = routeInfo.route || route;\n                    route = pathname;\n                    if (!routeProps.shallow) {\n                        query = Object.assign({}, routeInfo.query || {}, query);\n                    }\n                    const cleanedParsedPathname = (0, _hasBasePath).hasBasePath(parsed.pathname) ? (0, _removeBasePath).removeBasePath(parsed.pathname) : parsed.pathname;\n                    if (routeMatch && pathname !== cleanedParsedPathname) {\n                        Object.keys(routeMatch).forEach((key)=>{\n                            if (routeMatch && query[key] === routeMatch[key]) {\n                                delete query[key];\n                            }\n                        });\n                    }\n                    if ((0, _isDynamic).isDynamicRoute(pathname)) {\n                        const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addBasePath).addBasePath((0, _addLocale).addLocale(new URL(as, location.href).pathname, nextState.locale), true);\n                        let rewriteAs = prefixedAs;\n                        if ((0, _hasBasePath).hasBasePath(rewriteAs)) {\n                            rewriteAs = (0, _removeBasePath).removeBasePath(rewriteAs);\n                        }\n                        if (false) {}\n                        const routeRegex = (0, _routeRegex).getRouteRegex(pathname);\n                        const curRouteMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(new URL(rewriteAs, location.href).pathname);\n                        if (curRouteMatch) {\n                            Object.assign(query, curRouteMatch);\n                        }\n                    }\n                }\n                // If the routeInfo brings a redirect we simply apply it.\n                if (\"type\" in routeInfo) {\n                    if (routeInfo.type === \"redirect-internal\") {\n                        return _this.change(method, routeInfo.newUrl, routeInfo.newAs, options);\n                    } else {\n                        handleHardNavigation({\n                            url: routeInfo.destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                }\n                const component = routeInfo.Component;\n                if (component && component.unstable_scriptLoader) {\n                    const scripts = [].concat(component.unstable_scriptLoader());\n                    scripts.forEach((script)=>{\n                        (0, _script).handleClientScriptLoad(script.props);\n                    });\n                }\n                // handle redirect on client-transition\n                if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {\n                    if (routeInfo.props.pageProps && routeInfo.props.pageProps.__N_REDIRECT) {\n                        // Use the destination from redirect without adding locale\n                        options.locale = false;\n                        const destination = routeInfo.props.pageProps.__N_REDIRECT;\n                        // check if destination is internal (resolves to a page) and attempt\n                        // client-navigation if it is falling back to hard navigation if\n                        // it's not\n                        if (destination.startsWith(\"/\") && routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                            const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                            parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                            const { url: newUrl , as: newAs  } = prepareUrlAs(_this, destination, destination);\n                            return _this.change(method, newUrl, newAs, options);\n                        }\n                        handleHardNavigation({\n                            url: destination,\n                            router: _this\n                        });\n                        return new Promise(()=>{});\n                    }\n                    nextState.isPreview = !!routeInfo.props.__N_PREVIEW;\n                    // handle SSG data 404\n                    if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {\n                        let notFoundRoute;\n                        try {\n                            yield _this.fetchComponent(\"/404\");\n                            notFoundRoute = \"/404\";\n                        } catch (_) {\n                            notFoundRoute = \"/_error\";\n                        }\n                        routeInfo = yield _this.getRouteInfo({\n                            route: notFoundRoute,\n                            pathname: notFoundRoute,\n                            query,\n                            as,\n                            resolvedAs,\n                            routeProps: {\n                                shallow: false\n                            },\n                            locale: nextState.locale,\n                            isPreview: nextState.isPreview\n                        });\n                        if (\"type\" in routeInfo) {\n                            throw new Error(`Unexpected middleware effect on /404`);\n                        }\n                    }\n                }\n                if (isQueryUpdating && _this.pathname === \"/_error\" && ((ref2 = self.__NEXT_DATA__.props) == null ? void 0 : (ref3 = ref2.pageProps) == null ? void 0 : ref3.statusCode) === 500 && ((ref4 = routeInfo.props) == null ? void 0 : ref4.pageProps)) {\n                    // ensure statusCode is still correct for static 500 page\n                    // when updating query information\n                    routeInfo.props.pageProps.statusCode = 500;\n                }\n                var _route;\n                // shallow routing is only allowed for same page URL changes.\n                const isValidShallowRoute = options.shallow && nextState.route === ((_route = routeInfo.route) != null ? _route : route);\n                var _scroll;\n                const shouldScroll = (_scroll = options.scroll) != null ? _scroll : !isQueryUpdating && !isValidShallowRoute;\n                const resetScroll = shouldScroll ? {\n                    x: 0,\n                    y: 0\n                } : null;\n                const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll;\n                // the new state that the router gonna set\n                const upcomingRouterState = _extends({}, nextState, {\n                    route,\n                    pathname,\n                    query,\n                    asPath: cleanedAs,\n                    isFallback: false\n                });\n                // When the page being rendered is the 404 page, we should only update the\n                // query parameters. Route changes here might add the basePath when it\n                // wasn't originally present. This is also why this block is before the\n                // below `changeState` call which updates the browser's history (changing\n                // the URL).\n                if (isQueryUpdating && (_this.pathname === \"/404\" || _this.pathname === \"/_error\")) {\n                    var ref5, ref6, ref7;\n                    routeInfo = yield _this.getRouteInfo({\n                        route: _this.pathname,\n                        pathname: _this.pathname,\n                        query,\n                        as,\n                        resolvedAs,\n                        routeProps: {\n                            shallow: false\n                        },\n                        locale: nextState.locale,\n                        isPreview: nextState.isPreview\n                    });\n                    if (\"type\" in routeInfo) {\n                        throw new Error(`Unexpected middleware effect on ${_this.pathname}`);\n                    }\n                    if (_this.pathname === \"/_error\" && ((ref5 = self.__NEXT_DATA__.props) == null ? void 0 : (ref6 = ref5.pageProps) == null ? void 0 : ref6.statusCode) === 500 && ((ref7 = routeInfo.props) == null ? void 0 : ref7.pageProps)) {\n                        // ensure statusCode is still correct for static 500 page\n                        // when updating query information\n                        routeInfo.props.pageProps.statusCode = 500;\n                    }\n                    try {\n                        yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n                    } catch (err) {\n                        if ((0, _isError).default(err) && err.cancelled) {\n                            Router.events.emit(\"routeChangeError\", err, cleanedAs, routeProps);\n                        }\n                        throw err;\n                    }\n                    return true;\n                }\n                Router.events.emit(\"beforeHistoryChange\", as, routeProps);\n                _this.changeState(method, url, as, options);\n                // for query updates we can skip it if the state is unchanged and we don't\n                // need to scroll\n                // https://github.com/vercel/next.js/issues/37139\n                const canSkipUpdating = isQueryUpdating && !upcomingScrollState && !readyStateChange && !localeChange && (0, _compareStates).compareRouterStates(upcomingRouterState, _this.state);\n                if (!canSkipUpdating) {\n                    try {\n                        yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n                    } catch (e) {\n                        if (e.cancelled) routeInfo.error = routeInfo.error || e;\n                        else throw e;\n                    }\n                    if (routeInfo.error) {\n                        if (!isQueryUpdating) {\n                            Router.events.emit(\"routeChangeError\", routeInfo.error, cleanedAs, routeProps);\n                        }\n                        throw routeInfo.error;\n                    }\n                    if (false) {}\n                    if (!isQueryUpdating) {\n                        Router.events.emit(\"routeChangeComplete\", as, routeProps);\n                    }\n                    // A hash mark # is the optional last part of a URL\n                    const hashRegex = /#.+$/;\n                    if (shouldScroll && hashRegex.test(as)) {\n                        _this.scrollToHash(as);\n                    }\n                }\n                return true;\n            } catch (err1) {\n                if ((0, _isError).default(err1) && err1.cancelled) {\n                    return false;\n                }\n                throw err1;\n            }\n        })();\n    }\n    changeState(method, url, as, options = {}) {\n        if (true) {\n            if (typeof window.history === \"undefined\") {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === \"undefined\") {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== \"pushState\" || (0, _utils).getURL() !== as) {\n            this._shallow = options.shallow;\n            window.history[method]({\n                url,\n                as,\n                options,\n                __N: true,\n                key: this._key = method !== \"pushState\" ? this._key : createKey()\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            \"\", as);\n        }\n    }\n    handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            console.error(err);\n            if (err.cancelled) {\n                // bubble up cancellation errors\n                throw err;\n            }\n            if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n                Router.events.emit(\"routeChangeError\", err, as, routeProps);\n                // If we can't load the page it could be one of following reasons\n                //  1. Page doesn't exists\n                //  2. Page does exist in a different zone\n                //  3. Internal error while loading the page\n                // So, doing a hard reload is the proper way to deal with this.\n                handleHardNavigation({\n                    url: as,\n                    router: _this\n                });\n                // Changing the URL doesn't block executing the current code path.\n                // So let's throw a cancellation error stop the routing logic.\n                throw buildCancellationError();\n            }\n            try {\n                let props;\n                const { page: Component , styleSheets  } = yield _this.fetchComponent(\"/_error\");\n                const routeInfo = {\n                    props,\n                    Component,\n                    styleSheets,\n                    err,\n                    error: err\n                };\n                if (!routeInfo.props) {\n                    try {\n                        routeInfo.props = yield _this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query\n                        });\n                    } catch (gipErr) {\n                        console.error(\"Error in error page `getInitialProps`: \", gipErr);\n                        routeInfo.props = {};\n                    }\n                }\n                return routeInfo;\n            } catch (routeInfoErr) {\n                return _this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + \"\"), pathname, query, as, routeProps, true);\n            }\n        })();\n    }\n    getRouteInfo({ route: requestedRoute , pathname , query , as , resolvedAs , routeProps , locale , hasMiddleware , isPreview , unstable_skipClientCache , isQueryUpdating , isMiddlewareRewrite  }) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            /**\n     * This `route` binding can change if there's a rewrite\n     * so we keep a reference to the original requested route\n     * so we can store the cache for it and avoid re-requesting every time\n     * for shallow routing purposes.\n     */ let route = requestedRoute;\n            try {\n                var ref, ref8, ref9, ref10;\n                const handleCancelled = getCancelledHandler({\n                    route,\n                    router: _this\n                });\n                let existingInfo = _this.components[route];\n                if (routeProps.shallow && existingInfo && _this.route === route) {\n                    return existingInfo;\n                }\n                if (hasMiddleware) {\n                    existingInfo = undefined;\n                }\n                let cachedRouteInfo = existingInfo && !(\"initial\" in existingInfo) && \"development\" !== \"development\" ? 0 : undefined;\n                const isBackground = isQueryUpdating;\n                const fetchNextDataParams = {\n                    dataHref: _this.pageLoader.getDataHref({\n                        href: (0, _formatUrl).formatWithValidation({\n                            pathname,\n                            query\n                        }),\n                        skipInterpolation: true,\n                        asPath: resolvedAs,\n                        locale\n                    }),\n                    hasMiddleware: true,\n                    isServerRender: _this.isSsr,\n                    parseJSON: true,\n                    inflightCache: isBackground ? _this.sbc : _this.sdc,\n                    persistCache: !isPreview,\n                    isPrefetch: false,\n                    unstable_skipClientCache,\n                    isBackground\n                };\n                let data = isQueryUpdating && !isMiddlewareRewrite ? null : yield withMiddlewareEffects({\n                    fetchData: ()=>fetchNextData(fetchNextDataParams),\n                    asPath: resolvedAs,\n                    locale: locale,\n                    router: _this\n                }).catch((err)=>{\n                    // we don't hard error during query updating\n                    // as it's un-necessary and doesn't need to be fatal\n                    // unless it is a fallback route and the props can't\n                    // be loaded\n                    if (isQueryUpdating) {\n                        return null;\n                    }\n                    throw err;\n                });\n                if (isQueryUpdating) {\n                    if (!data) {\n                        data = {\n                            json: self.__NEXT_DATA__.props\n                        };\n                    } else {\n                        data.json = self.__NEXT_DATA__.props;\n                    }\n                }\n                handleCancelled();\n                if ((data == null ? void 0 : (ref = data.effect) == null ? void 0 : ref.type) === \"redirect-internal\" || (data == null ? void 0 : (ref8 = data.effect) == null ? void 0 : ref8.type) === \"redirect-external\") {\n                    return data.effect;\n                }\n                if ((data == null ? void 0 : (ref9 = data.effect) == null ? void 0 : ref9.type) === \"rewrite\") {\n                    const resolvedRoute = (0, _removeTrailingSlash).removeTrailingSlash(data.effect.resolvedHref);\n                    const pages = yield _this.pageLoader.getPageList();\n                    // during query updating the page must match although during\n                    // client-transition a redirect that doesn't match a page\n                    // can be returned and this should trigger a hard navigation\n                    // which is valid for incremental migration\n                    if (!isQueryUpdating || pages.includes(resolvedRoute)) {\n                        route = resolvedRoute;\n                        pathname = data.effect.resolvedHref;\n                        query = _extends({}, query, data.effect.parsedAs.query);\n                        resolvedAs = (0, _removeBasePath).removeBasePath((0, _normalizeLocalePath).normalizeLocalePath(data.effect.parsedAs.pathname, _this.locales).pathname);\n                        // Check again the cache with the new destination.\n                        existingInfo = _this.components[route];\n                        if (routeProps.shallow && existingInfo && _this.route === route && !hasMiddleware) {\n                            // If we have a match with the current route due to rewrite,\n                            // we can copy the existing information to the rewritten one.\n                            // Then, we return the information along with the matched route.\n                            return _extends({}, existingInfo, {\n                                route\n                            });\n                        }\n                    }\n                }\n                if ((0, _isApiRoute).isAPIRoute(route)) {\n                    handleHardNavigation({\n                        url: as,\n                        router: _this\n                    });\n                    return new Promise(()=>{});\n                }\n                const routeInfo = cachedRouteInfo || (yield _this.fetchComponent(route).then((res)=>({\n                        Component: res.page,\n                        styleSheets: res.styleSheets,\n                        __N_SSG: res.mod.__N_SSG,\n                        __N_SSP: res.mod.__N_SSP\n                    })));\n                if (true) {\n                    const { isValidElementType  } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n                    if (!isValidElementType(routeInfo.Component)) {\n                        throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                    }\n                }\n                const wasBailedPrefetch = data == null ? void 0 : (ref10 = data.response) == null ? void 0 : ref10.headers.get(\"x-middleware-skip\");\n                const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP;\n                // For non-SSG prefetches that bailed before sending data\n                // we clear the cache to fetch full response\n                if (wasBailedPrefetch && (data == null ? void 0 : data.dataHref)) {\n                    delete _this.sdc[data.dataHref];\n                }\n                const { props , cacheKey  } = yield _this._getData(_async_to_generator(function*() {\n                    if (shouldFetchData) {\n                        if ((data == null ? void 0 : data.json) && !wasBailedPrefetch) {\n                            return {\n                                cacheKey: data.cacheKey,\n                                props: data.json\n                            };\n                        }\n                        const dataHref = (data == null ? void 0 : data.dataHref) ? data.dataHref : _this.pageLoader.getDataHref({\n                            href: (0, _formatUrl).formatWithValidation({\n                                pathname,\n                                query\n                            }),\n                            asPath: resolvedAs,\n                            locale\n                        });\n                        const fetched = yield fetchNextData({\n                            dataHref,\n                            isServerRender: _this.isSsr,\n                            parseJSON: true,\n                            inflightCache: wasBailedPrefetch ? {} : _this.sdc,\n                            persistCache: !isPreview,\n                            isPrefetch: false,\n                            unstable_skipClientCache\n                        });\n                        return {\n                            cacheKey: fetched.cacheKey,\n                            props: fetched.json || {}\n                        };\n                    }\n                    return {\n                        headers: {},\n                        props: yield _this.getInitialProps(routeInfo.Component, {\n                            pathname,\n                            query,\n                            asPath: as,\n                            locale,\n                            locales: _this.locales,\n                            defaultLocale: _this.defaultLocale\n                        })\n                    };\n                }));\n                // Only bust the data cache for SSP routes although\n                // middleware can skip cache per request with\n                // x-middleware-cache: no-cache as well\n                if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {\n                    delete _this.sdc[cacheKey];\n                }\n                // we kick off a HEAD request in the background\n                // when a non-prefetch request is made to signal revalidation\n                if (!_this.isPreview && routeInfo.__N_SSG && \"development\" !== \"development\" && 0) {}\n                props.pageProps = Object.assign({}, props.pageProps);\n                routeInfo.props = props;\n                routeInfo.route = route;\n                routeInfo.query = query;\n                routeInfo.resolvedAs = resolvedAs;\n                _this.components[route] = routeInfo;\n                return routeInfo;\n            } catch (err) {\n                return _this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n            }\n        })();\n    }\n    set(state, data, resetScroll) {\n        this.state = state;\n        return this.sub(data, this.components[\"/_app\"].Component, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split(\"#\");\n        const [newUrlNoHash, newHash] = as.split(\"#\");\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash = \"\"] = as.split(\"#\");\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === \"\" || hash === \"top\") {\n            handleSmoothScroll(()=>window.scrollTo(0, 0));\n            return;\n        }\n        // Decode hash to make non-latin anchor works.\n        const rawHash = decodeURIComponent(hash);\n        // First we check if the element by id is found\n        const idEl = document.getElementById(rawHash);\n        if (idEl) {\n            handleSmoothScroll(()=>idEl.scrollIntoView());\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(rawHash)[0];\n        if (nameEl) {\n            handleSmoothScroll(()=>nameEl.scrollIntoView());\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ prefetch(url, asPath = url, options = {}) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (true) {\n                return;\n            }\n            if (false) {}\n            let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            let { pathname , query  } = parsed;\n            const originalPathname = pathname;\n            if (false) {}\n            const pages = yield _this.pageLoader.getPageList();\n            let resolvedAs = asPath;\n            const locale = typeof options.locale !== \"undefined\" ? options.locale || undefined : _this.locale;\n            const isMiddlewareMatch = yield matchesMiddleware({\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            if (false) {}\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if ((0, _isDynamic).isDynamicRoute(parsed.pathname)) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                Object.assign(query, (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(parsed.pathname))((0, _parsePath).parsePath(asPath).pathname) || {});\n                if (!isMiddlewareMatch) {\n                    url = (0, _formatUrl).formatWithValidation(parsed);\n                }\n            }\n            const data =  false ? 0 : yield withMiddlewareEffects({\n                fetchData: ()=>fetchNextData({\n                        dataHref: _this.pageLoader.getDataHref({\n                            href: (0, _formatUrl).formatWithValidation({\n                                pathname: originalPathname,\n                                query\n                            }),\n                            skipInterpolation: true,\n                            asPath: resolvedAs,\n                            locale\n                        }),\n                        hasMiddleware: true,\n                        isServerRender: _this.isSsr,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true\n                    }),\n                asPath: asPath,\n                locale: locale,\n                router: _this\n            });\n            /**\n     * If there was a rewrite we apply the effects of the rewrite on the\n     * current parameters for the prefetch.\n     */ if ((data == null ? void 0 : data.effect.type) === \"rewrite\") {\n                parsed.pathname = data.effect.resolvedHref;\n                pathname = data.effect.resolvedHref;\n                query = _extends({}, query, data.effect.parsedAs.query);\n                resolvedAs = data.effect.parsedAs.pathname;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n            /**\n     * If there is a redirect to an external destination then we don't have\n     * to prefetch content as it will be unused.\n     */ if ((data == null ? void 0 : data.effect.type) === \"redirect-external\") {\n                return;\n            }\n            const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n            yield Promise.all([\n                _this.pageLoader._isSsg(route).then((isSsg)=>{\n                    return isSsg ? fetchNextData({\n                        dataHref: (data == null ? void 0 : data.json) ? data == null ? void 0 : data.dataHref : _this.pageLoader.getDataHref({\n                            href: url,\n                            asPath: resolvedAs,\n                            locale: locale\n                        }),\n                        isServerRender: false,\n                        parseJSON: true,\n                        inflightCache: _this.sdc,\n                        persistCache: !_this.isPreview,\n                        isPrefetch: true,\n                        unstable_skipClientCache: options.unstable_skipClientCache || options.priority && !!true\n                    }).then(()=>false) : false;\n                }),\n                _this.pageLoader[options.priority ? \"loadPage\" : \"prefetch\"](route)\n            ]);\n        })();\n    }\n    fetchComponent(route) {\n        var _this = this;\n        return _async_to_generator(function*() {\n            const handleCancelled = getCancelledHandler({\n                route,\n                router: _this\n            });\n            try {\n                const componentResult = yield _this.pageLoader.loadPage(route);\n                handleCancelled();\n                return componentResult;\n            } catch (err) {\n                handleCancelled();\n                throw err;\n            }\n        })();\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error(\"Loading initial props cancelled\");\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        // Do not cache RSC flight response since it's not a static resource\n        return fetchNextData({\n            dataHref,\n            isServerRender: true,\n            parseJSON: false,\n            inflightCache: this.sdc,\n            persistCache: false,\n            isPrefetch: false\n        }).then(({ text  })=>({\n                data: text\n            }));\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App  } = this.components[\"/_app\"];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx\n        });\n    }\n    get route() {\n        return this.state.route;\n    }\n    get pathname() {\n        return this.state.pathname;\n    }\n    get query() {\n        return this.state.query;\n    }\n    get asPath() {\n        return this.state.asPath;\n    }\n    get locale() {\n        return this.state.locale;\n    }\n    get isFallback() {\n        return this.state.isFallback;\n    }\n    get isPreview() {\n        return this.state.isPreview;\n    }\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview  }){\n        // Server Data Cache (full data requests)\n        this.sdc = {};\n        // Server Background Cache (HEAD requests)\n        this.sbc = {};\n        this.isFirstPopStateEvent = true;\n        this._key = createKey();\n        this.onPopState = (e)=>{\n            const { isFirstPopStateEvent  } = this;\n            this.isFirstPopStateEvent = false;\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState(\"replaceState\", (0, _formatUrl).formatWithValidation({\n                    pathname: (0, _addBasePath).addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            // __NA is used to identify if the history entry can be handled by the app-router.\n            if (state.__NA) {\n                window.location.reload();\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            // Safari fires popstateevent when reopening the browser.\n            if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , key  } = state;\n            if (false) {}\n            this._key = key;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === (0, _addBasePath).addBasePath(this.asPath) && pathname === (0, _addBasePath).addBasePath(this.pathname)) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change(\"replaceState\", url, as, Object.assign({}, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale,\n                // @ts-ignore internal value not exposed on types\n                _h: 0\n            }), forcedScroll);\n        };\n        // represents the current component key\n        const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== \"/_error\") {\n            this.components[route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP\n            };\n        }\n        this.components[\"/_app\"] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.basePath =  false || \"\";\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isLocaleDomain = false;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        if (false) {}\n        this.state = {\n            route,\n            pathname: pathname1,\n            query: query1,\n            asPath: autoExportDynamic ? pathname1 : as1,\n            isPreview: !!isPreview,\n            locale:  false ? 0 : undefined,\n            isFallback\n        };\n        this._initialMatchesMiddlewarePromise = Promise.resolve(false);\n        if (false) {}\n    }\n}\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router; //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQseUJBQXlCLEdBQUdFO0FBQzVCRixrQkFBa0IsR0FBR0c7QUFDckJILHFCQUFxQixHQUFHSTtBQUN4QkosbUJBQW1CLEdBQUdLO0FBQ3RCTCwwQkFBMEIsR0FBR007QUFDN0JOLGlCQUFpQixHQUFHTztBQUNwQlAsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlTLHNCQUFzQkMsNklBQTBEO0FBQ3BGLElBQUlDLFdBQVdELHVIQUErQztBQUM5RCxJQUFJRSwyQkFBMkJGLHVKQUErRDtBQUM5RixJQUFJRyw0QkFBNEJILHlKQUFnRTtBQUNoRyxJQUFJSSwwQkFBMEJKLG1CQUFPQSxDQUFDLGlIQUEwQztBQUNoRixJQUFJSyx1QkFBdUJMLG1CQUFPQSxDQUFDLHVGQUErQjtBQUNsRSxJQUFJTSxlQUFlTixtQkFBT0EsQ0FBQyx5RkFBOEI7QUFDekQsSUFBSU8sVUFBVVAsbUJBQU9BLENBQUMsNkVBQXdCO0FBQzlDLElBQUlRLFdBQVdMLDBCQUEwQkgsbUJBQU9BLENBQUMsMkVBQXVCO0FBQ3hFLElBQUlTLHVCQUF1QlQsbUJBQU9BLENBQUMsOEVBQW9DO0FBQ3ZFLElBQUlVLHVCQUF1QlYsbUJBQU9BLENBQUMsb0VBQStCO0FBQ2xFLElBQUlXLFFBQVFULHlCQUF5QkYsbUJBQU9BLENBQUMsd0JBQVM7QUFDdEQsSUFBSVksU0FBU1osbUJBQU9BLENBQUMsMEJBQVU7QUFDL0IsSUFBSWEsYUFBYWIsbUJBQU9BLENBQUMsOENBQW9CO0FBQzdDLElBQUljLG9CQUFvQmQsbUJBQU9BLENBQUMsOERBQTRCO0FBQzVELElBQUllLGVBQWVmLG1CQUFPQSxDQUFDLGdEQUFxQjtBQUNoRCxJQUFJZ0IsbUJBQW1CZCx5QkFBeUJGLG1CQUFPQSxDQUFD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QixFQUFFLEVBS3BDO1FBQ0QsSUFBSSxDQUFDNkgsS0FBSyxHQUFHO1lBQ1RuTTtZQUNBbkMsVUFBVXFZO1lBQ1ZqVyxPQUFPa1c7WUFDUG5ZLFFBQVE4WSxvQkFBb0JaLFlBQVlFLEdBQUc7WUFDM0M3RyxXQUFXLENBQUMsQ0FBQ0E7WUFDYmhSLFFBQVErRixNQUErQixHQUFHL0YsQ0FBTUEsR0FBRytMLFNBQVM7WUFDNURrRjtRQUNKO1FBQ0EsSUFBSSxDQUFDOEgsZ0NBQWdDLEdBQUc5WixRQUFRQyxPQUFPLENBQUMsS0FBSztRQUM3RCxJQUFJLEtBQWtCLEVBQWEsRUErQmxDO0lBQ0w7QUFDSjtBQUNBc04sT0FBTzRDLE1BQU0sR0FBRyxDQUFDLEdBQUdqUyxLQUFLLEVBQUViLE9BQU87QUFDbENSLGtCQUFlLEdBQUcwUSxRQUVsQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvcm91dGVyLmpzPzEwZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm1hdGNoZXNNaWRkbGV3YXJlID0gbWF0Y2hlc01pZGRsZXdhcmU7XG5leHBvcnRzLmlzTG9jYWxVUkwgPSBpc0xvY2FsVVJMO1xuZXhwb3J0cy5pbnRlcnBvbGF0ZUFzID0gaW50ZXJwb2xhdGVBcztcbmV4cG9ydHMucmVzb2x2ZUhyZWYgPSByZXNvbHZlSHJlZjtcbmV4cG9ydHMuaGFuZGxlU21vb3RoU2Nyb2xsID0gaGFuZGxlU21vb3RoU2Nyb2xsO1xuZXhwb3J0cy5jcmVhdGVLZXkgPSBjcmVhdGVLZXk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2FzeW5jX3RvX2dlbmVyYXRvciA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19hc3luY190b19nZW5lcmF0b3IuanNcIikuZGVmYXVsdDtcbnZhciBfZXh0ZW5kcyA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19leHRlbmRzLmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0ID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0LmpzXCIpLmRlZmF1bHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanNcIikuZGVmYXVsdDtcbnZhciBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9yZW1vdmVUcmFpbGluZ1NsYXNoID0gcmVxdWlyZShcIi4vdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9yb3V0ZUxvYWRlciA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvcm91dGUtbG9hZGVyXCIpO1xudmFyIF9zY3JpcHQgPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L3NjcmlwdFwiKTtcbnZhciBfaXNFcnJvciA9IF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQocmVxdWlyZShcIi4uLy4uLy4uL2xpYi9pcy1lcnJvclwiKSk7XG52YXIgX2Rlbm9ybWFsaXplUGFnZVBhdGggPSByZXF1aXJlKFwiLi4vcGFnZS1wYXRoL2Rlbm9ybWFsaXplLXBhZ2UtcGF0aFwiKTtcbnZhciBfbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoXCIuLi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiKTtcbnZhciBfbWl0dCA9IF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdChyZXF1aXJlKFwiLi4vbWl0dFwiKSk7XG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xudmFyIF9pc0R5bmFtaWMgPSByZXF1aXJlKFwiLi91dGlscy9pcy1keW5hbWljXCIpO1xudmFyIF9wYXJzZVJlbGF0aXZlVXJsID0gcmVxdWlyZShcIi4vdXRpbHMvcGFyc2UtcmVsYXRpdmUtdXJsXCIpO1xudmFyIF9xdWVyeXN0cmluZyA9IHJlcXVpcmUoXCIuL3V0aWxzL3F1ZXJ5c3RyaW5nXCIpO1xudmFyIF9yZXNvbHZlUmV3cml0ZXMgPSBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQocmVxdWlyZShcIi4vdXRpbHMvcmVzb2x2ZS1yZXdyaXRlc1wiKSk7XG52YXIgX3JvdXRlTWF0Y2hlciA9IHJlcXVpcmUoXCIuL3V0aWxzL3JvdXRlLW1hdGNoZXJcIik7XG52YXIgX3JvdXRlUmVnZXggPSByZXF1aXJlKFwiLi91dGlscy9yb3V0ZS1yZWdleFwiKTtcbnZhciBfZm9ybWF0VXJsID0gcmVxdWlyZShcIi4vdXRpbHMvZm9ybWF0LXVybFwiKTtcbnZhciBfZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9kZXRlY3QtZG9tYWluLWxvY2FsZVwiKTtcbnZhciBfcGFyc2VQYXRoID0gcmVxdWlyZShcIi4vdXRpbHMvcGFyc2UtcGF0aFwiKTtcbnZhciBfYWRkTG9jYWxlID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9hZGQtbG9jYWxlXCIpO1xudmFyIF9yZW1vdmVMb2NhbGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L3JlbW92ZS1sb2NhbGVcIik7XG52YXIgX3JlbW92ZUJhc2VQYXRoID0gcmVxdWlyZShcIi4uLy4uLy4uL2NsaWVudC9yZW1vdmUtYmFzZS1wYXRoXCIpO1xudmFyIF9hZGRCYXNlUGF0aCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvYWRkLWJhc2UtcGF0aFwiKTtcbnZhciBfaGFzQmFzZVBhdGggPSByZXF1aXJlKFwiLi4vLi4vLi4vY2xpZW50L2hhcy1iYXNlLXBhdGhcIik7XG52YXIgX2lzQXBpUm91dGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vbGliL2lzLWFwaS1yb3V0ZVwiKTtcbnZhciBfZ2V0TmV4dFBhdGhuYW1lSW5mbyA9IHJlcXVpcmUoXCIuL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm9cIik7XG52YXIgX2Zvcm1hdE5leHRQYXRobmFtZUluZm8gPSByZXF1aXJlKFwiLi91dGlscy9mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvXCIpO1xudmFyIF9jb21wYXJlU3RhdGVzID0gcmVxdWlyZShcIi4vdXRpbHMvY29tcGFyZS1zdGF0ZXNcIik7XG52YXIgX2lzQm90ID0gcmVxdWlyZShcIi4vdXRpbHMvaXMtYm90XCIpO1xuZnVuY3Rpb24gYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoJ1JvdXRlIENhbmNlbGxlZCcpLCB7XG4gICAgICAgIGNhbmNlbGxlZDogdHJ1ZVxuICAgIH0pO1xufVxuZnVuY3Rpb24gbWF0Y2hlc01pZGRsZXdhcmUob3B0aW9ucykge1xuICAgIHJldHVybiBfbWF0Y2hlc01pZGRsZXdhcmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbmZ1bmN0aW9uIF9tYXRjaGVzTWlkZGxld2FyZSgpIHtcbiAgICBfbWF0Y2hlc01pZGRsZXdhcmUgPSBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKihvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXJzID0geWllbGQgUHJvbWlzZS5yZXNvbHZlKG9wdGlvbnMucm91dGVyLnBhZ2VMb2FkZXIuZ2V0TWlkZGxld2FyZSgpKTtcbiAgICAgICAgaWYgKCFtYXRjaGVycykgcmV0dXJuIGZhbHNlO1xuICAgICAgICBjb25zdCB7IHBhdGhuYW1lOiBhc1BhdGhuYW1lICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChvcHRpb25zLmFzUGF0aCk7XG4gICAgICAgIC8vIHJlbW92ZSBiYXNlUGF0aCBmaXJzdCBzaW5jZSBwYXRoIHByZWZpeCBoYXMgdG8gYmUgaW4gdGhlIG9yZGVyIG9mIGAvJHtiYXNlUGF0aH0vJHtsb2NhbGV9YFxuICAgICAgICBjb25zdCBjbGVhbmVkQXMgPSAoMCwgX2hhc0Jhc2VQYXRoKS5oYXNCYXNlUGF0aChhc1BhdGhuYW1lKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzUGF0aG5hbWUpIDogYXNQYXRobmFtZTtcbiAgICAgICAgY29uc3QgYXNXaXRoQmFzZVBhdGhBbmRMb2NhbGUgPSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCgoMCwgX2FkZExvY2FsZSkuYWRkTG9jYWxlKGNsZWFuZWRBcywgb3B0aW9ucy5sb2NhbGUpKTtcbiAgICAgICAgLy8gQ2hlY2sgb25seSBwYXRoIG1hdGNoIG9uIGNsaWVudC4gTWF0Y2hpbmcgXCJoYXNcIiBzaG91bGQgYmUgZG9uZSBvbiBzZXJ2ZXJcbiAgICAgICAgLy8gd2hlcmUgd2UgY2FuIGFjY2VzcyBtb3JlIGluZm8gc3VjaCBhcyBoZWFkZXJzLCBIdHRwT25seSBjb29raWUsIGV0Yy5cbiAgICAgICAgcmV0dXJuIG1hdGNoZXJzLnNvbWUoKG0pPT5uZXcgUmVnRXhwKG0ucmVnZXhwKS50ZXN0KGFzV2l0aEJhc2VQYXRoQW5kTG9jYWxlKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIF9tYXRjaGVzTWlkZGxld2FyZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gc3RyaXBPcmlnaW4odXJsKSB7XG4gICAgY29uc3Qgb3JpZ2luID0gKDAsIF91dGlscykuZ2V0TG9jYXRpb25PcmlnaW4oKTtcbiAgICByZXR1cm4gdXJsLnN0YXJ0c1dpdGgob3JpZ2luKSA/IHVybC5zdWJzdHJpbmcob3JpZ2luLmxlbmd0aCkgOiB1cmw7XG59XG5mdW5jdGlvbiBvbWl0KG9iamVjdCwga2V5cykge1xuICAgIGNvbnN0IG9taXR0ZWQgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhvYmplY3QpLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgaWYgKCFrZXlzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIG9taXR0ZWRba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG9taXR0ZWQ7XG59XG5mdW5jdGlvbiBpc0xvY2FsVVJMKHVybCkge1xuICAgIC8vIHByZXZlbnQgYSBoeWRyYXRpb24gbWlzbWF0Y2ggb24gaHJlZiBmb3IgdXJsIHdpdGggYW5jaG9yIHJlZnNcbiAgICBpZiAoISgwLCBfdXRpbHMpLmlzQWJzb2x1dGVVcmwodXJsKSkgcmV0dXJuIHRydWU7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gYWJzb2x1dGUgdXJscyBjYW4gYmUgbG9jYWwgaWYgdGhleSBhcmUgb24gdGhlIHNhbWUgb3JpZ2luXG4gICAgICAgIGNvbnN0IGxvY2F0aW9uT3JpZ2luID0gKDAsIF91dGlscykuZ2V0TG9jYXRpb25PcmlnaW4oKTtcbiAgICAgICAgY29uc3QgcmVzb2x2ZWQgPSBuZXcgVVJMKHVybCwgbG9jYXRpb25PcmlnaW4pO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZWQub3JpZ2luID09PSBsb2NhdGlvbk9yaWdpbiAmJiAoMCwgX2hhc0Jhc2VQYXRoKS5oYXNCYXNlUGF0aChyZXNvbHZlZC5wYXRobmFtZSk7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gaW50ZXJwb2xhdGVBcyhyb3V0ZSwgYXNQYXRobmFtZSwgcXVlcnkpIHtcbiAgICBsZXQgaW50ZXJwb2xhdGVkUm91dGUgPSAnJztcbiAgICBjb25zdCBkeW5hbWljUmVnZXggPSAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocm91dGUpO1xuICAgIGNvbnN0IGR5bmFtaWNHcm91cHMgPSBkeW5hbWljUmVnZXguZ3JvdXBzO1xuICAgIGNvbnN0IGR5bmFtaWNNYXRjaGVzID0gLy8gVHJ5IHRvIG1hdGNoIHRoZSBkeW5hbWljIHJvdXRlIGFnYWluc3QgdGhlIGFzUGF0aFxuICAgIChhc1BhdGhuYW1lICE9PSByb3V0ZSA/ICgwLCBfcm91dGVNYXRjaGVyKS5nZXRSb3V0ZU1hdGNoZXIoZHluYW1pY1JlZ2V4KShhc1BhdGhuYW1lKSA6ICcnKSB8fCAvLyBGYWxsIGJhY2sgdG8gcmVhZGluZyB0aGUgdmFsdWVzIGZyb20gdGhlIGhyZWZcbiAgICAvLyBUT0RPOiBzaG91bGQgdGhpcyB0YWtlIHByaW9yaXR5OyBhbHNvIG5lZWQgdG8gY2hhbmdlIGluIHRoZSByb3V0ZXIuXG4gICAgcXVlcnk7XG4gICAgaW50ZXJwb2xhdGVkUm91dGUgPSByb3V0ZTtcbiAgICBjb25zdCBwYXJhbXMgPSBPYmplY3Qua2V5cyhkeW5hbWljR3JvdXBzKTtcbiAgICBpZiAoIXBhcmFtcy5ldmVyeSgocGFyYW0pPT57XG4gICAgICAgIGxldCB2YWx1ZSA9IGR5bmFtaWNNYXRjaGVzW3BhcmFtXSB8fCAnJztcbiAgICAgICAgY29uc3QgeyByZXBlYXQgLCBvcHRpb25hbCAgfSA9IGR5bmFtaWNHcm91cHNbcGFyYW1dO1xuICAgICAgICAvLyBzdXBwb3J0IHNpbmdsZS1sZXZlbCBjYXRjaC1hbGxcbiAgICAgICAgLy8gVE9ETzogbW9yZSByb2J1c3QgaGFuZGxpbmcgZm9yIHVzZXItZXJyb3IgKHBhc3NpbmcgYC9gKVxuICAgICAgICBsZXQgcmVwbGFjZWQgPSBgWyR7cmVwZWF0ID8gJy4uLicgOiAnJ30ke3BhcmFtfV1gO1xuICAgICAgICBpZiAob3B0aW9uYWwpIHtcbiAgICAgICAgICAgIHJlcGxhY2VkID0gYCR7IXZhbHVlID8gJy8nIDogJyd9WyR7cmVwbGFjZWR9XWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcGVhdCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHZhbHVlID0gW1xuICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgXTtcbiAgICAgICAgcmV0dXJuIChvcHRpb25hbCB8fCBwYXJhbSBpbiBkeW5hbWljTWF0Y2hlcykgJiYgLy8gSW50ZXJwb2xhdGUgZ3JvdXAgaW50byBkYXRhIFVSTCBpZiBwcmVzZW50XG4gICAgICAgIChpbnRlcnBvbGF0ZWRSb3V0ZSA9IGludGVycG9sYXRlZFJvdXRlLnJlcGxhY2UocmVwbGFjZWQsIHJlcGVhdCA/IHZhbHVlLm1hcCgvLyB0aGVzZSB2YWx1ZXMgc2hvdWxkIGJlIGZ1bGx5IGVuY29kZWQgaW5zdGVhZCBvZiBqdXN0XG4gICAgICAgIC8vIHBhdGggZGVsaW1pdGVyIGVzY2FwZWQgc2luY2UgdGhleSBhcmUgYmVpbmcgaW5zZXJ0ZWRcbiAgICAgICAgLy8gaW50byB0aGUgVVJMIGFuZCB3ZSBleHBlY3QgVVJMIGVuY29kZWQgc2VnbWVudHNcbiAgICAgICAgLy8gd2hlbiBwYXJzaW5nIGR5bmFtaWMgcm91dGUgcGFyYW1zXG4gICAgICAgIChzZWdtZW50KT0+ZW5jb2RlVVJJQ29tcG9uZW50KHNlZ21lbnQpKS5qb2luKCcvJykgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKSB8fCAnLycpO1xuICAgIH0pKSB7XG4gICAgICAgIGludGVycG9sYXRlZFJvdXRlID0gJycgLy8gZGlkIG5vdCBzYXRpc2Z5IGFsbCByZXF1aXJlbWVudHNcbiAgICAgICAgO1xuICAgIC8vIG4uYi4gV2UgaWdub3JlIHRoaXMgZXJyb3IgYmVjYXVzZSB3ZSBoYW5kbGUgd2FybmluZyBmb3IgdGhpcyBjYXNlIGluXG4gICAgLy8gZGV2ZWxvcG1lbnQgaW4gdGhlIGA8TGluaz5gIGNvbXBvbmVudCBkaXJlY3RseS5cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICByZXN1bHQ6IGludGVycG9sYXRlZFJvdXRlXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHJlc29sdmVIcmVmKHJvdXRlciwgaHJlZiwgcmVzb2x2ZUFzKSB7XG4gICAgLy8gd2UgdXNlIGEgZHVtbXkgYmFzZSB1cmwgZm9yIHJlbGF0aXZlIHVybHNcbiAgICBsZXQgYmFzZTtcbiAgICBsZXQgdXJsQXNTdHJpbmcgPSB0eXBlb2YgaHJlZiA9PT0gJ3N0cmluZycgPyBocmVmIDogKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKGhyZWYpO1xuICAgIC8vIHJlcGVhdGVkIHNsYXNoZXMgYW5kIGJhY2tzbGFzaGVzIGluIHRoZSBVUkwgYXJlIGNvbnNpZGVyZWRcbiAgICAvLyBpbnZhbGlkIGFuZCB3aWxsIG5ldmVyIG1hdGNoIGEgTmV4dC5qcyBwYWdlL2ZpbGVcbiAgICBjb25zdCB1cmxQcm90b01hdGNoID0gdXJsQXNTdHJpbmcubWF0Y2goL15bYS16QS1aXXsxLH06XFwvXFwvLyk7XG4gICAgY29uc3QgdXJsQXNTdHJpbmdOb1Byb3RvID0gdXJsUHJvdG9NYXRjaCA/IHVybEFzU3RyaW5nLnNsaWNlKHVybFByb3RvTWF0Y2hbMF0ubGVuZ3RoKSA6IHVybEFzU3RyaW5nO1xuICAgIGNvbnN0IHVybFBhcnRzID0gdXJsQXNTdHJpbmdOb1Byb3RvLnNwbGl0KCc/Jyk7XG4gICAgaWYgKCh1cmxQYXJ0c1swXSB8fCAnJykubWF0Y2goLyhcXC9cXC98XFxcXCkvKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIGhyZWYgcGFzc2VkIHRvIG5leHQvcm91dGVyOiAke3VybEFzU3RyaW5nfSwgcmVwZWF0ZWQgZm9yd2FyZC1zbGFzaGVzICgvLykgb3IgYmFja3NsYXNoZXMgXFxcXCBhcmUgbm90IHZhbGlkIGluIHRoZSBocmVmYCk7XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRVcmwgPSAoMCwgX3V0aWxzKS5ub3JtYWxpemVSZXBlYXRlZFNsYXNoZXModXJsQXNTdHJpbmdOb1Byb3RvKTtcbiAgICAgICAgdXJsQXNTdHJpbmcgPSAodXJsUHJvdG9NYXRjaCA/IHVybFByb3RvTWF0Y2hbMF0gOiAnJykgKyBub3JtYWxpemVkVXJsO1xuICAgIH1cbiAgICAvLyBSZXR1cm4gYmVjYXVzZSBpdCBjYW5ub3QgYmUgcm91dGVkIGJ5IHRoZSBOZXh0LmpzIHJvdXRlclxuICAgIGlmICghaXNMb2NhbFVSTCh1cmxBc1N0cmluZykpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVBcyA/IFtcbiAgICAgICAgICAgIHVybEFzU3RyaW5nXG4gICAgICAgIF0gOiB1cmxBc1N0cmluZztcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgYmFzZSA9IG5ldyBVUkwodXJsQXNTdHJpbmcuc3RhcnRzV2l0aCgnIycpID8gcm91dGVyLmFzUGF0aCA6IHJvdXRlci5wYXRobmFtZSwgJ2h0dHA6Ly9uJyk7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgICAvLyBmYWxsYmFjayB0byAvIGZvciBpbnZhbGlkIGFzUGF0aCB2YWx1ZXMgZS5nLiAvL1xuICAgICAgICBiYXNlID0gbmV3IFVSTCgnLycsICdodHRwOi8vbicpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBmaW5hbFVybCA9IG5ldyBVUkwodXJsQXNTdHJpbmcsIGJhc2UpO1xuICAgICAgICBmaW5hbFVybC5wYXRobmFtZSA9ICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2goZmluYWxVcmwucGF0aG5hbWUpO1xuICAgICAgICBsZXQgaW50ZXJwb2xhdGVkQXMgPSAnJztcbiAgICAgICAgaWYgKCgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZShmaW5hbFVybC5wYXRobmFtZSkgJiYgZmluYWxVcmwuc2VhcmNoUGFyYW1zICYmIHJlc29sdmVBcykge1xuICAgICAgICAgICAgY29uc3QgcXVlcnkgPSAoMCwgX3F1ZXJ5c3RyaW5nKS5zZWFyY2hQYXJhbXNUb1VybFF1ZXJ5KGZpbmFsVXJsLnNlYXJjaFBhcmFtcyk7XG4gICAgICAgICAgICBjb25zdCB7IHJlc3VsdCAsIHBhcmFtcyAgfSA9IGludGVycG9sYXRlQXMoZmluYWxVcmwucGF0aG5hbWUsIGZpbmFsVXJsLnBhdGhuYW1lLCBxdWVyeSk7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaW50ZXJwb2xhdGVkQXMgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBoYXNoOiBmaW5hbFVybC5oYXNoLFxuICAgICAgICAgICAgICAgICAgICBxdWVyeTogb21pdChxdWVyeSwgcGFyYW1zKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGlmIHRoZSBvcmlnaW4gZGlkbid0IGNoYW5nZSwgaXQgbWVhbnMgd2UgcmVjZWl2ZWQgYSByZWxhdGl2ZSBocmVmXG4gICAgICAgIGNvbnN0IHJlc29sdmVkSHJlZiA9IGZpbmFsVXJsLm9yaWdpbiA9PT0gYmFzZS5vcmlnaW4gPyBmaW5hbFVybC5ocmVmLnNsaWNlKGZpbmFsVXJsLm9yaWdpbi5sZW5ndGgpIDogZmluYWxVcmwuaHJlZjtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVBcyA/IFtcbiAgICAgICAgICAgIHJlc29sdmVkSHJlZixcbiAgICAgICAgICAgIGludGVycG9sYXRlZEFzIHx8IHJlc29sdmVkSHJlZlxuICAgICAgICBdIDogcmVzb2x2ZWRIcmVmO1xuICAgIH0gY2F0Y2ggKF8xKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlQXMgPyBbXG4gICAgICAgICAgICB1cmxBc1N0cmluZ1xuICAgICAgICBdIDogdXJsQXNTdHJpbmc7XG4gICAgfVxufVxuZnVuY3Rpb24gcHJlcGFyZVVybEFzKHJvdXRlciwgdXJsLCBhcykge1xuICAgIC8vIElmIHVybCBhbmQgYXMgcHJvdmlkZWQgYXMgYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLFxuICAgIC8vIHdlJ2xsIGZvcm1hdCB0aGVtIGludG8gdGhlIHN0cmluZyB2ZXJzaW9uIGhlcmUuXG4gICAgbGV0IFtyZXNvbHZlZEhyZWYsIHJlc29sdmVkQXNdID0gcmVzb2x2ZUhyZWYocm91dGVyLCB1cmwsIHRydWUpO1xuICAgIGNvbnN0IG9yaWdpbiA9ICgwLCBfdXRpbHMpLmdldExvY2F0aW9uT3JpZ2luKCk7XG4gICAgY29uc3QgaHJlZldhc0Fic29sdXRlID0gcmVzb2x2ZWRIcmVmLnN0YXJ0c1dpdGgob3JpZ2luKTtcbiAgICBjb25zdCBhc1dhc0Fic29sdXRlID0gcmVzb2x2ZWRBcyAmJiByZXNvbHZlZEFzLnN0YXJ0c1dpdGgob3JpZ2luKTtcbiAgICByZXNvbHZlZEhyZWYgPSBzdHJpcE9yaWdpbihyZXNvbHZlZEhyZWYpO1xuICAgIHJlc29sdmVkQXMgPSByZXNvbHZlZEFzID8gc3RyaXBPcmlnaW4ocmVzb2x2ZWRBcykgOiByZXNvbHZlZEFzO1xuICAgIGNvbnN0IHByZXBhcmVkVXJsID0gaHJlZldhc0Fic29sdXRlID8gcmVzb2x2ZWRIcmVmIDogKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocmVzb2x2ZWRIcmVmKTtcbiAgICBjb25zdCBwcmVwYXJlZEFzID0gYXMgPyBzdHJpcE9yaWdpbihyZXNvbHZlSHJlZihyb3V0ZXIsIGFzKSkgOiByZXNvbHZlZEFzIHx8IHJlc29sdmVkSHJlZjtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmw6IHByZXBhcmVkVXJsLFxuICAgICAgICBhczogYXNXYXNBYnNvbHV0ZSA/IHByZXBhcmVkQXMgOiAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChwcmVwYXJlZEFzKVxuICAgIH07XG59XG5mdW5jdGlvbiByZXNvbHZlRHluYW1pY1JvdXRlKHBhdGhuYW1lLCBwYWdlcykge1xuICAgIGNvbnN0IGNsZWFuUGF0aG5hbWUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2goKDAsIF9kZW5vcm1hbGl6ZVBhZ2VQYXRoKS5kZW5vcm1hbGl6ZVBhZ2VQYXRoKHBhdGhuYW1lKSk7XG4gICAgaWYgKGNsZWFuUGF0aG5hbWUgPT09ICcvNDA0JyB8fCBjbGVhblBhdGhuYW1lID09PSAnL19lcnJvcicpIHtcbiAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgIH1cbiAgICAvLyBoYW5kbGUgcmVzb2x2aW5nIGhyZWYgZm9yIGR5bmFtaWMgcm91dGVzXG4gICAgaWYgKCFwYWdlcy5pbmNsdWRlcyhjbGVhblBhdGhuYW1lKSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYXJyYXktY2FsbGJhY2stcmV0dXJuXG4gICAgICAgIHBhZ2VzLnNvbWUoKHBhZ2UpPT57XG4gICAgICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHBhZ2UpICYmICgwLCBfcm91dGVSZWdleCkuZ2V0Um91dGVSZWdleChwYWdlKS5yZS50ZXN0KGNsZWFuUGF0aG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcGF0aG5hbWUgPSBwYWdlO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSk7XG59XG5mdW5jdGlvbiBnZXRNaWRkbGV3YXJlRGF0YShzb3VyY2UsIHJlc3BvbnNlLCBvcHRpb25zKSB7XG4gICAgY29uc3QgbmV4dENvbmZpZyA9IHtcbiAgICAgICAgYmFzZVBhdGg6IG9wdGlvbnMucm91dGVyLmJhc2VQYXRoLFxuICAgICAgICBpMThuOiB7XG4gICAgICAgICAgICBsb2NhbGVzOiBvcHRpb25zLnJvdXRlci5sb2NhbGVzXG4gICAgICAgIH0sXG4gICAgICAgIHRyYWlsaW5nU2xhc2g6IEJvb2xlYW4ocHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIKVxuICAgIH07XG4gICAgY29uc3QgcmV3cml0ZUhlYWRlciA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCd4LW5leHRqcy1yZXdyaXRlJyk7XG4gICAgbGV0IHJld3JpdGVUYXJnZXQgPSByZXdyaXRlSGVhZGVyIHx8IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCd4LW5leHRqcy1tYXRjaGVkLXBhdGgnKTtcbiAgICBjb25zdCBtYXRjaGVkUGF0aCA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCd4LW1hdGNoZWQtcGF0aCcpO1xuICAgIGlmIChtYXRjaGVkUGF0aCAmJiAhcmV3cml0ZVRhcmdldCAmJiAhbWF0Y2hlZFBhdGguaW5jbHVkZXMoJ19fbmV4dF9kYXRhX2NhdGNoYWxsJykgJiYgIW1hdGNoZWRQYXRoLmluY2x1ZGVzKCcvX2Vycm9yJykgJiYgIW1hdGNoZWRQYXRoLmluY2x1ZGVzKCcvNDA0JykpIHtcbiAgICAgICAgLy8gbGV2ZXJhZ2UgeC1tYXRjaGVkLXBhdGggdG8gZGV0ZWN0IG5leHQuY29uZmlnLmpzIHJld3JpdGVzXG4gICAgICAgIHJld3JpdGVUYXJnZXQgPSBtYXRjaGVkUGF0aDtcbiAgICB9XG4gICAgaWYgKHJld3JpdGVUYXJnZXQpIHtcbiAgICAgICAgaWYgKHJld3JpdGVUYXJnZXQuc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgICAgICBjb25zdCBwYXJzZWRSZXdyaXRlVGFyZ2V0ID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKHJld3JpdGVUYXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgcGF0aG5hbWVJbmZvID0gKDAsIF9nZXROZXh0UGF0aG5hbWVJbmZvKS5nZXROZXh0UGF0aG5hbWVJbmZvKHBhcnNlZFJld3JpdGVUYXJnZXQucGF0aG5hbWUsIHtcbiAgICAgICAgICAgICAgICBuZXh0Q29uZmlnLFxuICAgICAgICAgICAgICAgIHBhcnNlRGF0YTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgZnNQYXRobmFtZSA9ICgwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZUluZm8ucGF0aG5hbWUpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgICBvcHRpb25zLnJvdXRlci5wYWdlTG9hZGVyLmdldFBhZ2VMaXN0KCksXG4gICAgICAgICAgICAgICAgKDAsIF9yb3V0ZUxvYWRlcikuZ2V0Q2xpZW50QnVpbGRNYW5pZmVzdCgpLCBcbiAgICAgICAgICAgIF0pLnRoZW4oKFtwYWdlcywgeyBfX3Jld3JpdGVzOiByZXdyaXRlcyAgfV0pPT57XG4gICAgICAgICAgICAgICAgbGV0IGFzID0gKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShwYXRobmFtZUluZm8ucGF0aG5hbWUsIHBhdGhuYW1lSW5mby5sb2NhbGUpO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUoYXMpIHx8ICFyZXdyaXRlSGVhZGVyICYmIHBhZ2VzLmluY2x1ZGVzKCgwLCBfbm9ybWFsaXplTG9jYWxlUGF0aCkubm9ybWFsaXplTG9jYWxlUGF0aCgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChhcyksIG9wdGlvbnMucm91dGVyLmxvY2FsZXMpLnBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJzZWRTb3VyY2UgPSAoMCwgX2dldE5leHRQYXRobmFtZUluZm8pLmdldE5leHRQYXRobmFtZUluZm8oKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKHNvdXJjZSkucGF0aG5hbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlRGF0YTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYXMgPSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChwYXJzZWRTb3VyY2UucGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWRSZXdyaXRlVGFyZ2V0LnBhdGhuYW1lID0gYXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSEFTX1JFV1JJVEVTKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9ICgwLCBfcmVzb2x2ZVJld3JpdGVzKS5kZWZhdWx0KGFzLCBwYWdlcywgcmV3cml0ZXMsIHBhcnNlZFJld3JpdGVUYXJnZXQucXVlcnksIChwYXRoKT0+cmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXRoLCBwYWdlcyksIG9wdGlvbnMucm91dGVyLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Lm1hdGNoZWRQYWdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRSZXdyaXRlVGFyZ2V0LnBhdGhuYW1lID0gcmVzdWx0LnBhcnNlZEFzLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXMgPSBwYXJzZWRSZXdyaXRlVGFyZ2V0LnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihwYXJzZWRSZXdyaXRlVGFyZ2V0LnF1ZXJ5LCByZXN1bHQucGFyc2VkQXMucXVlcnkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghcGFnZXMuaW5jbHVkZXMoZnNQYXRobmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzb2x2ZWRQYXRobmFtZSA9IHJlc29sdmVEeW5hbWljUm91dGUoZnNQYXRobmFtZSwgcGFnZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzb2x2ZWRQYXRobmFtZSAhPT0gZnNQYXRobmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnNQYXRobmFtZSA9IHJlc29sdmVkUGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzb2x2ZWRIcmVmID0gIXBhZ2VzLmluY2x1ZGVzKGZzUGF0aG5hbWUpID8gcmVzb2x2ZUR5bmFtaWNSb3V0ZSgoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgocGFyc2VkUmV3cml0ZVRhcmdldC5wYXRobmFtZSksIG9wdGlvbnMucm91dGVyLmxvY2FsZXMpLnBhdGhuYW1lLCBwYWdlcykgOiBmc1BhdGhuYW1lO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocmVzb2x2ZWRIcmVmKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXRjaGVzID0gKDAsIF9yb3V0ZU1hdGNoZXIpLmdldFJvdXRlTWF0Y2hlcigoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocmVzb2x2ZWRIcmVmKSkoYXMpO1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHBhcnNlZFJld3JpdGVUYXJnZXQucXVlcnksIG1hdGNoZXMgfHwge30pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAncmV3cml0ZScsXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZEFzOiBwYXJzZWRSZXdyaXRlVGFyZ2V0LFxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEhyZWZcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3JjID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChzb3VyY2UpO1xuICAgICAgICBjb25zdCBwYXRobmFtZSA9ICgwLCBfZm9ybWF0TmV4dFBhdGhuYW1lSW5mbykuZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhfZXh0ZW5kcyh7fSwgKDAsIF9nZXROZXh0UGF0aG5hbWVJbmZvKS5nZXROZXh0UGF0aG5hbWVJbmZvKHNyYy5wYXRobmFtZSwge1xuICAgICAgICAgICAgbmV4dENvbmZpZyxcbiAgICAgICAgICAgIHBhcnNlRGF0YTogdHJ1ZVxuICAgICAgICB9KSwge1xuICAgICAgICAgICAgZGVmYXVsdExvY2FsZTogb3B0aW9ucy5yb3V0ZXIuZGVmYXVsdExvY2FsZSxcbiAgICAgICAgICAgIGJ1aWxkSWQ6ICcnXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICB0eXBlOiAncmVkaXJlY3QtZXh0ZXJuYWwnLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IGAke3BhdGhuYW1lfSR7c3JjLnF1ZXJ5fSR7c3JjLmhhc2h9YFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgcmVkaXJlY3RUYXJnZXQgPSByZXNwb25zZS5oZWFkZXJzLmdldCgneC1uZXh0anMtcmVkaXJlY3QnKTtcbiAgICBpZiAocmVkaXJlY3RUYXJnZXQpIHtcbiAgICAgICAgaWYgKHJlZGlyZWN0VGFyZ2V0LnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgY29uc3Qgc3JjID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChyZWRpcmVjdFRhcmdldCk7XG4gICAgICAgICAgICBjb25zdCBwYXRobmFtZSA9ICgwLCBfZm9ybWF0TmV4dFBhdGhuYW1lSW5mbykuZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhfZXh0ZW5kcyh7fSwgKDAsIF9nZXROZXh0UGF0aG5hbWVJbmZvKS5nZXROZXh0UGF0aG5hbWVJbmZvKHNyYy5wYXRobmFtZSwge1xuICAgICAgICAgICAgICAgIG5leHRDb25maWcsXG4gICAgICAgICAgICAgICAgcGFyc2VEYXRhOiB0cnVlXG4gICAgICAgICAgICB9KSwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHRMb2NhbGU6IG9wdGlvbnMucm91dGVyLmRlZmF1bHRMb2NhbGUsXG4gICAgICAgICAgICAgICAgYnVpbGRJZDogJydcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgICAgICAgIHR5cGU6ICdyZWRpcmVjdC1pbnRlcm5hbCcsXG4gICAgICAgICAgICAgICAgbmV3QXM6IGAke3BhdGhuYW1lfSR7c3JjLnF1ZXJ5fSR7c3JjLmhhc2h9YCxcbiAgICAgICAgICAgICAgICBuZXdVcmw6IGAke3BhdGhuYW1lfSR7c3JjLnF1ZXJ5fSR7c3JjLmhhc2h9YFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICB0eXBlOiAncmVkaXJlY3QtZXh0ZXJuYWwnLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IHJlZGlyZWN0VGFyZ2V0XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgdHlwZTogJ25leHQnXG4gICAgfSk7XG59XG5mdW5jdGlvbiB3aXRoTWlkZGxld2FyZUVmZmVjdHMob3B0aW9ucykge1xuICAgIHJldHVybiBfd2l0aE1pZGRsZXdhcmVFZmZlY3RzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfd2l0aE1pZGRsZXdhcmVFZmZlY3RzKCkge1xuICAgIF93aXRoTWlkZGxld2FyZUVmZmVjdHMgPSBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKihvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXMgPSB5aWVsZCBtYXRjaGVzTWlkZGxld2FyZShvcHRpb25zKTtcbiAgICAgICAgaWYgKCFtYXRjaGVzIHx8ICFvcHRpb25zLmZldGNoRGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBvcHRpb25zLmZldGNoRGF0YSgpO1xuICAgICAgICAgICAgY29uc3QgZWZmZWN0ID0geWllbGQgZ2V0TWlkZGxld2FyZURhdGEoZGF0YS5kYXRhSHJlZiwgZGF0YS5yZXNwb25zZSwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGRhdGFIcmVmOiBkYXRhLmRhdGFIcmVmLFxuICAgICAgICAgICAgICAgIGpzb246IGRhdGEuanNvbixcbiAgICAgICAgICAgICAgICByZXNwb25zZTogZGF0YS5yZXNwb25zZSxcbiAgICAgICAgICAgICAgICB0ZXh0OiBkYXRhLnRleHQsXG4gICAgICAgICAgICAgICAgY2FjaGVLZXk6IGRhdGEuY2FjaGVLZXksXG4gICAgICAgICAgICAgICAgZWZmZWN0XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgKiBUT0RPOiBSZXZpc2l0IHRoaXMgaW4gdGhlIGZ1dHVyZS5cbiAgICAgKiBGb3Igbm93IHdlIHdpbGwgbm90IGNvbnNpZGVyIG1pZGRsZXdhcmUgZGF0YSBlcnJvcnMgdG8gYmUgZmF0YWwuXG4gICAgICogbWF5YmUgd2Ugc2hvdWxkIHJldmlzaXQgaW4gdGhlIGZ1dHVyZS5cbiAgICAgKi8gcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gX3dpdGhNaWRkbGV3YXJlRWZmZWN0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuY29uc3QgbWFudWFsU2Nyb2xsUmVzdG9yYXRpb24gPSBwcm9jZXNzLmVudi5fX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdzY3JvbGxSZXN0b3JhdGlvbicgaW4gd2luZG93Lmhpc3RvcnkgJiYgISFmdW5jdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgICBsZXQgdiA9ICdfX25leHQnO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VxdWVuY2VzXG4gICAgICAgIHJldHVybiBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHYsIHYpLCBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKHYpLCB0cnVlO1xuICAgIH0gY2F0Y2ggKG4pIHt9XG59KCk7XG5jb25zdCBTU0dfREFUQV9OT1RfRk9VTkQgPSBTeW1ib2woJ1NTR19EQVRBX05PVF9GT1VORCcpO1xuZnVuY3Rpb24gZmV0Y2hSZXRyeSh1cmwsIGF0dGVtcHRzLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgICAvLyBDb29raWVzIGFyZSByZXF1aXJlZCB0byBiZSBwcmVzZW50IGZvciBOZXh0LmpzJyBTU0cgXCJQcmV2aWV3IE1vZGVcIi5cbiAgICAgICAgLy8gQ29va2llcyBtYXkgYWxzbyBiZSByZXF1aXJlZCBmb3IgYGdldFNlcnZlclNpZGVQcm9wc2AuXG4gICAgICAgIC8vXG4gICAgICAgIC8vID4gYGZldGNoYCB3b27igJl0IHNlbmQgY29va2llcywgdW5sZXNzIHlvdSBzZXQgdGhlIGNyZWRlbnRpYWxzIGluaXRcbiAgICAgICAgLy8gPiBvcHRpb24uXG4gICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GZXRjaF9BUEkvVXNpbmdfRmV0Y2hcbiAgICAgICAgLy9cbiAgICAgICAgLy8gPiBGb3IgbWF4aW11bSBicm93c2VyIGNvbXBhdGliaWxpdHkgd2hlbiBpdCBjb21lcyB0byBzZW5kaW5nICZcbiAgICAgICAgLy8gPiByZWNlaXZpbmcgY29va2llcywgYWx3YXlzIHN1cHBseSB0aGUgYGNyZWRlbnRpYWxzOiAnc2FtZS1vcmlnaW4nYFxuICAgICAgICAvLyA+IG9wdGlvbiBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gdGhlIGRlZmF1bHQuXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9naXRodWIvZmV0Y2gjY2F2ZWF0c1xuICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgbWV0aG9kOiBvcHRpb25zLm1ldGhvZCB8fCAnR0VUJyxcbiAgICAgICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucy5oZWFkZXJzLCB7XG4gICAgICAgICAgICAneC1uZXh0anMtZGF0YSc6ICcxJ1xuICAgICAgICB9KVxuICAgIH0pLnRoZW4oKHJlc3BvbnNlKT0+e1xuICAgICAgICByZXR1cm4gIXJlc3BvbnNlLm9rICYmIGF0dGVtcHRzID4gMSAmJiByZXNwb25zZS5zdGF0dXMgPj0gNTAwID8gZmV0Y2hSZXRyeSh1cmwsIGF0dGVtcHRzIC0gMSwgb3B0aW9ucykgOiByZXNwb25zZTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGhhbmRsZVNtb290aFNjcm9sbChmbiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgaHRtbEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgY29uc3QgZXhpc3RpbmcgPSBodG1sRWxlbWVudC5zdHlsZS5zY3JvbGxCZWhhdmlvcjtcbiAgICBodG1sRWxlbWVudC5zdHlsZS5zY3JvbGxCZWhhdmlvciA9ICdhdXRvJztcbiAgICBpZiAoIW9wdGlvbnMuZG9udEZvcmNlTGF5b3V0KSB7XG4gICAgICAgIC8vIEluIENocm9tZS1iYXNlZCBicm93c2VycyB3ZSBuZWVkIHRvIGZvcmNlIHJlZmxvdyBiZWZvcmUgY2FsbGluZyBgc2Nyb2xsVG9gLlxuICAgICAgICAvLyBPdGhlcndpc2UgaXQgd2lsbCBub3QgcGlja3VwIHRoZSBjaGFuZ2UgaW4gc2Nyb2xsQmVoYXZpb3JcbiAgICAgICAgLy8gTW9yZSBpbmZvIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9pc3N1ZXMvNDA3MTkjaXNzdWVjb21tZW50LTEzMzYyNDgwNDJcbiAgICAgICAgaHRtbEVsZW1lbnQuZ2V0Q2xpZW50UmVjdHMoKTtcbiAgICB9XG4gICAgZm4oKTtcbiAgICBodG1sRWxlbWVudC5zdHlsZS5zY3JvbGxCZWhhdmlvciA9IGV4aXN0aW5nO1xufVxuZnVuY3Rpb24gdHJ5VG9QYXJzZUFzSlNPTih0ZXh0KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGV4dCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuZnVuY3Rpb24gZmV0Y2hOZXh0RGF0YSh7IGRhdGFIcmVmICwgaW5mbGlnaHRDYWNoZSAsIGlzUHJlZmV0Y2ggLCBoYXNNaWRkbGV3YXJlICwgaXNTZXJ2ZXJSZW5kZXIgLCBwYXJzZUpTT04gLCBwZXJzaXN0Q2FjaGUgLCBpc0JhY2tncm91bmQgLCB1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgIH0pIHtcbiAgICBjb25zdCB7IGhyZWY6IGNhY2hlS2V5ICB9ID0gbmV3IFVSTChkYXRhSHJlZiwgd2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIHZhciByZWYxO1xuICAgIGNvbnN0IGdldERhdGEgPSAocGFyYW1zKT0+e1xuICAgICAgICByZXR1cm4gZmV0Y2hSZXRyeShkYXRhSHJlZiwgaXNTZXJ2ZXJSZW5kZXIgPyAzIDogMSwge1xuICAgICAgICAgICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgaXNQcmVmZXRjaCA/IHtcbiAgICAgICAgICAgICAgICBwdXJwb3NlOiAncHJlZmV0Y2gnXG4gICAgICAgICAgICB9IDoge30sIGlzUHJlZmV0Y2ggJiYgaGFzTWlkZGxld2FyZSA/IHtcbiAgICAgICAgICAgICAgICAneC1taWRkbGV3YXJlLXByZWZldGNoJzogJzEnXG4gICAgICAgICAgICB9IDoge30pLFxuICAgICAgICAgICAgbWV0aG9kOiAocmVmMSA9IHBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogcGFyYW1zLm1ldGhvZCkgIT0gbnVsbCA/IHJlZjEgOiAnR0VUJ1xuICAgICAgICB9KS50aGVuKChyZXNwb25zZSk9PntcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5vayAmJiAocGFyYW1zID09IG51bGwgPyB2b2lkIDAgOiBwYXJhbXMubWV0aG9kKSA9PT0gJ0hFQUQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnJyxcbiAgICAgICAgICAgICAgICAgICAganNvbjoge30sXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlS2V5XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS50ZXh0KCkudGhlbigodGV4dCk9PntcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogV2hlbiB0aGUgZGF0YSByZXNwb25zZSBpcyBhIHJlZGlyZWN0IGJlY2F1c2Ugb2YgYSBtaWRkbGV3YXJlXG4gICAgICAgICAgICAgKiB3ZSBkbyBub3QgY29uc2lkZXIgaXQgYW4gZXJyb3IuIFRoZSBoZWFkZXJzIG11c3QgYnJpbmcgdGhlXG4gICAgICAgICAgICAgKiBtYXBwZWQgbG9jYXRpb24uXG4gICAgICAgICAgICAgKiBUT0RPOiBDaGFuZ2UgdGhlIHN0YXR1cyBjb2RlIGluIHRoZSBoYW5kbGVyLlxuICAgICAgICAgICAgICovIGlmIChoYXNNaWRkbGV3YXJlICYmIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIDMwMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDMwMixcbiAgICAgICAgICAgICAgICAgICAgICAgIDMwNyxcbiAgICAgICAgICAgICAgICAgICAgICAgIDMwOFxuICAgICAgICAgICAgICAgICAgICBdLmluY2x1ZGVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc29uOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUtleVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc01pZGRsZXdhcmUgJiYgcmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHJlZiA9IHRyeVRvUGFyc2VBc0pTT04odGV4dCkpID09IG51bGwgPyB2b2lkIDAgOiByZWYubm90Rm91bmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSHJlZixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90Rm91bmQ6IFNTR19EQVRBX05PVF9GT1VORFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVLZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKGBGYWlsZWQgdG8gbG9hZCBzdGF0aWMgcHJvcHNgKTtcbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBXZSBzaG91bGQgb25seSB0cmlnZ2VyIGEgc2VydmVyLXNpZGUgdHJhbnNpdGlvbiBpZiB0aGlzIHdhc1xuICAgICAgICAgICAgICogY2F1c2VkIG9uIGEgY2xpZW50LXNpZGUgdHJhbnNpdGlvbi4gT3RoZXJ3aXNlLCB3ZSdkIGdldCBpbnRvXG4gICAgICAgICAgICAgKiBhbiBpbmZpbml0ZSBsb29wLlxuICAgICAgICAgICAgICovIGlmICghaXNTZXJ2ZXJSZW5kZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLm1hcmtBc3NldEVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICAgICAgICAgIGpzb246IHBhcnNlSlNPTiA/IHRyeVRvUGFyc2VBc0pTT04odGV4dCkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dCxcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVLZXlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICBpZiAoIXBlcnNpc3RDYWNoZSB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nIHx8IGRhdGEucmVzcG9uc2UuaGVhZGVycy5nZXQoJ3gtbWlkZGxld2FyZS1jYWNoZScpID09PSAnbm8tY2FjaGUnKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH0pLmNhdGNoKChlcnIpPT57XG4gICAgICAgICAgICBpZiAoIXVuc3RhYmxlX3NraXBDbGllbnRDYWNoZSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBpbmZsaWdodENhY2hlW2NhY2hlS2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgvLyBjaHJvbWVcbiAgICAgICAgICAgIGVyci5tZXNzYWdlID09PSAnRmFpbGVkIHRvIGZldGNoJyB8fCAvLyBmaXJlZm94XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9PT0gJ05ldHdvcmtFcnJvciB3aGVuIGF0dGVtcHRpbmcgdG8gZmV0Y2ggcmVzb3VyY2UuJyB8fCAvLyBzYWZhcmlcbiAgICAgICAgICAgIGVyci5tZXNzYWdlID09PSAnTG9hZCBmYWlsZWQnKSB7XG4gICAgICAgICAgICAgICAgKDAsIF9yb3V0ZUxvYWRlcikubWFya0Fzc2V0RXJyb3IoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvLyB3aGVuIHNraXBwaW5nIGNsaWVudCBjYWNoZSB3ZSB3YWl0IHRvIHVwZGF0ZVxuICAgIC8vIGluZmxpZ2h0IGNhY2hlIHVudGlsIHN1Y2Nlc3NmdWwgZGF0YSByZXNwb25zZVxuICAgIC8vIHRoaXMgYWxsb3dzIHJhY2luZyBjbGljayBldmVudCB3aXRoIGZldGNoaW5nIG5ld2VyIGRhdGFcbiAgICAvLyB3aXRob3V0IGJsb2NraW5nIG5hdmlnYXRpb24gd2hlbiBzdGFsZSBkYXRhIGlzIGF2YWlsYWJsZVxuICAgIGlmICh1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgJiYgcGVyc2lzdENhY2hlKSB7XG4gICAgICAgIHJldHVybiBnZXREYXRhKHt9KS50aGVuKChkYXRhKT0+e1xuICAgICAgICAgICAgaW5mbGlnaHRDYWNoZVtjYWNoZUtleV0gPSBQcm9taXNlLnJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChpbmZsaWdodENhY2hlW2NhY2hlS2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBpbmZsaWdodENhY2hlW2NhY2hlS2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldID0gZ2V0RGF0YShpc0JhY2tncm91bmQgPyB7XG4gICAgICAgIG1ldGhvZDogJ0hFQUQnXG4gICAgfSA6IHt9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiwgMTApO1xufVxuZnVuY3Rpb24gaGFuZGxlSGFyZE5hdmlnYXRpb24oeyB1cmwgLCByb3V0ZXIgIH0pIHtcbiAgICAvLyBlbnN1cmUgd2UgZG9uJ3QgdHJpZ2dlciBhIGhhcmQgbmF2aWdhdGlvbiB0byB0aGUgc2FtZVxuICAgIC8vIFVSTCBhcyB0aGlzIGNhbiBlbmQgdXAgd2l0aCBhbiBpbmZpbml0ZSByZWZyZXNoXG4gICAgaWYgKHVybCA9PT0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgoKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShyb3V0ZXIuYXNQYXRoLCByb3V0ZXIubG9jYWxlKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhcmlhbnQ6IGF0dGVtcHRlZCB0byBoYXJkIG5hdmlnYXRlIHRvIHRoZSBzYW1lIFVSTCAke3VybH0gJHtsb2NhdGlvbi5ocmVmfWApO1xuICAgIH1cbiAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcbn1cbmNvbnN0IGdldENhbmNlbGxlZEhhbmRsZXIgPSAoeyByb3V0ZSAsIHJvdXRlciAgfSk9PntcbiAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgY29uc3QgY2FuY2VsID0gcm91dGVyLmNsYyA9ICgpPT57XG4gICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVDYW5jZWxsZWQgPSAoKT0+e1xuICAgICAgICBpZiAoY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihgQWJvcnQgZmV0Y2hpbmcgY29tcG9uZW50IGZvciByb3V0ZTogXCIke3JvdXRlfVwiYCk7XG4gICAgICAgICAgICBlcnJvci5jYW5jZWxsZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhbmNlbCA9PT0gcm91dGVyLmNsYykge1xuICAgICAgICAgICAgcm91dGVyLmNsYyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBoYW5kbGVDYW5jZWxsZWQ7XG59O1xuY2xhc3MgUm91dGVyIHtcbiAgICByZWxvYWQoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEdvIGJhY2sgaW4gaGlzdG9yeVxuICAgKi8gYmFjaygpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xuICAgIH1cbiAgICAvKipcbiAgICogR28gZm9yd2FyZCBpbiBoaXN0b3J5XG4gICAqLyBmb3J3YXJkKCkge1xuICAgICAgICB3aW5kb3cuaGlzdG9yeS5mb3J3YXJkKCk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBQZXJmb3JtcyBhIGBwdXNoU3RhdGVgIHdpdGggYXJndW1lbnRzXG4gICAqIEBwYXJhbSB1cmwgb2YgdGhlIHJvdXRlXG4gICAqIEBwYXJhbSBhcyBtYXNrcyBgdXJsYCBmb3IgdGhlIGJyb3dzZXJcbiAgICogQHBhcmFtIG9wdGlvbnMgb2JqZWN0IHlvdSBjYW4gZGVmaW5lIGBzaGFsbG93YCBhbmQgb3RoZXIgb3B0aW9uc1xuICAgKi8gcHVzaCh1cmwsIGFzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9TQ1JPTExfUkVTVE9SQVRJT04pIHtcbiAgICAgICAgICAgIC8vIFRPRE86IHJlbW92ZSBpbiB0aGUgZnV0dXJlIHdoZW4gd2UgdXBkYXRlIGhpc3RvcnkgYmVmb3JlIHJvdXRlIGNoYW5nZVxuICAgICAgICAgICAgLy8gaXMgY29tcGxldGUsIGFzIHRoZSBwb3BzdGF0ZSBldmVudCBzaG91bGQgaGFuZGxlIHRoaXMgY2FwdHVyZS5cbiAgICAgICAgICAgIGlmIChtYW51YWxTY3JvbGxSZXN0b3JhdGlvbikge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNuYXBzaG90IHNjcm9sbCBwb3NpdGlvbiByaWdodCBiZWZvcmUgbmF2aWdhdGluZyB0byBhIG5ldyBwYWdlOlxuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdfX25leHRfc2Nyb2xsXycgKyB0aGlzLl9rZXksIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IHNlbGYucGFnZVhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiBzZWxmLnBhZ2VZT2Zmc2V0XG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICh7IHVybCAsIGFzICB9ID0gcHJlcGFyZVVybEFzKHRoaXMsIHVybCwgYXMpKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hhbmdlKCdwdXNoU3RhdGUnLCB1cmwsIGFzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIFBlcmZvcm1zIGEgYHJlcGxhY2VTdGF0ZWAgd2l0aCBhcmd1bWVudHNcbiAgICogQHBhcmFtIHVybCBvZiB0aGUgcm91dGVcbiAgICogQHBhcmFtIGFzIG1hc2tzIGB1cmxgIGZvciB0aGUgYnJvd3NlclxuICAgKiBAcGFyYW0gb3B0aW9ucyBvYmplY3QgeW91IGNhbiBkZWZpbmUgYHNoYWxsb3dgIGFuZCBvdGhlciBvcHRpb25zXG4gICAqLyByZXBsYWNlKHVybCwgYXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICAoeyB1cmwgLCBhcyAgfSA9IHByZXBhcmVVcmxBcyh0aGlzLCB1cmwsIGFzKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYW5nZSgncmVwbGFjZVN0YXRlJywgdXJsLCBhcywgb3B0aW9ucyk7XG4gICAgfVxuICAgIGNoYW5nZShtZXRob2QsIHVybCwgYXMsIG9wdGlvbnMsIGZvcmNlZFNjcm9sbCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbiooKSB7XG4gICAgICAgICAgICBpZiAoIWlzTG9jYWxVUkwodXJsKSkge1xuICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgdXJsLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gV0FSTklORzogYF9oYCBpcyBhbiBpbnRlcm5hbCBvcHRpb24gZm9yIGhhbmRpbmcgTmV4dC5qcyBjbGllbnQtc2lkZVxuICAgICAgICAgICAgLy8gaHlkcmF0aW9uLiBZb3VyIGFwcCBzaG91bGQgX25ldmVyXyB1c2UgdGhpcyBwcm9wZXJ0eS4gSXQgbWF5IGNoYW5nZSBhdFxuICAgICAgICAgICAgLy8gYW55IHRpbWUgd2l0aG91dCBub3RpY2UuXG4gICAgICAgICAgICBjb25zdCBpc1F1ZXJ5VXBkYXRpbmcgPSBvcHRpb25zLl9oID09PSAxO1xuICAgICAgICAgICAgbGV0IHNob3VsZFJlc29sdmVIcmVmID0gaXNRdWVyeVVwZGF0aW5nIHx8IG9wdGlvbnMuX3Nob3VsZFJlc29sdmVIcmVmIHx8ICgwLCBfcGFyc2VQYXRoKS5wYXJzZVBhdGgodXJsKS5wYXRobmFtZSA9PT0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChhcykucGF0aG5hbWU7XG4gICAgICAgICAgICBjb25zdCBuZXh0U3RhdGUgPSBfZXh0ZW5kcyh7fSwgX3RoaXMuc3RhdGUpO1xuICAgICAgICAgICAgLy8gZm9yIHN0YXRpYyBwYWdlcyB3aXRoIHF1ZXJ5IHBhcmFtcyBpbiB0aGUgVVJMIHdlIGRlbGF5XG4gICAgICAgICAgICAvLyBtYXJraW5nIHRoZSByb3V0ZXIgcmVhZHkgdW50aWwgYWZ0ZXIgdGhlIHF1ZXJ5IGlzIHVwZGF0ZWRcbiAgICAgICAgICAgIC8vIG9yIGEgbmF2aWdhdGlvbiBoYXMgb2NjdXJyZWRcbiAgICAgICAgICAgIGNvbnN0IHJlYWR5U3RhdGVDaGFuZ2UgPSBfdGhpcy5pc1JlYWR5ICE9PSB0cnVlO1xuICAgICAgICAgICAgX3RoaXMuaXNSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICBjb25zdCBpc1NzciA9IF90aGlzLmlzU3NyO1xuICAgICAgICAgICAgaWYgKCFpc1F1ZXJ5VXBkYXRpbmcpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5pc1NzciA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgYSByb3V0ZSB0cmFuc2l0aW9uIGlzIGFscmVhZHkgaW4gcHJvZ3Jlc3MgYmVmb3JlXG4gICAgICAgICAgICAvLyB0aGUgcXVlcnkgdXBkYXRpbmcgaXMgdHJpZ2dlcmVkIGlnbm9yZSBxdWVyeSB1cGRhdGluZ1xuICAgICAgICAgICAgaWYgKGlzUXVlcnlVcGRhdGluZyAmJiBfdGhpcy5jbGMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwcmV2TG9jYWxlID0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgICAgICAgICAgbmV4dFN0YXRlLmxvY2FsZSA9IG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSA/IF90aGlzLmRlZmF1bHRMb2NhbGUgOiBvcHRpb25zLmxvY2FsZSB8fCBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQXMgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgoYXMpID8gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoYXMpIDogYXMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsZVBhdGhSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGFyc2VkQXMucGF0aG5hbWUsIF90aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgICAgIGlmIChsb2NhbGVQYXRoUmVzdWx0LmRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5sb2NhbGUgPSBsb2NhbGVQYXRoUmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWRBcy5wYXRobmFtZSA9ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHBhcnNlZEFzLnBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgYXMgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkQXMpO1xuICAgICAgICAgICAgICAgICAgICB1cmwgPSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCgoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgodXJsKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKHVybCkgOiB1cmwsIF90aGlzLmxvY2FsZXMpLnBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGRpZE5hdmlnYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0byB3cmFwIHRoaXMgaW4gdGhlIGVudiBjaGVjayBhZ2FpbiBzaW5jZSByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgLy8gbW92ZXMgdGhpcyBvbiBpdHMgb3duIGR1ZSB0byB0aGUgcmV0dXJuXG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZjtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhlIGxvY2FsZSBpc24ndCBjb25maWd1cmVkIGhhcmQgbmF2aWdhdGUgdG8gc2hvdyA0MDQgcGFnZVxuICAgICAgICAgICAgICAgICAgICBpZiAoISgocmVmID0gX3RoaXMubG9jYWxlcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5pbmNsdWRlcyhuZXh0U3RhdGUubG9jYWxlKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZEFzLnBhdGhuYW1lID0gKDAsIF9hZGRMb2NhbGUpLmFkZExvY2FsZShwYXJzZWRBcy5wYXRobmFtZSwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkQXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyB3YXMgcHJldmlvdXNseSBhIHJldHVybiBidXQgd2FzIHJlbW92ZWQgaW4gZmF2b3JcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9mIGJldHRlciBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2l0aCByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWROYXZpZ2F0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZGV0ZWN0ZWREb21haW4gPSAoMCwgX2RldGVjdERvbWFpbkxvY2FsZSkuZGV0ZWN0RG9tYWluTG9jYWxlKF90aGlzLmRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0byB3cmFwIHRoaXMgaW4gdGhlIGVudiBjaGVjayBhZ2FpbiBzaW5jZSByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgLy8gbW92ZXMgdGhpcyBvbiBpdHMgb3duIGR1ZSB0byB0aGUgcmV0dXJuXG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgd2UgYXJlIG5hdmlnYXRpbmcgdG8gYSBkb21haW4gbG9jYWxlIGVuc3VyZSB3ZSByZWRpcmVjdCB0byB0aGVcbiAgICAgICAgICAgICAgICAgICAgLy8gY29ycmVjdCBkb21haW5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFkaWROYXZpZ2F0ZSAmJiBkZXRlY3RlZERvbWFpbiAmJiBfdGhpcy5pc0xvY2FsZURvbWFpbiAmJiBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lICE9PSBkZXRlY3RlZERvbWFpbi5kb21haW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFzTm9CYXNlUGF0aCA9ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGBodHRwJHtkZXRlY3RlZERvbWFpbi5odHRwID8gJycgOiAncyd9Oi8vJHtkZXRlY3RlZERvbWFpbi5kb21haW59JHsoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChgJHtuZXh0U3RhdGUubG9jYWxlID09PSBkZXRlY3RlZERvbWFpbi5kZWZhdWx0TG9jYWxlID8gJycgOiBgLyR7bmV4dFN0YXRlLmxvY2FsZX1gfSR7YXNOb0Jhc2VQYXRoID09PSAnLycgPyAnJyA6IGFzTm9CYXNlUGF0aH1gIHx8ICcvJyl9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgd2FzIHByZXZpb3VzbHkgYSByZXR1cm4gYnV0IHdhcyByZW1vdmVkIGluIGZhdm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvZiBiZXR0ZXIgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdpdGggcmVnZW5lcmF0b3IgcnVudGltZVxuICAgICAgICAgICAgICAgICAgICAgICAgZGlkTmF2aWdhdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkaWROYXZpZ2F0ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtYXJraW5nIHJvdXRlIGNoYW5nZXMgYXMgYSBuYXZpZ2F0aW9uIHN0YXJ0IGVudHJ5XG4gICAgICAgICAgICBpZiAoX3V0aWxzLlNUKSB7XG4gICAgICAgICAgICAgICAgcGVyZm9ybWFuY2UubWFyaygncm91dGVDaGFuZ2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgc2hhbGxvdyA9ZmFsc2UgLCBzY3JvbGwgPXRydWUgIH0gPSBvcHRpb25zO1xuICAgICAgICAgICAgY29uc3Qgcm91dGVQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICBzaGFsbG93XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKF90aGlzLl9pbkZsaWdodFJvdXRlICYmIF90aGlzLmNsYykge1xuICAgICAgICAgICAgICAgIGlmICghaXNTc3IpIHtcbiAgICAgICAgICAgICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdyb3V0ZUNoYW5nZUVycm9yJywgYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpLCBfdGhpcy5faW5GbGlnaHRSb3V0ZSwgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF90aGlzLmNsYygpO1xuICAgICAgICAgICAgICAgIF90aGlzLmNsYyA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcyA9ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUoKDAsIF9oYXNCYXNlUGF0aCkuaGFzQmFzZVBhdGgoYXMpID8gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoYXMpIDogYXMsIG9wdGlvbnMubG9jYWxlLCBfdGhpcy5kZWZhdWx0TG9jYWxlKSk7XG4gICAgICAgICAgICBjb25zdCBjbGVhbmVkQXMgPSAoMCwgX3JlbW92ZUxvY2FsZSkucmVtb3ZlTG9jYWxlKCgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKGFzKSA/ICgwLCBfcmVtb3ZlQmFzZVBhdGgpLnJlbW92ZUJhc2VQYXRoKGFzKSA6IGFzLCBuZXh0U3RhdGUubG9jYWxlKTtcbiAgICAgICAgICAgIF90aGlzLl9pbkZsaWdodFJvdXRlID0gYXM7XG4gICAgICAgICAgICBjb25zdCBsb2NhbGVDaGFuZ2UgPSBwcmV2TG9jYWxlICE9PSBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgLy8gSWYgdGhlIHVybCBjaGFuZ2UgaXMgb25seSByZWxhdGVkIHRvIGEgaGFzaCBjaGFuZ2VcbiAgICAgICAgICAgIC8vIFdlIHNob3VsZCBub3QgcHJvY2VlZC4gV2Ugc2hvdWxkIG9ubHkgY2hhbmdlIHRoZSBzdGF0ZS5cbiAgICAgICAgICAgIGlmICghaXNRdWVyeVVwZGF0aW5nICYmIF90aGlzLm9ubHlBSGFzaENoYW5nZShjbGVhbmVkQXMpICYmICFsb2NhbGVDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBuZXh0U3RhdGUuYXNQYXRoID0gY2xlYW5lZEFzO1xuICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgnaGFzaENoYW5nZVN0YXJ0JywgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgICAgIC8vIFRPRE86IGRvIHdlIG5lZWQgdGhlIHJlc29sdmVkIGhyZWYgd2hlbiBvbmx5IGEgaGFzaCBjaGFuZ2U/XG4gICAgICAgICAgICAgICAgX3RoaXMuY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGw6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGlmIChzY3JvbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2Nyb2xsVG9IYXNoKGNsZWFuZWRBcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIF90aGlzLnNldChuZXh0U3RhdGUsIF90aGlzLmNvbXBvbmVudHNbbmV4dFN0YXRlLnJvdXRlXSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoMCwgX2lzRXJyb3IpLmRlZmF1bHQoZXJyKSAmJiBlcnIuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlRXJyb3InLCBlcnIsIGNsZWFuZWRBcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ2hhc2hDaGFuZ2VDb21wbGV0ZScsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBwYXJzZWQgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwodXJsKTtcbiAgICAgICAgICAgIGxldCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSBwYXJzZWQ7XG4gICAgICAgICAgICAvLyBUaGUgYnVpbGQgbWFuaWZlc3QgbmVlZHMgdG8gYmUgbG9hZGVkIGJlZm9yZSBhdXRvLXN0YXRpYyBkeW5hbWljIHBhZ2VzXG4gICAgICAgICAgICAvLyBnZXQgdGhlaXIgcXVlcnkgcGFyYW1ldGVycyB0byBhbGxvdyBlbnN1cmluZyB0aGV5IGNhbiBiZSBwYXJzZWQgcHJvcGVybHlcbiAgICAgICAgICAgIC8vIHdoZW4gcmV3cml0dGVuIHRvXG4gICAgICAgICAgICBsZXQgcGFnZXMsIHJld3JpdGVzO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBbcGFnZXMsIHsgX19yZXdyaXRlczogcmV3cml0ZXMgIH1dID0geWllbGQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5wYWdlTG9hZGVyLmdldFBhZ2VMaXN0KCksXG4gICAgICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLmdldENsaWVudEJ1aWxkTWFuaWZlc3QoKSxcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMucGFnZUxvYWRlci5nZXRNaWRkbGV3YXJlKCksIFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgd2UgZmFpbCB0byByZXNvbHZlIHRoZSBwYWdlIGxpc3Qgb3IgY2xpZW50LWJ1aWxkIG1hbmlmZXN0LCB3ZSBtdXN0XG4gICAgICAgICAgICAgICAgLy8gZG8gYSBzZXJ2ZXItc2lkZSB0cmFuc2l0aW9uOlxuICAgICAgICAgICAgICAgIGhhbmRsZUhhcmROYXZpZ2F0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIGFza2VkIHRvIGNoYW5nZSB0aGUgY3VycmVudCBVUkwgd2Ugc2hvdWxkIHJlbG9hZCB0aGUgY3VycmVudCBwYWdlXG4gICAgICAgICAgICAvLyAobm90IGxvY2F0aW9uLnJlbG9hZCgpIGJ1dCByZWxvYWQgZ2V0SW5pdGlhbFByb3BzIGFuZCBvdGhlciBOZXh0LmpzIHN0dWZmcylcbiAgICAgICAgICAgIC8vIFdlIGFsc28gbmVlZCB0byBzZXQgdGhlIG1ldGhvZCA9IHJlcGxhY2VTdGF0ZSBhbHdheXNcbiAgICAgICAgICAgIC8vIGFzIHRoaXMgc2hvdWxkIG5vdCBnbyBpbnRvIHRoZSBoaXN0b3J5IChUaGF0J3MgaG93IGJyb3dzZXJzIHdvcmspXG4gICAgICAgICAgICAvLyBXZSBzaG91bGQgY29tcGFyZSB0aGUgbmV3IGFzUGF0aCB0byB0aGUgY3VycmVudCBhc1BhdGgsIG5vdCB0aGUgdXJsXG4gICAgICAgICAgICBpZiAoIV90aGlzLnVybElzTmV3KGNsZWFuZWRBcykgJiYgIWxvY2FsZUNoYW5nZSkge1xuICAgICAgICAgICAgICAgIG1ldGhvZCA9ICdyZXBsYWNlU3RhdGUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gd2UgbmVlZCB0byByZXNvbHZlIHRoZSBhcyB2YWx1ZSB1c2luZyByZXdyaXRlcyBmb3IgZHluYW1pYyBTU0dcbiAgICAgICAgICAgIC8vIHBhZ2VzIHRvIGFsbG93IGJ1aWxkaW5nIHRoZSBkYXRhIFVSTCBjb3JyZWN0bHlcbiAgICAgICAgICAgIGxldCByZXNvbHZlZEFzID0gYXM7XG4gICAgICAgICAgICAvLyB1cmwgYW5kIGFzIHNob3VsZCBhbHdheXMgYmUgcHJlZml4ZWQgd2l0aCBiYXNlUGF0aCBieSB0aGlzXG4gICAgICAgICAgICAvLyBwb2ludCBieSBlaXRoZXIgbmV4dC9saW5rIG9yIHJvdXRlci5wdXNoL3JlcGxhY2Ugc28gc3RyaXAgdGhlXG4gICAgICAgICAgICAvLyBiYXNlUGF0aCBmcm9tIHRoZSBwYXRobmFtZSB0byBtYXRjaCB0aGUgcGFnZXMgZGlyIDEtdG8tMVxuICAgICAgICAgICAgcGF0aG5hbWUgPSBwYXRobmFtZSA/ICgwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaCgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChwYXRobmFtZSkpIDogcGF0aG5hbWU7XG4gICAgICAgICAgICBsZXQgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkQXNQYXRobmFtZSA9IGFzLnN0YXJ0c1dpdGgoJy8nKSAmJiAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwoYXMpLnBhdGhuYW1lO1xuICAgICAgICAgICAgY29uc3QgaXNNaWRkbGV3YXJlUmV3cml0ZSA9ICEhKHBhcnNlZEFzUGF0aG5hbWUgJiYgcm91dGUgIT09IHBhcnNlZEFzUGF0aG5hbWUgJiYgKCEoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocm91dGUpIHx8ICEoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKCgwLCBfcm91dGVSZWdleCkuZ2V0Um91dGVSZWdleChyb3V0ZSkpKHBhcnNlZEFzUGF0aG5hbWUpKSk7XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBhdHRlbXB0IHJlc29sdmUgYXNQYXRoIHdoZW4gd2UgbmVlZCB0byBleGVjdXRlXG4gICAgICAgICAgICAvLyBtaWRkbGV3YXJlIGFzIHRoZSByZXNvbHZpbmcgd2lsbCBvY2N1ciBzZXJ2ZXItc2lkZVxuICAgICAgICAgICAgY29uc3QgaXNNaWRkbGV3YXJlTWF0Y2ggPSAhb3B0aW9ucy5zaGFsbG93ICYmICh5aWVsZCBtYXRjaGVzTWlkZGxld2FyZSh7XG4gICAgICAgICAgICAgICAgYXNQYXRoOiBhcyxcbiAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgaWYgKGlzUXVlcnlVcGRhdGluZyAmJiBpc01pZGRsZXdhcmVNYXRjaCkge1xuICAgICAgICAgICAgICAgIHNob3VsZFJlc29sdmVIcmVmID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2hvdWxkUmVzb2x2ZUhyZWYgJiYgcGF0aG5hbWUgIT09ICcvX2Vycm9yJykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuX3Nob3VsZFJlc29sdmVIcmVmID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0hBU19SRVdSSVRFUyAmJiBhcy5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmV3cml0ZXNSZXN1bHQgPSAoMCwgX3Jlc29sdmVSZXdyaXRlcykuZGVmYXVsdCgoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCgoMCwgX2FkZExvY2FsZSkuYWRkTG9jYWxlKGNsZWFuZWRBcywgbmV4dFN0YXRlLmxvY2FsZSksIHRydWUpLCBwYWdlcywgcmV3cml0ZXMsIHF1ZXJ5LCAocCk9PnJlc29sdmVEeW5hbWljUm91dGUocCwgcGFnZXMpLCBfdGhpcy5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJld3JpdGVzUmVzdWx0LmV4dGVybmFsRGVzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlSGFyZE5hdmlnYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogYXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzID0gcmV3cml0ZXNSZXN1bHQuYXNQYXRoO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXdyaXRlc1Jlc3VsdC5tYXRjaGVkUGFnZSAmJiByZXdyaXRlc1Jlc3VsdC5yZXNvbHZlZEhyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgZGlyZWN0bHkgbWF0Y2hlcyBhIHBhZ2Ugd2UgbmVlZCB0byB1cGRhdGUgdGhlIGhyZWYgdG9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFsbG93IHRoZSBjb3JyZWN0IHBhZ2UgY2h1bmsgdG8gYmUgbG9hZGVkXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSA9IHJld3JpdGVzUmVzdWx0LnJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHBhdGhuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNNaWRkbGV3YXJlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHJlc29sdmVEeW5hbWljUm91dGUocGF0aG5hbWUsIHBhZ2VzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlZC5wYXRobmFtZSAhPT0gcGF0aG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgocGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc01pZGRsZXdhcmVNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc0xvY2FsVVJMKGFzKSkge1xuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBocmVmOiBcIiR7dXJsfVwiIGFuZCBhczogXCIke2FzfVwiLCByZWNlaXZlZCByZWxhdGl2ZSBocmVmIGFuZCBleHRlcm5hbCBhc2AgKyBgXFxuU2VlIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvaW52YWxpZC1yZWxhdGl2ZS11cmwtZXh0ZXJuYWwtYXNgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaGFuZGxlSGFyZE5hdmlnYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICB1cmw6IGFzLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzb2x2ZWRBcyA9ICgwLCBfcmVtb3ZlTG9jYWxlKS5yZW1vdmVMb2NhbGUoKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgocmVzb2x2ZWRBcyksIG5leHRTdGF0ZS5sb2NhbGUpO1xuICAgICAgICAgICAgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICAgICAgbGV0IHJvdXRlTWF0Y2ggPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUocm91dGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQXMgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwocmVzb2x2ZWRBcyk7XG4gICAgICAgICAgICAgICAgY29uc3QgYXNQYXRobmFtZSA9IHBhcnNlZEFzLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlUmVnZXggPSAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocm91dGUpO1xuICAgICAgICAgICAgICAgIHJvdXRlTWF0Y2ggPSAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXgpKGFzUGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNob3VsZEludGVycG9sYXRlID0gcm91dGUgPT09IGFzUGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgY29uc3QgaW50ZXJwb2xhdGVkQXMgPSBzaG91bGRJbnRlcnBvbGF0ZSA/IGludGVycG9sYXRlQXMocm91dGUsIGFzUGF0aG5hbWUsIHF1ZXJ5KSA6IHt9O1xuICAgICAgICAgICAgICAgIGlmICghcm91dGVNYXRjaCB8fCBzaG91bGRJbnRlcnBvbGF0ZSAmJiAhaW50ZXJwb2xhdGVkQXMucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1pc3NpbmdQYXJhbXMgPSBPYmplY3Qua2V5cyhyb3V0ZVJlZ2V4Lmdyb3VwcykuZmlsdGVyKChwYXJhbSk9PiFxdWVyeVtwYXJhbV0gJiYgIXJvdXRlUmVnZXguZ3JvdXBzW3BhcmFtXS5vcHRpb25hbCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtaXNzaW5nUGFyYW1zLmxlbmd0aCA+IDAgJiYgIWlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgJHtzaG91bGRJbnRlcnBvbGF0ZSA/IGBJbnRlcnBvbGF0aW5nIGhyZWZgIDogYE1pc21hdGNoaW5nIFxcYGFzXFxgIGFuZCBcXGBocmVmXFxgYH0gZmFpbGVkIHRvIG1hbnVhbGx5IHByb3ZpZGUgYCArIGB0aGUgcGFyYW1zOiAke21pc3NpbmdQYXJhbXMuam9pbignLCAnKX0gaW4gdGhlIFxcYGhyZWZcXGAncyBcXGBxdWVyeVxcYGApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKChzaG91bGRJbnRlcnBvbGF0ZSA/IGBUaGUgcHJvdmlkZWQgXFxgaHJlZlxcYCAoJHt1cmx9KSB2YWx1ZSBpcyBtaXNzaW5nIHF1ZXJ5IHZhbHVlcyAoJHttaXNzaW5nUGFyYW1zLmpvaW4oJywgJyl9KSB0byBiZSBpbnRlcnBvbGF0ZWQgcHJvcGVybHkuIGAgOiBgVGhlIHByb3ZpZGVkIFxcYGFzXFxgIHZhbHVlICgke2FzUGF0aG5hbWV9KSBpcyBpbmNvbXBhdGlibGUgd2l0aCB0aGUgXFxgaHJlZlxcYCB2YWx1ZSAoJHtyb3V0ZX0pLiBgKSArIGBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzLyR7c2hvdWxkSW50ZXJwb2xhdGUgPyAnaHJlZi1pbnRlcnBvbGF0aW9uLWZhaWxlZCcgOiAnaW5jb21wYXRpYmxlLWhyZWYtYXMnfWApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzaG91bGRJbnRlcnBvbGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBhcyA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihPYmplY3QuYXNzaWduKHt9LCBwYXJzZWRBcywge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IGludGVycG9sYXRlZEFzLnJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBvbWl0KHF1ZXJ5LCBpbnRlcnBvbGF0ZWRBcy5wYXJhbXMpXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBNZXJnZSBwYXJhbXMgaW50byBgcXVlcnlgLCBvdmVyd3JpdGluZyBhbnkgc3BlY2lmaWVkIGluIHNlYXJjaFxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHF1ZXJ5LCByb3V0ZU1hdGNoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzUXVlcnlVcGRhdGluZykge1xuICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VTdGFydCcsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlZjIsIHJlZjMsIHJlZjQ7XG4gICAgICAgICAgICAgICAgbGV0IHJvdXRlSW5mbyA9IHlpZWxkIF90aGlzLmdldFJvdXRlSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgICAgIGFzLFxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZVByb3BzLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgIGlzUHJldmlldzogbmV4dFN0YXRlLmlzUHJldmlldyxcbiAgICAgICAgICAgICAgICAgICAgaGFzTWlkZGxld2FyZTogaXNNaWRkbGV3YXJlTWF0Y2gsXG4gICAgICAgICAgICAgICAgICAgIHVuc3RhYmxlX3NraXBDbGllbnRDYWNoZTogb3B0aW9ucy51bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUsXG4gICAgICAgICAgICAgICAgICAgIGlzUXVlcnlVcGRhdGluZzogaXNRdWVyeVVwZGF0aW5nICYmICFfdGhpcy5pc0ZhbGxiYWNrLFxuICAgICAgICAgICAgICAgICAgICBpc01pZGRsZXdhcmVSZXdyaXRlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKCdyb3V0ZScgaW4gcm91dGVJbmZvICYmIGlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcm91dGVJbmZvLnJvdXRlIHx8IHJvdXRlO1xuICAgICAgICAgICAgICAgICAgICByb3V0ZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXJvdXRlUHJvcHMuc2hhbGxvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnkgPSBPYmplY3QuYXNzaWduKHt9LCByb3V0ZUluZm8ucXVlcnkgfHwge30sIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGVhbmVkUGFyc2VkUGF0aG5hbWUgPSAoMCwgX2hhc0Jhc2VQYXRoKS5oYXNCYXNlUGF0aChwYXJzZWQucGF0aG5hbWUpID8gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgocGFyc2VkLnBhdGhuYW1lKSA6IHBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJvdXRlTWF0Y2ggJiYgcGF0aG5hbWUgIT09IGNsZWFuZWRQYXJzZWRQYXRobmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXMocm91dGVNYXRjaCkuZm9yRWFjaCgoa2V5KT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3V0ZU1hdGNoICYmIHF1ZXJ5W2tleV0gPT09IHJvdXRlTWF0Y2hba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgcXVlcnlba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJlZml4ZWRBcyA9ICFyb3V0ZVByb3BzLnNoYWxsb3cgJiYgcm91dGVJbmZvLnJlc29sdmVkQXMgPyByb3V0ZUluZm8ucmVzb2x2ZWRBcyA6ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKCgwLCBfYWRkTG9jYWxlKS5hZGRMb2NhbGUobmV3IFVSTChhcywgbG9jYXRpb24uaHJlZikucGF0aG5hbWUsIG5leHRTdGF0ZS5sb2NhbGUpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXdyaXRlQXMgPSBwcmVmaXhlZEFzO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCgwLCBfaGFzQmFzZVBhdGgpLmhhc0Jhc2VQYXRoKHJld3JpdGVBcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXdyaXRlQXMgPSAoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChyZXdyaXRlQXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsb2NhbGVSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocmV3cml0ZUFzLCBfdGhpcy5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0U3RhdGUubG9jYWxlID0gbG9jYWxlUmVzdWx0LmRldGVjdGVkTG9jYWxlIHx8IG5leHRTdGF0ZS5sb2NhbGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV3cml0ZUFzID0gbG9jYWxlUmVzdWx0LnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgcm91dGVSZWdleCA9ICgwLCBfcm91dGVSZWdleCkuZ2V0Um91dGVSZWdleChwYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdXJSb3V0ZU1hdGNoID0gKDAsIF9yb3V0ZU1hdGNoZXIpLmdldFJvdXRlTWF0Y2hlcihyb3V0ZVJlZ2V4KShuZXcgVVJMKHJld3JpdGVBcywgbG9jYXRpb24uaHJlZikucGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1clJvdXRlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHF1ZXJ5LCBjdXJSb3V0ZU1hdGNoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgcm91dGVJbmZvIGJyaW5ncyBhIHJlZGlyZWN0IHdlIHNpbXBseSBhcHBseSBpdC5cbiAgICAgICAgICAgICAgICBpZiAoJ3R5cGUnIGluIHJvdXRlSW5mbykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVJbmZvLnR5cGUgPT09ICdyZWRpcmVjdC1pbnRlcm5hbCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jaGFuZ2UobWV0aG9kLCByb3V0ZUluZm8ubmV3VXJsLCByb3V0ZUluZm8ubmV3QXMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlSGFyZE5hdmlnYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogcm91dGVJbmZvLmRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCgpPT57fSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gcm91dGVJbmZvLkNvbXBvbmVudDtcbiAgICAgICAgICAgICAgICBpZiAoY29tcG9uZW50ICYmIGNvbXBvbmVudC51bnN0YWJsZV9zY3JpcHRMb2FkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NyaXB0cyA9IFtdLmNvbmNhdChjb21wb25lbnQudW5zdGFibGVfc2NyaXB0TG9hZGVyKCkpO1xuICAgICAgICAgICAgICAgICAgICBzY3JpcHRzLmZvckVhY2goKHNjcmlwdCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfc2NyaXB0KS5oYW5kbGVDbGllbnRTY3JpcHRMb2FkKHNjcmlwdC5wcm9wcyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBoYW5kbGUgcmVkaXJlY3Qgb24gY2xpZW50LXRyYW5zaXRpb25cbiAgICAgICAgICAgICAgICBpZiAoKHJvdXRlSW5mby5fX05fU1NHIHx8IHJvdXRlSW5mby5fX05fU1NQKSAmJiByb3V0ZUluZm8ucHJvcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJvdXRlSW5mby5wcm9wcy5wYWdlUHJvcHMgJiYgcm91dGVJbmZvLnByb3BzLnBhZ2VQcm9wcy5fX05fUkVESVJFQ1QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFVzZSB0aGUgZGVzdGluYXRpb24gZnJvbSByZWRpcmVjdCB3aXRob3V0IGFkZGluZyBsb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbiA9IHJvdXRlSW5mby5wcm9wcy5wYWdlUHJvcHMuX19OX1JFRElSRUNUO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgZGVzdGluYXRpb24gaXMgaW50ZXJuYWwgKHJlc29sdmVzIHRvIGEgcGFnZSkgYW5kIGF0dGVtcHRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsaWVudC1uYXZpZ2F0aW9uIGlmIGl0IGlzIGZhbGxpbmcgYmFjayB0byBoYXJkIG5hdmlnYXRpb24gaWZcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0J3Mgbm90XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVzdGluYXRpb24uc3RhcnRzV2l0aCgnLycpICYmIHJvdXRlSW5mby5wcm9wcy5wYWdlUHJvcHMuX19OX1JFRElSRUNUX0JBU0VfUEFUSCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJzZWRIcmVmID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKGRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRIcmVmLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXJzZWRIcmVmLnBhdGhuYW1lLCBwYWdlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyB1cmw6IG5ld1VybCAsIGFzOiBuZXdBcyAgfSA9IHByZXBhcmVVcmxBcyhfdGhpcywgZGVzdGluYXRpb24sIGRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuY2hhbmdlKG1ldGhvZCwgbmV3VXJsLCBuZXdBcywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVIYXJkTmF2aWdhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBkZXN0aW5hdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgoKT0+e30pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5pc1ByZXZpZXcgPSAhIXJvdXRlSW5mby5wcm9wcy5fX05fUFJFVklFVztcbiAgICAgICAgICAgICAgICAgICAgLy8gaGFuZGxlIFNTRyBkYXRhIDQwNFxuICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVJbmZvLnByb3BzLm5vdEZvdW5kID09PSBTU0dfREFUQV9OT1RfRk9VTkQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBub3RGb3VuZFJvdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCBfdGhpcy5mZXRjaENvbXBvbmVudCgnLzQwNCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEZvdW5kUm91dGUgPSAnLzQwNCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90Rm91bmRSb3V0ZSA9ICcvX2Vycm9yJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlSW5mbyA9IHlpZWxkIF90aGlzLmdldFJvdXRlSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGU6IG5vdEZvdW5kUm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IG5vdEZvdW5kUm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZVByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWxsb3c6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmV2aWV3OiBuZXh0U3RhdGUuaXNQcmV2aWV3XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgndHlwZScgaW4gcm91dGVJbmZvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG1pZGRsZXdhcmUgZWZmZWN0IG9uIC80MDRgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaXNRdWVyeVVwZGF0aW5nICYmIF90aGlzLnBhdGhuYW1lID09PSAnL19lcnJvcicgJiYgKChyZWYyID0gc2VsZi5fX05FWFRfREFUQV9fLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogKHJlZjMgPSByZWYyLnBhZ2VQcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZjMuc3RhdHVzQ29kZSkgPT09IDUwMCAmJiAoKHJlZjQgPSByb3V0ZUluZm8ucHJvcHMpID09IG51bGwgPyB2b2lkIDAgOiByZWY0LnBhZ2VQcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZW5zdXJlIHN0YXR1c0NvZGUgaXMgc3RpbGwgY29ycmVjdCBmb3Igc3RhdGljIDUwMCBwYWdlXG4gICAgICAgICAgICAgICAgICAgIC8vIHdoZW4gdXBkYXRpbmcgcXVlcnkgaW5mb3JtYXRpb25cbiAgICAgICAgICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzLnBhZ2VQcm9wcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgX3JvdXRlO1xuICAgICAgICAgICAgICAgIC8vIHNoYWxsb3cgcm91dGluZyBpcyBvbmx5IGFsbG93ZWQgZm9yIHNhbWUgcGFnZSBVUkwgY2hhbmdlcy5cbiAgICAgICAgICAgICAgICBjb25zdCBpc1ZhbGlkU2hhbGxvd1JvdXRlID0gb3B0aW9ucy5zaGFsbG93ICYmIG5leHRTdGF0ZS5yb3V0ZSA9PT0gKChfcm91dGUgPSByb3V0ZUluZm8ucm91dGUpICE9IG51bGwgPyBfcm91dGUgOiByb3V0ZSk7XG4gICAgICAgICAgICAgICAgdmFyIF9zY3JvbGw7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2hvdWxkU2Nyb2xsID0gKF9zY3JvbGwgPSBvcHRpb25zLnNjcm9sbCkgIT0gbnVsbCA/IF9zY3JvbGwgOiAhaXNRdWVyeVVwZGF0aW5nICYmICFpc1ZhbGlkU2hhbGxvd1JvdXRlO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc2V0U2Nyb2xsID0gc2hvdWxkU2Nyb2xsID8ge1xuICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICAgICAgfSA6IG51bGw7XG4gICAgICAgICAgICAgICAgY29uc3QgdXBjb21pbmdTY3JvbGxTdGF0ZSA9IGZvcmNlZFNjcm9sbCAhPSBudWxsID8gZm9yY2VkU2Nyb2xsIDogcmVzZXRTY3JvbGw7XG4gICAgICAgICAgICAgICAgLy8gdGhlIG5ldyBzdGF0ZSB0aGF0IHRoZSByb3V0ZXIgZ29ubmEgc2V0XG4gICAgICAgICAgICAgICAgY29uc3QgdXBjb21pbmdSb3V0ZXJTdGF0ZSA9IF9leHRlbmRzKHt9LCBuZXh0U3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgcm91dGUsXG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgYXNQYXRoOiBjbGVhbmVkQXMsXG4gICAgICAgICAgICAgICAgICAgIGlzRmFsbGJhY2s6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgLy8gV2hlbiB0aGUgcGFnZSBiZWluZyByZW5kZXJlZCBpcyB0aGUgNDA0IHBhZ2UsIHdlIHNob3VsZCBvbmx5IHVwZGF0ZSB0aGVcbiAgICAgICAgICAgICAgICAvLyBxdWVyeSBwYXJhbWV0ZXJzLiBSb3V0ZSBjaGFuZ2VzIGhlcmUgbWlnaHQgYWRkIHRoZSBiYXNlUGF0aCB3aGVuIGl0XG4gICAgICAgICAgICAgICAgLy8gd2Fzbid0IG9yaWdpbmFsbHkgcHJlc2VudC4gVGhpcyBpcyBhbHNvIHdoeSB0aGlzIGJsb2NrIGlzIGJlZm9yZSB0aGVcbiAgICAgICAgICAgICAgICAvLyBiZWxvdyBgY2hhbmdlU3RhdGVgIGNhbGwgd2hpY2ggdXBkYXRlcyB0aGUgYnJvd3NlcidzIGhpc3RvcnkgKGNoYW5naW5nXG4gICAgICAgICAgICAgICAgLy8gdGhlIFVSTCkuXG4gICAgICAgICAgICAgICAgaWYgKGlzUXVlcnlVcGRhdGluZyAmJiAoX3RoaXMucGF0aG5hbWUgPT09ICcvNDA0JyB8fCBfdGhpcy5wYXRobmFtZSA9PT0gJy9fZXJyb3InKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVmNSwgcmVmNiwgcmVmNztcbiAgICAgICAgICAgICAgICAgICAgcm91dGVJbmZvID0geWllbGQgX3RoaXMuZ2V0Um91dGVJbmZvKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlOiBfdGhpcy5wYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBfdGhpcy5wYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgYXMsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVQcm9wczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWxsb3c6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlOiBuZXh0U3RhdGUubG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmV2aWV3OiBuZXh0U3RhdGUuaXNQcmV2aWV3XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoJ3R5cGUnIGluIHJvdXRlSW5mbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG1pZGRsZXdhcmUgZWZmZWN0IG9uICR7X3RoaXMucGF0aG5hbWV9YCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLnBhdGhuYW1lID09PSAnL19lcnJvcicgJiYgKChyZWY1ID0gc2VsZi5fX05FWFRfREFUQV9fLnByb3BzKSA9PSBudWxsID8gdm9pZCAwIDogKHJlZjYgPSByZWY1LnBhZ2VQcm9wcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZjYuc3RhdHVzQ29kZSkgPT09IDUwMCAmJiAoKHJlZjcgPSByb3V0ZUluZm8ucHJvcHMpID09IG51bGwgPyB2b2lkIDAgOiByZWY3LnBhZ2VQcm9wcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVuc3VyZSBzdGF0dXNDb2RlIGlzIHN0aWxsIGNvcnJlY3QgZm9yIHN0YXRpYyA1MDAgcGFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2hlbiB1cGRhdGluZyBxdWVyeSBpbmZvcm1hdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzLnBhZ2VQcm9wcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCBfdGhpcy5zZXQodXBjb21pbmdSb3V0ZXJTdGF0ZSwgcm91dGVJbmZvLCB1cGNvbWluZ1Njcm9sbFN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDAsIF9pc0Vycm9yKS5kZWZhdWx0KGVycikgJiYgZXJyLmNhbmNlbGxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIGVyciwgY2xlYW5lZEFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdiZWZvcmVIaXN0b3J5Q2hhbmdlJywgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgICAgIF90aGlzLmNoYW5nZVN0YXRlKG1ldGhvZCwgdXJsLCBhcywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgLy8gZm9yIHF1ZXJ5IHVwZGF0ZXMgd2UgY2FuIHNraXAgaXQgaWYgdGhlIHN0YXRlIGlzIHVuY2hhbmdlZCBhbmQgd2UgZG9uJ3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHNjcm9sbFxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9pc3N1ZXMvMzcxMzlcbiAgICAgICAgICAgICAgICBjb25zdCBjYW5Ta2lwVXBkYXRpbmcgPSBpc1F1ZXJ5VXBkYXRpbmcgJiYgIXVwY29taW5nU2Nyb2xsU3RhdGUgJiYgIXJlYWR5U3RhdGVDaGFuZ2UgJiYgIWxvY2FsZUNoYW5nZSAmJiAoMCwgX2NvbXBhcmVTdGF0ZXMpLmNvbXBhcmVSb3V0ZXJTdGF0ZXModXBjb21pbmdSb3V0ZXJTdGF0ZSwgX3RoaXMuc3RhdGUpO1xuICAgICAgICAgICAgICAgIGlmICghY2FuU2tpcFVwZGF0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCBfdGhpcy5zZXQodXBjb21pbmdSb3V0ZXJTdGF0ZSwgcm91dGVJbmZvLCB1cGNvbWluZ1Njcm9sbFN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuY2FuY2VsbGVkKSByb3V0ZUluZm8uZXJyb3IgPSByb3V0ZUluZm8uZXJyb3IgfHwgZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVJbmZvLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzUXVlcnlVcGRhdGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIHJvdXRlSW5mby5lcnJvciwgY2xlYW5lZEFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IHJvdXRlSW5mby5lcnJvcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRTdGF0ZS5sb2NhbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubGFuZyA9IG5leHRTdGF0ZS5sb2NhbGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1F1ZXJ5VXBkYXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VDb21wbGV0ZScsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBBIGhhc2ggbWFyayAjIGlzIHRoZSBvcHRpb25hbCBsYXN0IHBhcnQgb2YgYSBVUkxcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzaFJlZ2V4ID0gLyMuKyQvO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkU2Nyb2xsICYmIGhhc2hSZWdleC50ZXN0KGFzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2Nyb2xsVG9IYXNoKGFzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycjEpIHtcbiAgICAgICAgICAgICAgICBpZiAoKDAsIF9pc0Vycm9yKS5kZWZhdWx0KGVycjEpICYmIGVycjEuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93Lmhpc3RvcnkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgV2FybmluZzogd2luZG93Lmhpc3RvcnkgaXMgbm90IGF2YWlsYWJsZS5gKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5oaXN0b3J5W21ldGhvZF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgV2FybmluZzogd2luZG93Lmhpc3RvcnkuJHttZXRob2R9IGlzIG5vdCBhdmFpbGFibGVgKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1ldGhvZCAhPT0gJ3B1c2hTdGF0ZScgfHwgKDAsIF91dGlscykuZ2V0VVJMKCkgIT09IGFzKSB7XG4gICAgICAgICAgICB0aGlzLl9zaGFsbG93ID0gb3B0aW9ucy5zaGFsbG93O1xuICAgICAgICAgICAgd2luZG93Lmhpc3RvcnlbbWV0aG9kXSh7XG4gICAgICAgICAgICAgICAgdXJsLFxuICAgICAgICAgICAgICAgIGFzLFxuICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgX19OOiB0cnVlLFxuICAgICAgICAgICAgICAgIGtleTogdGhpcy5fa2V5ID0gbWV0aG9kICE9PSAncHVzaFN0YXRlJyA/IHRoaXMuX2tleSA6IGNyZWF0ZUtleSgpXG4gICAgICAgICAgICB9LCAvLyBNb3N0IGJyb3dzZXJzIGN1cnJlbnRseSBpZ25vcmVzIHRoaXMgcGFyYW1ldGVyLCBhbHRob3VnaCB0aGV5IG1heSB1c2UgaXQgaW4gdGhlIGZ1dHVyZS5cbiAgICAgICAgICAgIC8vIFBhc3NpbmcgdGhlIGVtcHR5IHN0cmluZyBoZXJlIHNob3VsZCBiZSBzYWZlIGFnYWluc3QgZnV0dXJlIGNoYW5nZXMgdG8gdGhlIG1ldGhvZC5cbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IaXN0b3J5L3JlcGxhY2VTdGF0ZVxuICAgICAgICAgICAgJycsIGFzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVSb3V0ZUluZm9FcnJvcihlcnIsIHBhdGhuYW1lLCBxdWVyeSwgYXMsIHJvdXRlUHJvcHMsIGxvYWRFcnJvckZhaWwpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIF9hc3luY190b19nZW5lcmF0b3IoZnVuY3Rpb24qKCkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgaWYgKGVyci5jYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBidWJibGUgdXAgY2FuY2VsbGF0aW9uIGVycm9yc1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoMCwgX3JvdXRlTG9hZGVyKS5pc0Fzc2V0RXJyb3IoZXJyKSB8fCBsb2FkRXJyb3JGYWlsKSB7XG4gICAgICAgICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdyb3V0ZUNoYW5nZUVycm9yJywgZXJyLCBhcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICAgICAgLy8gSWYgd2UgY2FuJ3QgbG9hZCB0aGUgcGFnZSBpdCBjb3VsZCBiZSBvbmUgb2YgZm9sbG93aW5nIHJlYXNvbnNcbiAgICAgICAgICAgICAgICAvLyAgMS4gUGFnZSBkb2Vzbid0IGV4aXN0c1xuICAgICAgICAgICAgICAgIC8vICAyLiBQYWdlIGRvZXMgZXhpc3QgaW4gYSBkaWZmZXJlbnQgem9uZVxuICAgICAgICAgICAgICAgIC8vICAzLiBJbnRlcm5hbCBlcnJvciB3aGlsZSBsb2FkaW5nIHRoZSBwYWdlXG4gICAgICAgICAgICAgICAgLy8gU28sIGRvaW5nIGEgaGFyZCByZWxvYWQgaXMgdGhlIHByb3BlciB3YXkgdG8gZGVhbCB3aXRoIHRoaXMuXG4gICAgICAgICAgICAgICAgaGFuZGxlSGFyZE5hdmlnYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICB1cmw6IGFzLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgLy8gQ2hhbmdpbmcgdGhlIFVSTCBkb2Vzbid0IGJsb2NrIGV4ZWN1dGluZyB0aGUgY3VycmVudCBjb2RlIHBhdGguXG4gICAgICAgICAgICAgICAgLy8gU28gbGV0J3MgdGhyb3cgYSBjYW5jZWxsYXRpb24gZXJyb3Igc3RvcCB0aGUgcm91dGluZyBsb2dpYy5cbiAgICAgICAgICAgICAgICB0aHJvdyBidWlsZENhbmNlbGxhdGlvbkVycm9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBwcm9wcztcbiAgICAgICAgICAgICAgICBjb25zdCB7IHBhZ2U6IENvbXBvbmVudCAsIHN0eWxlU2hlZXRzICB9ID0geWllbGQgX3RoaXMuZmV0Y2hDb21wb25lbnQoJy9fZXJyb3InKTtcbiAgICAgICAgICAgICAgICBjb25zdCByb3V0ZUluZm8gPSB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzLFxuICAgICAgICAgICAgICAgICAgICBDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlU2hlZXRzLFxuICAgICAgICAgICAgICAgICAgICBlcnIsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmICghcm91dGVJbmZvLnByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSB5aWVsZCBfdGhpcy5nZXRJbml0aWFsUHJvcHMoQ29tcG9uZW50LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZ2lwRXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBlcnJvciBwYWdlIGBnZXRJbml0aWFsUHJvcHNgOiAnLCBnaXBFcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzID0ge307XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlSW5mbztcbiAgICAgICAgICAgIH0gY2F0Y2ggKHJvdXRlSW5mb0Vycikge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVSb3V0ZUluZm9FcnJvcigoMCwgX2lzRXJyb3IpLmRlZmF1bHQocm91dGVJbmZvRXJyKSA/IHJvdXRlSW5mb0VyciA6IG5ldyBFcnJvcihyb3V0ZUluZm9FcnIgKyAnJyksIHBhdGhuYW1lLCBxdWVyeSwgYXMsIHJvdXRlUHJvcHMsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBnZXRSb3V0ZUluZm8oeyByb3V0ZTogcmVxdWVzdGVkUm91dGUgLCBwYXRobmFtZSAsIHF1ZXJ5ICwgYXMgLCByZXNvbHZlZEFzICwgcm91dGVQcm9wcyAsIGxvY2FsZSAsIGhhc01pZGRsZXdhcmUgLCBpc1ByZXZpZXcgLCB1bnN0YWJsZV9za2lwQ2xpZW50Q2FjaGUgLCBpc1F1ZXJ5VXBkYXRpbmcgLCBpc01pZGRsZXdhcmVSZXdyaXRlICB9KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAqIFRoaXMgYHJvdXRlYCBiaW5kaW5nIGNhbiBjaGFuZ2UgaWYgdGhlcmUncyBhIHJld3JpdGVcbiAgICAgKiBzbyB3ZSBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCByZXF1ZXN0ZWQgcm91dGVcbiAgICAgKiBzbyB3ZSBjYW4gc3RvcmUgdGhlIGNhY2hlIGZvciBpdCBhbmQgYXZvaWQgcmUtcmVxdWVzdGluZyBldmVyeSB0aW1lXG4gICAgICogZm9yIHNoYWxsb3cgcm91dGluZyBwdXJwb3Nlcy5cbiAgICAgKi8gbGV0IHJvdXRlID0gcmVxdWVzdGVkUm91dGU7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciByZWYsIHJlZjgsIHJlZjksIHJlZjEwO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZUNhbmNlbGxlZCA9IGdldENhbmNlbGxlZEhhbmRsZXIoe1xuICAgICAgICAgICAgICAgICAgICByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiBfdGhpc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGxldCBleGlzdGluZ0luZm8gPSBfdGhpcy5jb21wb25lbnRzW3JvdXRlXTtcbiAgICAgICAgICAgICAgICBpZiAocm91dGVQcm9wcy5zaGFsbG93ICYmIGV4aXN0aW5nSW5mbyAmJiBfdGhpcy5yb3V0ZSA9PT0gcm91dGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nSW5mbztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGhhc01pZGRsZXdhcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdJbmZvID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgY2FjaGVkUm91dGVJbmZvID0gZXhpc3RpbmdJbmZvICYmICEoJ2luaXRpYWwnIGluIGV4aXN0aW5nSW5mbykgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcgPyBleGlzdGluZ0luZm8gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgY29uc3QgaXNCYWNrZ3JvdW5kID0gaXNRdWVyeVVwZGF0aW5nO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZldGNoTmV4dERhdGFQYXJhbXMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFIcmVmOiBfdGhpcy5wYWdlTG9hZGVyLmdldERhdGFIcmVmKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2tpcEludGVycG9sYXRpb246IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIGhhc01pZGRsZXdhcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGlzU2VydmVyUmVuZGVyOiBfdGhpcy5pc1NzcixcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VKU09OOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBpbmZsaWdodENhY2hlOiBpc0JhY2tncm91bmQgPyBfdGhpcy5zYmMgOiBfdGhpcy5zZGMsXG4gICAgICAgICAgICAgICAgICAgIHBlcnNpc3RDYWNoZTogIWlzUHJldmlldyxcbiAgICAgICAgICAgICAgICAgICAgaXNQcmVmZXRjaDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHVuc3RhYmxlX3NraXBDbGllbnRDYWNoZSxcbiAgICAgICAgICAgICAgICAgICAgaXNCYWNrZ3JvdW5kXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IGlzUXVlcnlVcGRhdGluZyAmJiAhaXNNaWRkbGV3YXJlUmV3cml0ZSA/IG51bGwgOiB5aWVsZCB3aXRoTWlkZGxld2FyZUVmZmVjdHMoe1xuICAgICAgICAgICAgICAgICAgICBmZXRjaERhdGE6ICgpPT5mZXRjaE5leHREYXRhKGZldGNoTmV4dERhdGFQYXJhbXMpLFxuICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXI6IF90aGlzXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycik9PntcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgZG9uJ3QgaGFyZCBlcnJvciBkdXJpbmcgcXVlcnkgdXBkYXRpbmdcbiAgICAgICAgICAgICAgICAgICAgLy8gYXMgaXQncyB1bi1uZWNlc3NhcnkgYW5kIGRvZXNuJ3QgbmVlZCB0byBiZSBmYXRhbFxuICAgICAgICAgICAgICAgICAgICAvLyB1bmxlc3MgaXQgaXMgYSBmYWxsYmFjayByb3V0ZSBhbmQgdGhlIHByb3BzIGNhbid0XG4gICAgICAgICAgICAgICAgICAgIC8vIGJlIGxvYWRlZFxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNRdWVyeVVwZGF0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzUXVlcnlVcGRhdGluZykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbjogc2VsZi5fX05FWFRfREFUQV9fLnByb3BzXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5qc29uID0gc2VsZi5fX05FWFRfREFUQV9fLnByb3BzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGhhbmRsZUNhbmNlbGxlZCgpO1xuICAgICAgICAgICAgICAgIGlmICgoZGF0YSA9PSBudWxsID8gdm9pZCAwIDogKHJlZiA9IGRhdGEuZWZmZWN0KSA9PSBudWxsID8gdm9pZCAwIDogcmVmLnR5cGUpID09PSAncmVkaXJlY3QtaW50ZXJuYWwnIHx8IChkYXRhID09IG51bGwgPyB2b2lkIDAgOiAocmVmOCA9IGRhdGEuZWZmZWN0KSA9PSBudWxsID8gdm9pZCAwIDogcmVmOC50eXBlKSA9PT0gJ3JlZGlyZWN0LWV4dGVybmFsJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5lZmZlY3Q7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgoZGF0YSA9PSBudWxsID8gdm9pZCAwIDogKHJlZjkgPSBkYXRhLmVmZmVjdCkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZjkudHlwZSkgPT09ICdyZXdyaXRlJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNvbHZlZFJvdXRlID0gKDAsIF9yZW1vdmVUcmFpbGluZ1NsYXNoKS5yZW1vdmVUcmFpbGluZ1NsYXNoKGRhdGEuZWZmZWN0LnJlc29sdmVkSHJlZik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhZ2VzID0geWllbGQgX3RoaXMucGFnZUxvYWRlci5nZXRQYWdlTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICAvLyBkdXJpbmcgcXVlcnkgdXBkYXRpbmcgdGhlIHBhZ2UgbXVzdCBtYXRjaCBhbHRob3VnaCBkdXJpbmdcbiAgICAgICAgICAgICAgICAgICAgLy8gY2xpZW50LXRyYW5zaXRpb24gYSByZWRpcmVjdCB0aGF0IGRvZXNuJ3QgbWF0Y2ggYSBwYWdlXG4gICAgICAgICAgICAgICAgICAgIC8vIGNhbiBiZSByZXR1cm5lZCBhbmQgdGhpcyBzaG91bGQgdHJpZ2dlciBhIGhhcmQgbmF2aWdhdGlvblxuICAgICAgICAgICAgICAgICAgICAvLyB3aGljaCBpcyB2YWxpZCBmb3IgaW5jcmVtZW50YWwgbWlncmF0aW9uXG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNRdWVyeVVwZGF0aW5nIHx8IHBhZ2VzLmluY2x1ZGVzKHJlc29sdmVkUm91dGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZSA9IHJlc29sdmVkUm91dGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSA9IGRhdGEuZWZmZWN0LnJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5ID0gX2V4dGVuZHMoe30sIHF1ZXJ5LCBkYXRhLmVmZmVjdC5wYXJzZWRBcy5xdWVyeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzID0gKDAsIF9yZW1vdmVCYXNlUGF0aCkucmVtb3ZlQmFzZVBhdGgoKDAsIF9ub3JtYWxpemVMb2NhbGVQYXRoKS5ub3JtYWxpemVMb2NhbGVQYXRoKGRhdGEuZWZmZWN0LnBhcnNlZEFzLnBhdGhuYW1lLCBfdGhpcy5sb2NhbGVzKS5wYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBhZ2FpbiB0aGUgY2FjaGUgd2l0aCB0aGUgbmV3IGRlc3RpbmF0aW9uLlxuICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdJbmZvID0gX3RoaXMuY29tcG9uZW50c1tyb3V0ZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocm91dGVQcm9wcy5zaGFsbG93ICYmIGV4aXN0aW5nSW5mbyAmJiBfdGhpcy5yb3V0ZSA9PT0gcm91dGUgJiYgIWhhc01pZGRsZXdhcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiB3ZSBoYXZlIGEgbWF0Y2ggd2l0aCB0aGUgY3VycmVudCByb3V0ZSBkdWUgdG8gcmV3cml0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSBjYW4gY29weSB0aGUgZXhpc3RpbmcgaW5mb3JtYXRpb24gdG8gdGhlIHJld3JpdHRlbiBvbmUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlbiwgd2UgcmV0dXJuIHRoZSBpbmZvcm1hdGlvbiBhbG9uZyB3aXRoIHRoZSBtYXRjaGVkIHJvdXRlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgZXhpc3RpbmdJbmZvLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCgwLCBfaXNBcGlSb3V0ZSkuaXNBUElSb3V0ZShyb3V0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlSGFyZE5hdmlnYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgoKT0+e30pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCByb3V0ZUluZm8gPSBjYWNoZWRSb3V0ZUluZm8gfHwgKHlpZWxkIF90aGlzLmZldGNoQ29tcG9uZW50KHJvdXRlKS50aGVuKChyZXMpPT4oe1xuICAgICAgICAgICAgICAgICAgICAgICAgQ29tcG9uZW50OiByZXMucGFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlU2hlZXRzOiByZXMuc3R5bGVTaGVldHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBfX05fU1NHOiByZXMubW9kLl9fTl9TU0csXG4gICAgICAgICAgICAgICAgICAgICAgICBfX05fU1NQOiByZXMubW9kLl9fTl9TU1BcbiAgICAgICAgICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGlzVmFsaWRFbGVtZW50VHlwZSAgfSA9IHJlcXVpcmUoJ25leHQvZGlzdC9jb21waWxlZC9yZWFjdC1pcycpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmFsaWRFbGVtZW50VHlwZShyb3V0ZUluZm8uQ29tcG9uZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgZGVmYXVsdCBleHBvcnQgaXMgbm90IGEgUmVhY3QgQ29tcG9uZW50IGluIHBhZ2U6IFwiJHtwYXRobmFtZX1cImApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHdhc0JhaWxlZFByZWZldGNoID0gZGF0YSA9PSBudWxsID8gdm9pZCAwIDogKHJlZjEwID0gZGF0YS5yZXNwb25zZSkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZjEwLmhlYWRlcnMuZ2V0KCd4LW1pZGRsZXdhcmUtc2tpcCcpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNob3VsZEZldGNoRGF0YSA9IHJvdXRlSW5mby5fX05fU1NHIHx8IHJvdXRlSW5mby5fX05fU1NQO1xuICAgICAgICAgICAgICAgIC8vIEZvciBub24tU1NHIHByZWZldGNoZXMgdGhhdCBiYWlsZWQgYmVmb3JlIHNlbmRpbmcgZGF0YVxuICAgICAgICAgICAgICAgIC8vIHdlIGNsZWFyIHRoZSBjYWNoZSB0byBmZXRjaCBmdWxsIHJlc3BvbnNlXG4gICAgICAgICAgICAgICAgaWYgKHdhc0JhaWxlZFByZWZldGNoICYmIChkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhLmRhdGFIcmVmKSkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMuc2RjW2RhdGEuZGF0YUhyZWZdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB7IHByb3BzICwgY2FjaGVLZXkgIH0gPSB5aWVsZCBfdGhpcy5fZ2V0RGF0YShfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZEZldGNoRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhLmpzb24pICYmICF3YXNCYWlsZWRQcmVmZXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlS2V5OiBkYXRhLmNhY2hlS2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wczogZGF0YS5qc29uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFIcmVmID0gKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuZGF0YUhyZWYpID8gZGF0YS5kYXRhSHJlZiA6IF90aGlzLnBhZ2VMb2FkZXIuZ2V0RGF0YUhyZWYoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzUGF0aDogcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmV0Y2hlZCA9IHlpZWxkIGZldGNoTmV4dERhdGEoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFIcmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU2VydmVyUmVuZGVyOiBfdGhpcy5pc1NzcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUpTT046IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5mbGlnaHRDYWNoZTogd2FzQmFpbGVkUHJlZmV0Y2ggPyB7fSA6IF90aGlzLnNkYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFpc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmVmZXRjaDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zdGFibGVfc2tpcENsaWVudENhY2hlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVLZXk6IGZldGNoZWQuY2FjaGVLZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHM6IGZldGNoZWQuanNvbiB8fCB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wczogeWllbGQgX3RoaXMuZ2V0SW5pdGlhbFByb3BzKHJvdXRlSW5mby5Db21wb25lbnQsIC8vIHdlIHByb3ZpZGUgQXBwVHJlZSBsYXRlciBzbyB0aGlzIG5lZWRzIHRvIGJlIGBhbnlgXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNQYXRoOiBhcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlczogX3RoaXMubG9jYWxlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0TG9jYWxlOiBfdGhpcy5kZWZhdWx0TG9jYWxlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAvLyBPbmx5IGJ1c3QgdGhlIGRhdGEgY2FjaGUgZm9yIFNTUCByb3V0ZXMgYWx0aG91Z2hcbiAgICAgICAgICAgICAgICAvLyBtaWRkbGV3YXJlIGNhbiBza2lwIGNhY2hlIHBlciByZXF1ZXN0IHdpdGhcbiAgICAgICAgICAgICAgICAvLyB4LW1pZGRsZXdhcmUtY2FjaGU6IG5vLWNhY2hlIGFzIHdlbGxcbiAgICAgICAgICAgICAgICBpZiAocm91dGVJbmZvLl9fTl9TU1AgJiYgZmV0Y2hOZXh0RGF0YVBhcmFtcy5kYXRhSHJlZiAmJiBjYWNoZUtleSkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMuc2RjW2NhY2hlS2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gd2Uga2ljayBvZmYgYSBIRUFEIHJlcXVlc3QgaW4gdGhlIGJhY2tncm91bmRcbiAgICAgICAgICAgICAgICAvLyB3aGVuIGEgbm9uLXByZWZldGNoIHJlcXVlc3QgaXMgbWFkZSB0byBzaWduYWwgcmV2YWxpZGF0aW9uXG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pc1ByZXZpZXcgJiYgcm91dGVJbmZvLl9fTl9TU0cgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcgJiYgIWlzUXVlcnlVcGRhdGluZykge1xuICAgICAgICAgICAgICAgICAgICBmZXRjaE5leHREYXRhKE9iamVjdC5hc3NpZ24oe30sIGZldGNoTmV4dERhdGFQYXJhbXMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQmFja2dyb3VuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3RDYWNoZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZsaWdodENhY2hlOiBfdGhpcy5zYmNcbiAgICAgICAgICAgICAgICAgICAgfSkpLmNhdGNoKCgpPT57fSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByb3BzLnBhZ2VQcm9wcyA9IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLnBhZ2VQcm9wcyk7XG4gICAgICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzID0gcHJvcHM7XG4gICAgICAgICAgICAgICAgcm91dGVJbmZvLnJvdXRlID0gcm91dGU7XG4gICAgICAgICAgICAgICAgcm91dGVJbmZvLnF1ZXJ5ID0gcXVlcnk7XG4gICAgICAgICAgICAgICAgcm91dGVJbmZvLnJlc29sdmVkQXMgPSByZXNvbHZlZEFzO1xuICAgICAgICAgICAgICAgIF90aGlzLmNvbXBvbmVudHNbcm91dGVdID0gcm91dGVJbmZvO1xuICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZUluZm87XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaGFuZGxlUm91dGVJbmZvRXJyb3IoKDAsIF9pc0Vycm9yKS5nZXRQcm9wZXJFcnJvcihlcnIpLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgc2V0KHN0YXRlLCBkYXRhLCByZXNldFNjcm9sbCkge1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICAgIHJldHVybiB0aGlzLnN1YihkYXRhLCB0aGlzLmNvbXBvbmVudHNbJy9fYXBwJ10uQ29tcG9uZW50LCByZXNldFNjcm9sbCk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBDYWxsYmFjayB0byBleGVjdXRlIGJlZm9yZSByZXBsYWNpbmcgcm91dGVyIHN0YXRlXG4gICAqIEBwYXJhbSBjYiBjYWxsYmFjayB0byBiZSBleGVjdXRlZFxuICAgKi8gYmVmb3JlUG9wU3RhdGUoY2IpIHtcbiAgICAgICAgdGhpcy5fYnBzID0gY2I7XG4gICAgfVxuICAgIG9ubHlBSGFzaENoYW5nZShhcykge1xuICAgICAgICBpZiAoIXRoaXMuYXNQYXRoKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIGNvbnN0IFtvbGRVcmxOb0hhc2gsIG9sZEhhc2hdID0gdGhpcy5hc1BhdGguc3BsaXQoJyMnKTtcbiAgICAgICAgY29uc3QgW25ld1VybE5vSGFzaCwgbmV3SGFzaF0gPSBhcy5zcGxpdCgnIycpO1xuICAgICAgICAvLyBNYWtlcyBzdXJlIHdlIHNjcm9sbCB0byB0aGUgcHJvdmlkZWQgaGFzaCBpZiB0aGUgdXJsL2hhc2ggYXJlIHRoZSBzYW1lXG4gICAgICAgIGlmIChuZXdIYXNoICYmIG9sZFVybE5vSGFzaCA9PT0gbmV3VXJsTm9IYXNoICYmIG9sZEhhc2ggPT09IG5ld0hhc2gpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZSB1cmxzIGFyZSBjaGFuZ2UsIHRoZXJlJ3MgbW9yZSB0aGFuIGEgaGFzaCBjaGFuZ2VcbiAgICAgICAgaWYgKG9sZFVybE5vSGFzaCAhPT0gbmV3VXJsTm9IYXNoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIGhhc2ggaGFzIGNoYW5nZWQsIHRoZW4gaXQncyBhIGhhc2ggb25seSBjaGFuZ2UuXG4gICAgICAgIC8vIFRoaXMgY2hlY2sgaXMgbmVjZXNzYXJ5IHRvIGhhbmRsZSBib3RoIHRoZSBlbnRlciBhbmRcbiAgICAgICAgLy8gbGVhdmUgaGFzaCA9PT0gJycgY2FzZXMuIFRoZSBpZGVudGl0eSBjYXNlIGZhbGxzIHRocm91Z2hcbiAgICAgICAgLy8gYW5kIGlzIHRyZWF0ZWQgYXMgYSBuZXh0IHJlbG9hZC5cbiAgICAgICAgcmV0dXJuIG9sZEhhc2ggIT09IG5ld0hhc2g7XG4gICAgfVxuICAgIHNjcm9sbFRvSGFzaChhcykge1xuICAgICAgICBjb25zdCBbLCBoYXNoID0gJyddID0gYXMuc3BsaXQoJyMnKTtcbiAgICAgICAgLy8gU2Nyb2xsIHRvIHRvcCBpZiB0aGUgaGFzaCBpcyBqdXN0IGAjYCB3aXRoIG5vIHZhbHVlIG9yIGAjdG9wYFxuICAgICAgICAvLyBUbyBtaXJyb3IgYnJvd3NlcnNcbiAgICAgICAgaWYgKGhhc2ggPT09ICcnIHx8IGhhc2ggPT09ICd0b3AnKSB7XG4gICAgICAgICAgICBoYW5kbGVTbW9vdGhTY3JvbGwoKCk9PndpbmRvdy5zY3JvbGxUbygwLCAwKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gRGVjb2RlIGhhc2ggdG8gbWFrZSBub24tbGF0aW4gYW5jaG9yIHdvcmtzLlxuICAgICAgICBjb25zdCByYXdIYXNoID0gZGVjb2RlVVJJQ29tcG9uZW50KGhhc2gpO1xuICAgICAgICAvLyBGaXJzdCB3ZSBjaGVjayBpZiB0aGUgZWxlbWVudCBieSBpZCBpcyBmb3VuZFxuICAgICAgICBjb25zdCBpZEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocmF3SGFzaCk7XG4gICAgICAgIGlmIChpZEVsKSB7XG4gICAgICAgICAgICBoYW5kbGVTbW9vdGhTY3JvbGwoKCk9PmlkRWwuc2Nyb2xsSW50b1ZpZXcoKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlcmUncyBubyBlbGVtZW50IHdpdGggdGhlIGlkLCB3ZSBjaGVjayB0aGUgYG5hbWVgIHByb3BlcnR5XG4gICAgICAgIC8vIFRvIG1pcnJvciBicm93c2Vyc1xuICAgICAgICBjb25zdCBuYW1lRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZShyYXdIYXNoKVswXTtcbiAgICAgICAgaWYgKG5hbWVFbCkge1xuICAgICAgICAgICAgaGFuZGxlU21vb3RoU2Nyb2xsKCgpPT5uYW1lRWwuc2Nyb2xsSW50b1ZpZXcoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXJsSXNOZXcoYXNQYXRoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzUGF0aCAhPT0gYXNQYXRoO1xuICAgIH1cbiAgICAvKipcbiAgICogUHJlZmV0Y2ggcGFnZSBjb2RlLCB5b3UgbWF5IHdhaXQgZm9yIHRoZSBkYXRhIGR1cmluZyBwYWdlIHJlbmRlcmluZy5cbiAgICogVGhpcyBmZWF0dXJlIG9ubHkgd29ya3MgaW4gcHJvZHVjdGlvbiFcbiAgICogQHBhcmFtIHVybCB0aGUgaHJlZiBvZiBwcmVmZXRjaGVkIHBhZ2VcbiAgICogQHBhcmFtIGFzUGF0aCB0aGUgYXMgcGF0aCBvZiB0aGUgcHJlZmV0Y2hlZCBwYWdlXG4gICAqLyBwcmVmZXRjaCh1cmwsIGFzUGF0aCA9IHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgIC8vIFByZWZldGNoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gZGV2ZWxvcG1lbnQgbW9kZSBiZWNhdXNlIGl0IHdvdWxkIHRyaWdnZXIgb24tZGVtYW5kLWVudHJpZXNcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICgwLCBfaXNCb3QpLmlzQm90KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KSkge1xuICAgICAgICAgICAgICAgIC8vIE5vIHByZWZldGNoZXMgZm9yIGJvdHMgdGhhdCByZW5kZXIgdGhlIGxpbmsgc2luY2UgdGhleSBhcmUgdHlwaWNhbGx5IG5hdmlnYXRpbmdcbiAgICAgICAgICAgICAgICAvLyBsaW5rcyB2aWEgdGhlIGVxdWl2YWxlbnQgb2YgYSBoYXJkIG5hdmlnYXRpb24gYW5kIGhlbmNlIG5ldmVyIHV0aWxpemUgdGhlc2VcbiAgICAgICAgICAgICAgICAvLyBwcmVmZXRjaGVzLlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBwYXJzZWQgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwodXJsKTtcbiAgICAgICAgICAgIGxldCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSBwYXJzZWQ7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gcGF0aG5hbWU7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLmxvY2FsZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aG5hbWUsIF90aGlzLmxvY2FsZXMpLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBwYXRobmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZCk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwYXJzZWRBcyA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChhc1BhdGgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsb2NhbGVQYXRoUmVzdWx0ID0gKDAsIF9ub3JtYWxpemVMb2NhbGVQYXRoKS5ub3JtYWxpemVMb2NhbGVQYXRoKHBhcnNlZEFzLnBhdGhuYW1lLCBfdGhpcy5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkQXMucGF0aG5hbWUgPSBsb2NhbGVQYXRoUmVzdWx0LnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmxvY2FsZSA9IGxvY2FsZVBhdGhSZXN1bHQuZGV0ZWN0ZWRMb2NhbGUgfHwgX3RoaXMuZGVmYXVsdExvY2FsZTtcbiAgICAgICAgICAgICAgICAgICAgYXNQYXRoID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZEFzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYWdlcyA9IHlpZWxkIF90aGlzLnBhZ2VMb2FkZXIuZ2V0UGFnZUxpc3QoKTtcbiAgICAgICAgICAgIGxldCByZXNvbHZlZEFzID0gYXNQYXRoO1xuICAgICAgICAgICAgY29uc3QgbG9jYWxlID0gdHlwZW9mIG9wdGlvbnMubG9jYWxlICE9PSAndW5kZWZpbmVkJyA/IG9wdGlvbnMubG9jYWxlIHx8IHVuZGVmaW5lZCA6IF90aGlzLmxvY2FsZTtcbiAgICAgICAgICAgIGNvbnN0IGlzTWlkZGxld2FyZU1hdGNoID0geWllbGQgbWF0Y2hlc01pZGRsZXdhcmUoe1xuICAgICAgICAgICAgICAgIGFzUGF0aDogYXNQYXRoLFxuICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9IQVNfUkVXUklURVMgJiYgYXNQYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgICAgIGxldCByZXdyaXRlcztcbiAgICAgICAgICAgICAgICAoeyBfX3Jld3JpdGVzOiByZXdyaXRlcyAgfSA9IHlpZWxkICgwLCBfcm91dGVMb2FkZXIpLmdldENsaWVudEJ1aWxkTWFuaWZlc3QoKSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmV3cml0ZXNSZXN1bHQgPSAoMCwgX3Jlc29sdmVSZXdyaXRlcykuZGVmYXVsdCgoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCgoMCwgX2FkZExvY2FsZSkuYWRkTG9jYWxlKGFzUGF0aCwgX3RoaXMubG9jYWxlKSwgdHJ1ZSksIHBhZ2VzLCByZXdyaXRlcywgcGFyc2VkLnF1ZXJ5LCAocCk9PnJlc29sdmVEeW5hbWljUm91dGUocCwgcGFnZXMpLCBfdGhpcy5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICBpZiAocmV3cml0ZXNSZXN1bHQuZXh0ZXJuYWxEZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFpc01pZGRsZXdhcmVNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEFzID0gKDAsIF9yZW1vdmVMb2NhbGUpLnJlbW92ZUxvY2FsZSgoMCwgX3JlbW92ZUJhc2VQYXRoKS5yZW1vdmVCYXNlUGF0aChyZXdyaXRlc1Jlc3VsdC5hc1BhdGgpLCBfdGhpcy5sb2NhbGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocmV3cml0ZXNSZXN1bHQubWF0Y2hlZFBhZ2UgJiYgcmV3cml0ZXNSZXN1bHQucmVzb2x2ZWRIcmVmKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgZGlyZWN0bHkgbWF0Y2hlcyBhIHBhZ2Ugd2UgbmVlZCB0byB1cGRhdGUgdGhlIGhyZWYgdG9cbiAgICAgICAgICAgICAgICAgICAgLy8gYWxsb3cgdGhlIGNvcnJlY3QgcGFnZSBjaHVuayB0byBiZSBsb2FkZWRcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWUgPSByZXdyaXRlc1Jlc3VsdC5yZXNvbHZlZEhyZWY7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24ocGFyc2VkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHJlc29sdmVEeW5hbWljUm91dGUocGFyc2VkLnBhdGhuYW1lLCBwYWdlcyk7XG4gICAgICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHBhcnNlZC5wYXRobmFtZSkpIHtcbiAgICAgICAgICAgICAgICBwYXRobmFtZSA9IHBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBwYXRobmFtZTtcbiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHF1ZXJ5LCAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKCgwLCBfcm91dGVSZWdleCkuZ2V0Um91dGVSZWdleChwYXJzZWQucGF0aG5hbWUpKSgoMCwgX3BhcnNlUGF0aCkucGFyc2VQYXRoKGFzUGF0aCkucGF0aG5hbWUpIHx8IHt9KTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzTWlkZGxld2FyZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBwcm9jZXNzLmVudi5fX05FWFRfTUlERExFV0FSRV9QUkVGRVRDSCA9PT0gJ3N0cmljdCcgPyBudWxsIDogeWllbGQgd2l0aE1pZGRsZXdhcmVFZmZlY3RzKHtcbiAgICAgICAgICAgICAgICBmZXRjaERhdGE6ICgpPT5mZXRjaE5leHREYXRhKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFIcmVmOiBfdGhpcy5wYWdlTG9hZGVyLmdldERhdGFIcmVmKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogb3JpZ2luYWxQYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lwSW50ZXJwb2xhdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc01pZGRsZXdhcmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogX3RoaXMuaXNTc3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUpTT046IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZsaWdodENhY2hlOiBfdGhpcy5zZGMsXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFfdGhpcy5pc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1ByZWZldGNoOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGFzUGF0aDogYXNQYXRoLFxuICAgICAgICAgICAgICAgIGxvY2FsZTogbG9jYWxlLFxuICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLyoqXG4gICAgICogSWYgdGhlcmUgd2FzIGEgcmV3cml0ZSB3ZSBhcHBseSB0aGUgZWZmZWN0cyBvZiB0aGUgcmV3cml0ZSBvbiB0aGVcbiAgICAgKiBjdXJyZW50IHBhcmFtZXRlcnMgZm9yIHRoZSBwcmVmZXRjaC5cbiAgICAgKi8gaWYgKChkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhLmVmZmVjdC50eXBlKSA9PT0gJ3Jld3JpdGUnKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gZGF0YS5lZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gZGF0YS5lZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHF1ZXJ5ID0gX2V4dGVuZHMoe30sIHF1ZXJ5LCBkYXRhLmVmZmVjdC5wYXJzZWRBcy5xdWVyeSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZWRBcyA9IGRhdGEuZWZmZWN0LnBhcnNlZEFzLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyoqXG4gICAgICogSWYgdGhlcmUgaXMgYSByZWRpcmVjdCB0byBhbiBleHRlcm5hbCBkZXN0aW5hdGlvbiB0aGVuIHdlIGRvbid0IGhhdmVcbiAgICAgKiB0byBwcmVmZXRjaCBjb250ZW50IGFzIGl0IHdpbGwgYmUgdW51c2VkLlxuICAgICAqLyBpZiAoKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuZWZmZWN0LnR5cGUpID09PSAncmVkaXJlY3QtZXh0ZXJuYWwnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICAgICAgeWllbGQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgIF90aGlzLnBhZ2VMb2FkZXIuX2lzU3NnKHJvdXRlKS50aGVuKChpc1NzZyk9PntcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzU3NnID8gZmV0Y2hOZXh0RGF0YSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhSHJlZjogKGRhdGEgPT0gbnVsbCA/IHZvaWQgMCA6IGRhdGEuanNvbikgPyBkYXRhID09IG51bGwgPyB2b2lkIDAgOiBkYXRhLmRhdGFIcmVmIDogX3RoaXMucGFnZUxvYWRlci5nZXREYXRhSHJlZih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogdXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzUGF0aDogcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IGxvY2FsZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUpTT046IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZsaWdodENhY2hlOiBfdGhpcy5zZGMsXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJzaXN0Q2FjaGU6ICFfdGhpcy5pc1ByZXZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1ByZWZldGNoOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdW5zdGFibGVfc2tpcENsaWVudENhY2hlOiBvcHRpb25zLnVuc3RhYmxlX3NraXBDbGllbnRDYWNoZSB8fCBvcHRpb25zLnByaW9yaXR5ICYmICEhcHJvY2Vzcy5lbnYuX19ORVhUX09QVElNSVNUSUNfQ0xJRU5UX0NBQ0hFXG4gICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oKCk9PmZhbHNlKSA6IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIF90aGlzLnBhZ2VMb2FkZXJbb3B0aW9ucy5wcmlvcml0eSA/ICdsb2FkUGFnZScgOiAncHJlZmV0Y2gnXShyb3V0ZSksIFxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGZldGNoQ29tcG9uZW50KHJvdXRlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKigpIHtcbiAgICAgICAgICAgIGNvbnN0IGhhbmRsZUNhbmNlbGxlZCA9IGdldENhbmNlbGxlZEhhbmRsZXIoe1xuICAgICAgICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgICAgICAgIHJvdXRlcjogX3RoaXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb21wb25lbnRSZXN1bHQgPSB5aWVsZCBfdGhpcy5wYWdlTG9hZGVyLmxvYWRQYWdlKHJvdXRlKTtcbiAgICAgICAgICAgICAgICBoYW5kbGVDYW5jZWxsZWQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29tcG9uZW50UmVzdWx0O1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlQ2FuY2VsbGVkKCk7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBfZ2V0RGF0YShmbikge1xuICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IGNhbmNlbCA9ICgpPT57XG4gICAgICAgICAgICBjYW5jZWxsZWQgPSB0cnVlO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNsYyA9IGNhbmNlbDtcbiAgICAgICAgcmV0dXJuIGZuKCkudGhlbigoZGF0YSk9PntcbiAgICAgICAgICAgIGlmIChjYW5jZWwgPT09IHRoaXMuY2xjKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGMgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNhbmNlbGxlZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignTG9hZGluZyBpbml0aWFsIHByb3BzIGNhbmNlbGxlZCcpO1xuICAgICAgICAgICAgICAgIGVyci5jYW5jZWxsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2dldEZsaWdodERhdGEoZGF0YUhyZWYpIHtcbiAgICAgICAgLy8gRG8gbm90IGNhY2hlIFJTQyBmbGlnaHQgcmVzcG9uc2Ugc2luY2UgaXQncyBub3QgYSBzdGF0aWMgcmVzb3VyY2VcbiAgICAgICAgcmV0dXJuIGZldGNoTmV4dERhdGEoe1xuICAgICAgICAgICAgZGF0YUhyZWYsXG4gICAgICAgICAgICBpc1NlcnZlclJlbmRlcjogdHJ1ZSxcbiAgICAgICAgICAgIHBhcnNlSlNPTjogZmFsc2UsXG4gICAgICAgICAgICBpbmZsaWdodENhY2hlOiB0aGlzLnNkYyxcbiAgICAgICAgICAgIHBlcnNpc3RDYWNoZTogZmFsc2UsXG4gICAgICAgICAgICBpc1ByZWZldGNoOiBmYWxzZVxuICAgICAgICB9KS50aGVuKCh7IHRleHQgIH0pPT4oe1xuICAgICAgICAgICAgICAgIGRhdGE6IHRleHRcbiAgICAgICAgICAgIH0pKTtcbiAgICB9XG4gICAgZ2V0SW5pdGlhbFByb3BzKENvbXBvbmVudCwgY3R4KSB7XG4gICAgICAgIGNvbnN0IHsgQ29tcG9uZW50OiBBcHAgIH0gPSB0aGlzLmNvbXBvbmVudHNbJy9fYXBwJ107XG4gICAgICAgIGNvbnN0IEFwcFRyZWUgPSB0aGlzLl93cmFwQXBwKEFwcCk7XG4gICAgICAgIGN0eC5BcHBUcmVlID0gQXBwVHJlZTtcbiAgICAgICAgcmV0dXJuICgwLCBfdXRpbHMpLmxvYWRHZXRJbml0aWFsUHJvcHMoQXBwLCB7XG4gICAgICAgICAgICBBcHBUcmVlLFxuICAgICAgICAgICAgQ29tcG9uZW50LFxuICAgICAgICAgICAgcm91dGVyOiB0aGlzLFxuICAgICAgICAgICAgY3R4XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQgcm91dGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnJvdXRlO1xuICAgIH1cbiAgICBnZXQgcGF0aG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnBhdGhuYW1lO1xuICAgIH1cbiAgICBnZXQgcXVlcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnF1ZXJ5O1xuICAgIH1cbiAgICBnZXQgYXNQYXRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5hc1BhdGg7XG4gICAgfVxuICAgIGdldCBsb2NhbGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmxvY2FsZTtcbiAgICB9XG4gICAgZ2V0IGlzRmFsbGJhY2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmlzRmFsbGJhY2s7XG4gICAgfVxuICAgIGdldCBpc1ByZXZpZXcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmlzUHJldmlldztcbiAgICB9XG4gICAgY29uc3RydWN0b3IocGF0aG5hbWUxLCBxdWVyeTEsIGFzMSwgeyBpbml0aWFsUHJvcHMgLCBwYWdlTG9hZGVyICwgQXBwICwgd3JhcEFwcCAsIENvbXBvbmVudCAsIGVyciAsIHN1YnNjcmlwdGlvbiAsIGlzRmFsbGJhY2sgLCBsb2NhbGUgLCBsb2NhbGVzICwgZGVmYXVsdExvY2FsZSAsIGRvbWFpbkxvY2FsZXMgLCBpc1ByZXZpZXcgIH0pe1xuICAgICAgICAvLyBTZXJ2ZXIgRGF0YSBDYWNoZSAoZnVsbCBkYXRhIHJlcXVlc3RzKVxuICAgICAgICB0aGlzLnNkYyA9IHt9O1xuICAgICAgICAvLyBTZXJ2ZXIgQmFja2dyb3VuZCBDYWNoZSAoSEVBRCByZXF1ZXN0cylcbiAgICAgICAgdGhpcy5zYmMgPSB7fTtcbiAgICAgICAgdGhpcy5pc0ZpcnN0UG9wU3RhdGVFdmVudCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2tleSA9IGNyZWF0ZUtleSgpO1xuICAgICAgICB0aGlzLm9uUG9wU3RhdGUgPSAoZSk9PntcbiAgICAgICAgICAgIGNvbnN0IHsgaXNGaXJzdFBvcFN0YXRlRXZlbnQgIH0gPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5pc0ZpcnN0UG9wU3RhdGVFdmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSBlLnN0YXRlO1xuICAgICAgICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGdldCBzdGF0ZSBhcyB1bmRlZmluZWQgZm9yIHR3byByZWFzb25zLlxuICAgICAgICAgICAgICAgIC8vICAxLiBXaXRoIG9sZGVyIHNhZmFyaSAoPCA4KSBhbmQgb2xkZXIgY2hyb21lICg8IDM0KVxuICAgICAgICAgICAgICAgIC8vICAyLiBXaGVuIHRoZSBVUkwgY2hhbmdlZCB3aXRoICNcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIEluIHRoZSBib3RoIGNhc2VzLCB3ZSBkb24ndCBuZWVkIHRvIHByb2NlZWQgYW5kIGNoYW5nZSB0aGUgcm91dGUuXG4gICAgICAgICAgICAgICAgLy8gKGFzIGl0J3MgYWxyZWFkeSBjaGFuZ2VkKVxuICAgICAgICAgICAgICAgIC8vIEJ1dCB3ZSBjYW4gc2ltcGx5IHJlcGxhY2UgdGhlIHN0YXRlIHdpdGggdGhlIG5ldyBjaGFuZ2VzLlxuICAgICAgICAgICAgICAgIC8vIEFjdHVhbGx5LCBmb3IgKDEpIHdlIGRvbid0IG5lZWQgdG8gbm90aGluZy4gQnV0IGl0J3MgaGFyZCB0byBkZXRlY3QgdGhhdCBldmVudC5cbiAgICAgICAgICAgICAgICAvLyBTbywgZG9pbmcgdGhlIGZvbGxvd2luZyBmb3IgKDEpIGRvZXMgbm8gaGFybS5cbiAgICAgICAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlU3RhdGUoJ3JlcGxhY2VTdGF0ZScsICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aChwYXRobmFtZSksXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgICAgICAgICAgfSksICgwLCBfdXRpbHMpLmdldFVSTCgpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBfX05BIGlzIHVzZWQgdG8gaWRlbnRpZnkgaWYgdGhlIGhpc3RvcnkgZW50cnkgY2FuIGJlIGhhbmRsZWQgYnkgdGhlIGFwcC1yb3V0ZXIuXG4gICAgICAgICAgICBpZiAoc3RhdGUuX19OQSkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXN0YXRlLl9fTikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFNhZmFyaSBmaXJlcyBwb3BzdGF0ZWV2ZW50IHdoZW4gcmVvcGVuaW5nIHRoZSBicm93c2VyLlxuICAgICAgICAgICAgaWYgKGlzRmlyc3RQb3BTdGF0ZUV2ZW50ICYmIHRoaXMubG9jYWxlID09PSBzdGF0ZS5vcHRpb25zLmxvY2FsZSAmJiBzdGF0ZS5hcyA9PT0gdGhpcy5hc1BhdGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZm9yY2VkU2Nyb2xsO1xuICAgICAgICAgICAgY29uc3QgeyB1cmwgLCBhcyAsIG9wdGlvbnMgLCBrZXkgIH0gPSBzdGF0ZTtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1hbnVhbFNjcm9sbFJlc3RvcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9rZXkgIT09IGtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gU25hcHNob3QgY3VycmVudCBzY3JvbGwgcG9zaXRpb246XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ19fbmV4dF9zY3JvbGxfJyArIHRoaXMuX2tleSwgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4OiBzZWxmLnBhZ2VYT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiBzZWxmLnBhZ2VZT2Zmc2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlc3RvcmUgb2xkIHNjcm9sbCBwb3NpdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ19fbmV4dF9zY3JvbGxfJyArIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yY2VkU2Nyb2xsID0gSlNPTi5wYXJzZSh2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yY2VkU2Nyb2xsID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2tleSA9IGtleTtcbiAgICAgICAgICAgIGNvbnN0IHsgcGF0aG5hbWUgIH0gPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwodXJsKTtcbiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB3ZSBkb24ndCByZS1yZW5kZXIgb24gaW5pdGlhbCBsb2FkLFxuICAgICAgICAgICAgLy8gY2FuIGJlIGNhdXNlZCBieSBuYXZpZ2F0aW5nIGJhY2sgZnJvbSBhbiBleHRlcm5hbCBzaXRlXG4gICAgICAgICAgICBpZiAodGhpcy5pc1NzciAmJiBhcyA9PT0gKDAsIF9hZGRCYXNlUGF0aCkuYWRkQmFzZVBhdGgodGhpcy5hc1BhdGgpICYmIHBhdGhuYW1lID09PSAoMCwgX2FkZEJhc2VQYXRoKS5hZGRCYXNlUGF0aCh0aGlzLnBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHRoZSBkb3duc3RyZWFtIGFwcGxpY2F0aW9uIHJldHVybnMgZmFsc3ksIHJldHVybi5cbiAgICAgICAgICAgIC8vIFRoZXkgd2lsbCB0aGVuIGJlIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyB0aGUgZXZlbnQuXG4gICAgICAgICAgICBpZiAodGhpcy5fYnBzICYmICF0aGlzLl9icHMoc3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jaGFuZ2UoJ3JlcGxhY2VTdGF0ZScsIHVybCwgYXMsIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHtcbiAgICAgICAgICAgICAgICBzaGFsbG93OiBvcHRpb25zLnNoYWxsb3cgJiYgdGhpcy5fc2hhbGxvdyxcbiAgICAgICAgICAgICAgICBsb2NhbGU6IG9wdGlvbnMubG9jYWxlIHx8IHRoaXMuZGVmYXVsdExvY2FsZSxcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIGludGVybmFsIHZhbHVlIG5vdCBleHBvc2VkIG9uIHR5cGVzXG4gICAgICAgICAgICAgICAgX2g6IDBcbiAgICAgICAgICAgIH0pLCBmb3JjZWRTY3JvbGwpO1xuICAgICAgICB9O1xuICAgICAgICAvLyByZXByZXNlbnRzIHRoZSBjdXJyZW50IGNvbXBvbmVudCBrZXlcbiAgICAgICAgY29uc3Qgcm91dGUgPSAoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUxKTtcbiAgICAgICAgLy8gc2V0IHVwIHRoZSBjb21wb25lbnQgY2FjaGUgKGJ5IHJvdXRlIGtleXMpXG4gICAgICAgIHRoaXMuY29tcG9uZW50cyA9IHt9O1xuICAgICAgICAvLyBXZSBzaG91bGQgbm90IGtlZXAgdGhlIGNhY2hlLCBpZiB0aGVyZSdzIGFuIGVycm9yXG4gICAgICAgIC8vIE90aGVyd2lzZSwgdGhpcyBjYXVzZSBpc3N1ZXMgd2hlbiB3aGVuIGdvaW5nIGJhY2sgYW5kXG4gICAgICAgIC8vIGNvbWUgYWdhaW4gdG8gdGhlIGVycm9yZWQgcGFnZS5cbiAgICAgICAgaWYgKHBhdGhuYW1lMSAhPT0gJy9fZXJyb3InKSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudHNbcm91dGVdID0ge1xuICAgICAgICAgICAgICAgIENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBpbml0aWFsOiB0cnVlLFxuICAgICAgICAgICAgICAgIHByb3BzOiBpbml0aWFsUHJvcHMsXG4gICAgICAgICAgICAgICAgZXJyLFxuICAgICAgICAgICAgICAgIF9fTl9TU0c6IGluaXRpYWxQcm9wcyAmJiBpbml0aWFsUHJvcHMuX19OX1NTRyxcbiAgICAgICAgICAgICAgICBfX05fU1NQOiBpbml0aWFsUHJvcHMgJiYgaW5pdGlhbFByb3BzLl9fTl9TU1BcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb21wb25lbnRzWycvX2FwcCddID0ge1xuICAgICAgICAgICAgQ29tcG9uZW50OiBBcHAsXG4gICAgICAgICAgICBzdHlsZVNoZWV0czogW11cbiAgICAgICAgfTtcbiAgICAgICAgLy8gQmFja3dhcmRzIGNvbXBhdCBmb3IgUm91dGVyLnJvdXRlci5ldmVudHNcbiAgICAgICAgLy8gVE9ETzogU2hvdWxkIGJlIHJlbW92ZSB0aGUgZm9sbG93aW5nIG1ham9yIHZlcnNpb24gYXMgaXQgd2FzIG5ldmVyIGRvY3VtZW50ZWRcbiAgICAgICAgdGhpcy5ldmVudHMgPSBSb3V0ZXIuZXZlbnRzO1xuICAgICAgICB0aGlzLnBhZ2VMb2FkZXIgPSBwYWdlTG9hZGVyO1xuICAgICAgICAvLyBpZiBhdXRvIHByZXJlbmRlcmVkIGFuZCBkeW5hbWljIHJvdXRlIHdhaXQgdG8gdXBkYXRlIGFzUGF0aFxuICAgICAgICAvLyB1bnRpbCBhZnRlciBtb3VudCB0byBwcmV2ZW50IGh5ZHJhdGlvbiBtaXNtYXRjaFxuICAgICAgICBjb25zdCBhdXRvRXhwb3J0RHluYW1pYyA9ICgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZShwYXRobmFtZTEpICYmIHNlbGYuX19ORVhUX0RBVEFfXy5hdXRvRXhwb3J0O1xuICAgICAgICB0aGlzLmJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCAnJztcbiAgICAgICAgdGhpcy5zdWIgPSBzdWJzY3JpcHRpb247XG4gICAgICAgIHRoaXMuY2xjID0gbnVsbDtcbiAgICAgICAgdGhpcy5fd3JhcEFwcCA9IHdyYXBBcHA7XG4gICAgICAgIC8vIG1ha2Ugc3VyZSB0byBpZ25vcmUgZXh0cmEgcG9wU3RhdGUgaW4gc2FmYXJpIG9uIG5hdmlnYXRpbmdcbiAgICAgICAgLy8gYmFjayBmcm9tIGV4dGVybmFsIHNpdGVcbiAgICAgICAgdGhpcy5pc1NzciA9IHRydWU7XG4gICAgICAgIHRoaXMuaXNMb2NhbGVEb21haW4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc1JlYWR5ID0gISEoc2VsZi5fX05FWFRfREFUQV9fLmdzc3AgfHwgc2VsZi5fX05FWFRfREFUQV9fLmdpcCB8fCBzZWxmLl9fTkVYVF9EQVRBX18uYXBwR2lwICYmICFzZWxmLl9fTkVYVF9EQVRBX18uZ3NwIHx8ICFhdXRvRXhwb3J0RHluYW1pYyAmJiAhc2VsZi5sb2NhdGlvbi5zZWFyY2ggJiYgIXByb2Nlc3MuZW52Ll9fTkVYVF9IQVNfUkVXUklURVMpO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgdGhpcy5sb2NhbGVzID0gbG9jYWxlcztcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdExvY2FsZSA9IGRlZmF1bHRMb2NhbGU7XG4gICAgICAgICAgICB0aGlzLmRvbWFpbkxvY2FsZXMgPSBkb21haW5Mb2NhbGVzO1xuICAgICAgICAgICAgdGhpcy5pc0xvY2FsZURvbWFpbiA9ICEhKDAsIF9kZXRlY3REb21haW5Mb2NhbGUpLmRldGVjdERvbWFpbkxvY2FsZShkb21haW5Mb2NhbGVzLCBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcm91dGUsXG4gICAgICAgICAgICBwYXRobmFtZTogcGF0aG5hbWUxLFxuICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5MSxcbiAgICAgICAgICAgIGFzUGF0aDogYXV0b0V4cG9ydER5bmFtaWMgPyBwYXRobmFtZTEgOiBhczEsXG4gICAgICAgICAgICBpc1ByZXZpZXc6ICEhaXNQcmV2aWV3LFxuICAgICAgICAgICAgbG9jYWxlOiBwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUID8gbG9jYWxlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaXNGYWxsYmFja1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9pbml0aWFsTWF0Y2hlc01pZGRsZXdhcmVQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgXCJhc1wiIGRvZXNuJ3Qgc3RhcnQgd2l0aCBkb3VibGUgc2xhc2hlcyBvciBlbHNlIGl0IGNhblxuICAgICAgICAgICAgLy8gdGhyb3cgYW4gZXJyb3IgYXMgaXQncyBjb25zaWRlcmVkIGludmFsaWRcbiAgICAgICAgICAgIGlmICghYXMxLnN0YXJ0c1dpdGgoJy8vJykpIHtcbiAgICAgICAgICAgICAgICAvLyBpbiBvcmRlciBmb3IgYGUuc3RhdGVgIHRvIHdvcmsgb24gdGhlIGBvbnBvcHN0YXRlYCBldmVudFxuICAgICAgICAgICAgICAgIC8vIHdlIGhhdmUgdG8gcmVnaXN0ZXIgdGhlIGluaXRpYWwgcm91dGUgdXBvbiBpbml0aWFsaXphdGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGxvY2FsZVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY29uc3QgYXNQYXRoID0gKDAsIF91dGlscykuZ2V0VVJMKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5faW5pdGlhbE1hdGNoZXNNaWRkbGV3YXJlUHJvbWlzZSA9IG1hdGNoZXNNaWRkbGV3YXJlKHtcbiAgICAgICAgICAgICAgICAgICAgcm91dGVyOiB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgICAgIGFzUGF0aFxuICAgICAgICAgICAgICAgIH0pLnRoZW4oKG1hdGNoZXMpPT57XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuX3Nob3VsZFJlc29sdmVIcmVmID0gYXMxICE9PSBwYXRobmFtZTE7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlU3RhdGUoJ3JlcGxhY2VTdGF0ZScsIG1hdGNoZXMgPyBhc1BhdGggOiAoMCwgX2Zvcm1hdFVybCkuZm9ybWF0V2l0aFZhbGlkYXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICgwLCBfYWRkQmFzZVBhdGgpLmFkZEJhc2VQYXRoKHBhdGhuYW1lMSksXG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnkxXG4gICAgICAgICAgICAgICAgICAgIH0pLCBhc1BhdGgsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHRoaXMub25Qb3BTdGF0ZSk7XG4gICAgICAgICAgICAvLyBlbmFibGUgY3VzdG9tIHNjcm9sbCByZXN0b3JhdGlvbiBoYW5kbGluZyB3aGVuIGF2YWlsYWJsZVxuICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIGZhbGxiYWNrIHRvIGJyb3dzZXIncyBkZWZhdWx0IGhhbmRsaW5nXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1NDUk9MTF9SRVNUT1JBVElPTikge1xuICAgICAgICAgICAgICAgIGlmIChtYW51YWxTY3JvbGxSZXN0b3JhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5zY3JvbGxSZXN0b3JhdGlvbiA9ICdtYW51YWwnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblJvdXRlci5ldmVudHMgPSAoMCwgX21pdHQpLmRlZmF1bHQoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJvdXRlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1hdGNoZXNNaWRkbGV3YXJlIiwiaXNMb2NhbFVSTCIsImludGVycG9sYXRlQXMiLCJyZXNvbHZlSHJlZiIsImhhbmRsZVNtb290aFNjcm9sbCIsImNyZWF0ZUtleSIsImRlZmF1bHQiLCJfYXN5bmNfdG9fZ2VuZXJhdG9yIiwicmVxdWlyZSIsIl9leHRlbmRzIiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwiX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCIsIl9ub3JtYWxpemVUcmFpbGluZ1NsYXNoIiwiX3JlbW92ZVRyYWlsaW5nU2xhc2giLCJfcm91dGVMb2FkZXIiLCJfc2NyaXB0IiwiX2lzRXJyb3IiLCJfZGVub3JtYWxpemVQYWdlUGF0aCIsIl9ub3JtYWxpemVMb2NhbGVQYXRoIiwiX21pdHQiLCJfdXRpbHMiLCJfaXNEeW5hbWljIiwiX3BhcnNlUmVsYXRpdmVVcmwiLCJfcXVlcnlzdHJpbmciLCJfcmVzb2x2ZVJld3JpdGVzIiwiX3JvdXRlTWF0Y2hlciIsIl9yb3V0ZVJlZ2V4IiwiX2Zvcm1hdFVybCIsIl9kZXRlY3REb21haW5Mb2NhbGUiLCJfcGFyc2VQYXRoIiwiX2FkZExvY2FsZSIsIl9yZW1vdmVMb2NhbGUiLCJfcmVtb3ZlQmFzZVBhdGgiLCJfYWRkQmFzZVBhdGgiLCJfaGFzQmFzZVBhdGgiLCJfaXNBcGlSb3V0ZSIsIl9nZXROZXh0UGF0aG5hbWVJbmZvIiwiX2Zvcm1hdE5leHRQYXRobmFtZUluZm8iLCJfY29tcGFyZVN0YXRlcyIsIl9pc0JvdCIsImJ1aWxkQ2FuY2VsbGF0aW9uRXJyb3IiLCJhc3NpZ24iLCJFcnJvciIsImNhbmNlbGxlZCIsIm9wdGlvbnMiLCJfbWF0Y2hlc01pZGRsZXdhcmUiLCJhcHBseSIsImFyZ3VtZW50cyIsIm1hdGNoZXJzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyb3V0ZXIiLCJwYWdlTG9hZGVyIiwiZ2V0TWlkZGxld2FyZSIsInBhdGhuYW1lIiwiYXNQYXRobmFtZSIsInBhcnNlUGF0aCIsImFzUGF0aCIsImNsZWFuZWRBcyIsImhhc0Jhc2VQYXRoIiwicmVtb3ZlQmFzZVBhdGgiLCJhc1dpdGhCYXNlUGF0aEFuZExvY2FsZSIsImFkZEJhc2VQYXRoIiwiYWRkTG9jYWxlIiwibG9jYWxlIiwic29tZSIsIm0iLCJSZWdFeHAiLCJyZWdleHAiLCJ0ZXN0Iiwic3RyaXBPcmlnaW4iLCJ1cmwiLCJvcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJvbWl0Iiwib2JqZWN0Iiwia2V5cyIsIm9taXR0ZWQiLCJmb3JFYWNoIiwia2V5IiwiaW5jbHVkZXMiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJyZXNvbHZlZCIsIlVSTCIsIl8iLCJyb3V0ZSIsInF1ZXJ5IiwiaW50ZXJwb2xhdGVkUm91dGUiLCJkeW5hbWljUmVnZXgiLCJnZXRSb3V0ZVJlZ2V4IiwiZHluYW1pY0dyb3VwcyIsImdyb3VwcyIsImR5bmFtaWNNYXRjaGVzIiwiZ2V0Um91dGVNYXRjaGVyIiwicGFyYW1zIiwiZXZlcnkiLCJwYXJhbSIsInJlcGVhdCIsIm9wdGlvbmFsIiwicmVwbGFjZWQiLCJBcnJheSIsImlzQXJyYXkiLCJyZXBsYWNlIiwibWFwIiwic2VnbWVudCIsImVuY29kZVVSSUNvbXBvbmVudCIsImpvaW4iLCJyZXN1bHQiLCJocmVmIiwicmVzb2x2ZUFzIiwiYmFzZSIsInVybEFzU3RyaW5nIiwiZm9ybWF0V2l0aFZhbGlkYXRpb24iLCJ1cmxQcm90b01hdGNoIiwibWF0Y2giLCJ1cmxBc1N0cmluZ05vUHJvdG8iLCJzbGljZSIsInVybFBhcnRzIiwic3BsaXQiLCJjb25zb2xlIiwiZXJyb3IiLCJub3JtYWxpemVkVXJsIiwibm9ybWFsaXplUmVwZWF0ZWRTbGFzaGVzIiwiZmluYWxVcmwiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImludGVycG9sYXRlZEFzIiwiaXNEeW5hbWljUm91dGUiLCJzZWFyY2hQYXJhbXMiLCJzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5IiwiaGFzaCIsInJlc29sdmVkSHJlZiIsIl8xIiwicHJlcGFyZVVybEFzIiwiYXMiLCJyZXNvbHZlZEFzIiwiaHJlZldhc0Fic29sdXRlIiwiYXNXYXNBYnNvbHV0ZSIsInByZXBhcmVkVXJsIiwicHJlcGFyZWRBcyIsInJlc29sdmVEeW5hbWljUm91dGUiLCJwYWdlcyIsImNsZWFuUGF0aG5hbWUiLCJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiZGVub3JtYWxpemVQYWdlUGF0aCIsInBhZ2UiLCJyZSIsImdldE1pZGRsZXdhcmVEYXRhIiwic291cmNlIiwicmVzcG9uc2UiLCJuZXh0Q29uZmlnIiwiYmFzZVBhdGgiLCJpMThuIiwibG9jYWxlcyIsInRyYWlsaW5nU2xhc2giLCJCb29sZWFuIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInJld3JpdGVIZWFkZXIiLCJoZWFkZXJzIiwiZ2V0IiwicmV3cml0ZVRhcmdldCIsIm1hdGNoZWRQYXRoIiwicGFyc2VkUmV3cml0ZVRhcmdldCIsInBhcnNlUmVsYXRpdmVVcmwiLCJwYXRobmFtZUluZm8iLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwicGFyc2VEYXRhIiwiZnNQYXRobmFtZSIsImFsbCIsImdldFBhZ2VMaXN0IiwiZ2V0Q2xpZW50QnVpbGRNYW5pZmVzdCIsInRoZW4iLCJfX3Jld3JpdGVzIiwicmV3cml0ZXMiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicGFyc2VkU291cmNlIiwiX19ORVhUX0hBU19SRVdSSVRFUyIsInBhdGgiLCJtYXRjaGVkUGFnZSIsInBhcnNlZEFzIiwicmVzb2x2ZWRQYXRobmFtZSIsIm1hdGNoZXMiLCJ0eXBlIiwic3JjIiwiZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyIsImRlZmF1bHRMb2NhbGUiLCJidWlsZElkIiwiZGVzdGluYXRpb24iLCJyZWRpcmVjdFRhcmdldCIsIm5ld0FzIiwibmV3VXJsIiwid2l0aE1pZGRsZXdhcmVFZmZlY3RzIiwiX3dpdGhNaWRkbGV3YXJlRWZmZWN0cyIsImZldGNoRGF0YSIsImRhdGEiLCJlZmZlY3QiLCJkYXRhSHJlZiIsImpzb24iLCJ0ZXh0IiwiY2FjaGVLZXkiLCJlIiwibWFudWFsU2Nyb2xsUmVzdG9yYXRpb24iLCJfX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OIiwid2luZG93IiwiaGlzdG9yeSIsInYiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwibiIsIlNTR19EQVRBX05PVF9GT1VORCIsIlN5bWJvbCIsImZldGNoUmV0cnkiLCJhdHRlbXB0cyIsImZldGNoIiwiY3JlZGVudGlhbHMiLCJtZXRob2QiLCJvayIsInN0YXR1cyIsImZuIiwiaHRtbEVsZW1lbnQiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImV4aXN0aW5nIiwic3R5bGUiLCJzY3JvbGxCZWhhdmlvciIsImRvbnRGb3JjZUxheW91dCIsImdldENsaWVudFJlY3RzIiwidHJ5VG9QYXJzZUFzSlNPTiIsIkpTT04iLCJwYXJzZSIsImZldGNoTmV4dERhdGEiLCJpbmZsaWdodENhY2hlIiwiaXNQcmVmZXRjaCIsImhhc01pZGRsZXdhcmUiLCJpc1NlcnZlclJlbmRlciIsInBhcnNlSlNPTiIsInBlcnNpc3RDYWNoZSIsImlzQmFja2dyb3VuZCIsInVuc3RhYmxlX3NraXBDbGllbnRDYWNoZSIsImxvY2F0aW9uIiwicmVmMSIsImdldERhdGEiLCJwdXJwb3NlIiwicmVmIiwibm90Rm91bmQiLCJtYXJrQXNzZXRFcnJvciIsImNhdGNoIiwiZXJyIiwibWVzc2FnZSIsInVuZGVmaW5lZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsImhhbmRsZUhhcmROYXZpZ2F0aW9uIiwiZ2V0Q2FuY2VsbGVkSGFuZGxlciIsImNhbmNlbCIsImNsYyIsImhhbmRsZUNhbmNlbGxlZCIsIlJvdXRlciIsInJlbG9hZCIsImJhY2siLCJmb3J3YXJkIiwicHVzaCIsIl9rZXkiLCJzdHJpbmdpZnkiLCJ4Iiwic2VsZiIsInBhZ2VYT2Zmc2V0IiwieSIsInBhZ2VZT2Zmc2V0IiwiY2hhbmdlIiwiZm9yY2VkU2Nyb2xsIiwiX3RoaXMiLCJpc1F1ZXJ5VXBkYXRpbmciLCJfaCIsInNob3VsZFJlc29sdmVIcmVmIiwiX3Nob3VsZFJlc29sdmVIcmVmIiwibmV4dFN0YXRlIiwic3RhdGUiLCJyZWFkeVN0YXRlQ2hhbmdlIiwiaXNSZWFkeSIsImlzU3NyIiwicHJldkxvY2FsZSIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJsb2NhbGVQYXRoUmVzdWx0IiwiZGV0ZWN0ZWRMb2NhbGUiLCJkaWROYXZpZ2F0ZSIsImRldGVjdGVkRG9tYWluIiwiZGV0ZWN0RG9tYWluTG9jYWxlIiwiZG9tYWluTG9jYWxlcyIsImlzTG9jYWxlRG9tYWluIiwiaG9zdG5hbWUiLCJkb21haW4iLCJhc05vQmFzZVBhdGgiLCJodHRwIiwiU1QiLCJwZXJmb3JtYW5jZSIsIm1hcmsiLCJzaGFsbG93Iiwic2Nyb2xsIiwicm91dGVQcm9wcyIsIl9pbkZsaWdodFJvdXRlIiwiZXZlbnRzIiwiZW1pdCIsInJlbW92ZUxvY2FsZSIsImxvY2FsZUNoYW5nZSIsIm9ubHlBSGFzaENoYW5nZSIsImNoYW5nZVN0YXRlIiwic2Nyb2xsVG9IYXNoIiwic2V0IiwiY29tcG9uZW50cyIsInBhcnNlZCIsInVybElzTmV3IiwicGFyc2VkQXNQYXRobmFtZSIsImlzTWlkZGxld2FyZVJld3JpdGUiLCJpc01pZGRsZXdhcmVNYXRjaCIsInJld3JpdGVzUmVzdWx0IiwicCIsImV4dGVybmFsRGVzdCIsInJvdXRlTWF0Y2giLCJyb3V0ZVJlZ2V4Iiwic2hvdWxkSW50ZXJwb2xhdGUiLCJtaXNzaW5nUGFyYW1zIiwiZmlsdGVyIiwid2FybiIsInJlZjIiLCJyZWYzIiwicmVmNCIsInJvdXRlSW5mbyIsImdldFJvdXRlSW5mbyIsImlzUHJldmlldyIsImlzRmFsbGJhY2siLCJjbGVhbmVkUGFyc2VkUGF0aG5hbWUiLCJwcmVmaXhlZEFzIiwicmV3cml0ZUFzIiwibG9jYWxlUmVzdWx0IiwiY3VyUm91dGVNYXRjaCIsImNvbXBvbmVudCIsIkNvbXBvbmVudCIsInVuc3RhYmxlX3NjcmlwdExvYWRlciIsInNjcmlwdHMiLCJjb25jYXQiLCJzY3JpcHQiLCJoYW5kbGVDbGllbnRTY3JpcHRMb2FkIiwicHJvcHMiLCJfX05fU1NHIiwiX19OX1NTUCIsInBhZ2VQcm9wcyIsIl9fTl9SRURJUkVDVCIsIl9fTl9SRURJUkVDVF9CQVNFX1BBVEgiLCJwYXJzZWRIcmVmIiwiX19OX1BSRVZJRVciLCJub3RGb3VuZFJvdXRlIiwiZmV0Y2hDb21wb25lbnQiLCJfX05FWFRfREFUQV9fIiwic3RhdHVzQ29kZSIsIl9yb3V0ZSIsImlzVmFsaWRTaGFsbG93Um91dGUiLCJfc2Nyb2xsIiwic2hvdWxkU2Nyb2xsIiwicmVzZXRTY3JvbGwiLCJ1cGNvbWluZ1Njcm9sbFN0YXRlIiwidXBjb21pbmdSb3V0ZXJTdGF0ZSIsInJlZjUiLCJyZWY2IiwicmVmNyIsImNhblNraXBVcGRhdGluZyIsImNvbXBhcmVSb3V0ZXJTdGF0ZXMiLCJsYW5nIiwiaGFzaFJlZ2V4IiwiZXJyMSIsImdldFVSTCIsIl9zaGFsbG93IiwiX19OIiwiaGFuZGxlUm91dGVJbmZvRXJyb3IiLCJsb2FkRXJyb3JGYWlsIiwiaXNBc3NldEVycm9yIiwic3R5bGVTaGVldHMiLCJnZXRJbml0aWFsUHJvcHMiLCJnaXBFcnIiLCJyb3V0ZUluZm9FcnIiLCJyZXF1ZXN0ZWRSb3V0ZSIsInJlZjgiLCJyZWY5IiwicmVmMTAiLCJleGlzdGluZ0luZm8iLCJjYWNoZWRSb3V0ZUluZm8iLCJmZXRjaE5leHREYXRhUGFyYW1zIiwiZ2V0RGF0YUhyZWYiLCJza2lwSW50ZXJwb2xhdGlvbiIsInNiYyIsInNkYyIsInJlc29sdmVkUm91dGUiLCJpc0FQSVJvdXRlIiwicmVzIiwibW9kIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwid2FzQmFpbGVkUHJlZmV0Y2giLCJzaG91bGRGZXRjaERhdGEiLCJfZ2V0RGF0YSIsImZldGNoZWQiLCJnZXRQcm9wZXJFcnJvciIsInN1YiIsImJlZm9yZVBvcFN0YXRlIiwiY2IiLCJfYnBzIiwib2xkVXJsTm9IYXNoIiwib2xkSGFzaCIsIm5ld1VybE5vSGFzaCIsIm5ld0hhc2giLCJzY3JvbGxUbyIsInJhd0hhc2giLCJkZWNvZGVVUklDb21wb25lbnQiLCJpZEVsIiwiZ2V0RWxlbWVudEJ5SWQiLCJzY3JvbGxJbnRvVmlldyIsIm5hbWVFbCIsImdldEVsZW1lbnRzQnlOYW1lIiwicHJlZmV0Y2giLCJpc0JvdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm9yaWdpbmFsUGF0aG5hbWUiLCJfX05FWFRfTUlERExFV0FSRV9QUkVGRVRDSCIsIl9pc1NzZyIsImlzU3NnIiwicHJpb3JpdHkiLCJfX05FWFRfT1BUSU1JU1RJQ19DTElFTlRfQ0FDSEUiLCJjb21wb25lbnRSZXN1bHQiLCJsb2FkUGFnZSIsIl9nZXRGbGlnaHREYXRhIiwiY3R4IiwiQXBwIiwiQXBwVHJlZSIsIl93cmFwQXBwIiwibG9hZEdldEluaXRpYWxQcm9wcyIsImNvbnN0cnVjdG9yIiwicGF0aG5hbWUxIiwicXVlcnkxIiwiYXMxIiwiaW5pdGlhbFByb3BzIiwid3JhcEFwcCIsInN1YnNjcmlwdGlvbiIsImlzRmlyc3RQb3BTdGF0ZUV2ZW50Iiwib25Qb3BTdGF0ZSIsIl9fTkEiLCJnZXRJdGVtIiwiZTEiLCJpbml0aWFsIiwiYXV0b0V4cG9ydER5bmFtaWMiLCJhdXRvRXhwb3J0IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsImdzc3AiLCJnaXAiLCJhcHBHaXAiLCJnc3AiLCJzZWFyY2giLCJfaW5pdGlhbE1hdGNoZXNNaWRkbGV3YXJlUHJvbWlzZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJzY3JvbGxSZXN0b3JhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "../../packages/utils/hooks/index.ts":
/*!*******************************************!*\
  !*** ../../packages/utils/hooks/index.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useMount\": () => (/* binding */ useMount)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useMount = ()=>{\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        setMounted(true);\n    }, []);\n    return {\n        mounted\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvdXRpbHMvaG9va3MvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBRXJDLE1BQU1FLFdBQVcsSUFBTTtJQUM1QixNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR0gsK0NBQVFBLENBQUMsS0FBSztJQUM1Q0QsZ0RBQVNBLENBQUMsSUFBTTtRQUNkSSxXQUFXLElBQUk7SUFDakIsR0FBRyxFQUFFO0lBQ0wsT0FBTztRQUFFRDtJQUFRO0FBQ25CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL3BhY2thZ2VzL3V0aWxzL2hvb2tzL2luZGV4LnRzPzZmNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGNvbnN0IHVzZU1vdW50ID0gKCkgPT4ge1xuICBjb25zdCBbbW91bnRlZCwgc2V0TW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0TW91bnRlZCh0cnVlKTtcbiAgfSwgW10pO1xuICByZXR1cm4geyBtb3VudGVkIH07XG59O1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlTW91bnQiLCJtb3VudGVkIiwic2V0TW91bnRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../packages/utils/hooks/index.ts\n");

/***/ }),

/***/ "../../packages/utils/notion-block-renderer.tsx":
/*!******************************************************!*\
  !*** ../../packages/utils/notion-block-renderer.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasChildren\": () => (/* binding */ hasChildren),\n/* harmony export */   \"isAudio\": () => (/* binding */ isAudio),\n/* harmony export */   \"isBlockObject\": () => (/* binding */ isBlockObject),\n/* harmony export */   \"isBookmark\": () => (/* binding */ isBookmark),\n/* harmony export */   \"isBreadcrumb\": () => (/* binding */ isBreadcrumb),\n/* harmony export */   \"isBulletList\": () => (/* binding */ isBulletList),\n/* harmony export */   \"isBulletListItem\": () => (/* binding */ isBulletListItem),\n/* harmony export */   \"isCallout\": () => (/* binding */ isCallout),\n/* harmony export */   \"isChildDatabase\": () => (/* binding */ isChildDatabase),\n/* harmony export */   \"isChildPage\": () => (/* binding */ isChildPage),\n/* harmony export */   \"isCode\": () => (/* binding */ isCode),\n/* harmony export */   \"isColumn\": () => (/* binding */ isColumn),\n/* harmony export */   \"isColumnList\": () => (/* binding */ isColumnList),\n/* harmony export */   \"isDivider\": () => (/* binding */ isDivider),\n/* harmony export */   \"isEmbed\": () => (/* binding */ isEmbed),\n/* harmony export */   \"isEquation\": () => (/* binding */ isEquation),\n/* harmony export */   \"isFile\": () => (/* binding */ isFile),\n/* harmony export */   \"isHeading1\": () => (/* binding */ isHeading1),\n/* harmony export */   \"isHeading2\": () => (/* binding */ isHeading2),\n/* harmony export */   \"isHeading3\": () => (/* binding */ isHeading3),\n/* harmony export */   \"isImage\": () => (/* binding */ isImage),\n/* harmony export */   \"isLinkPreview\": () => (/* binding */ isLinkPreview),\n/* harmony export */   \"isLinkToPage\": () => (/* binding */ isLinkToPage),\n/* harmony export */   \"isNumberedList\": () => (/* binding */ isNumberedList),\n/* harmony export */   \"isNumberedListItem\": () => (/* binding */ isNumberedListItem),\n/* harmony export */   \"isParagraph\": () => (/* binding */ isParagraph),\n/* harmony export */   \"isPdf\": () => (/* binding */ isPdf),\n/* harmony export */   \"isQuote\": () => (/* binding */ isQuote),\n/* harmony export */   \"isSyncedBlock\": () => (/* binding */ isSyncedBlock),\n/* harmony export */   \"isTable\": () => (/* binding */ isTable),\n/* harmony export */   \"isTableOfContents\": () => (/* binding */ isTableOfContents),\n/* harmony export */   \"isTableRow\": () => (/* binding */ isTableRow),\n/* harmony export */   \"isTemplate\": () => (/* binding */ isTemplate),\n/* harmony export */   \"isTodo\": () => (/* binding */ isTodo),\n/* harmony export */   \"isTodoList\": () => (/* binding */ isTodoList),\n/* harmony export */   \"isUnsupported\": () => (/* binding */ isUnsupported),\n/* harmony export */   \"isVideo\": () => (/* binding */ isVideo),\n/* harmony export */   \"renderer\": () => (/* binding */ renderer),\n/* harmony export */   \"switcher\": () => (/* binding */ switcher)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction isParagraph(block) {\n    return block.type === \"paragraph\";\n}\nfunction isHeading1(block) {\n    return block.type === \"heading_1\";\n}\nfunction isHeading2(block) {\n    return block.type === \"heading_2\";\n}\nfunction isHeading3(block) {\n    return block.type === \"heading_3\";\n}\nfunction isBulletList(block) {\n    return block.type === \"bulleted_list\";\n}\nfunction isBulletListItem(block) {\n    return block.type === \"bulleted_list_item\";\n}\nfunction isNumberedList(block) {\n    return block.type === \"numbered_list\";\n}\nfunction isNumberedListItem(block) {\n    return block.type === \"numbered_list_item\";\n}\nfunction isQuote(block) {\n    return block.type === \"quote\";\n}\nfunction isTodoList(block) {\n    return block.type === \"todo_list\";\n}\nfunction isTodo(block) {\n    return block.type === \"to_do\";\n}\nfunction isTemplate(block) {\n    return block.type === \"template\";\n}\nfunction isSyncedBlock(block) {\n    return block.type === \"synced_block\";\n}\nfunction isChildPage(block) {\n    return block.type === \"child_page\";\n}\nfunction isChildDatabase(block) {\n    return block.type === \"child_database\";\n}\nfunction isEquation(block) {\n    return block.type === \"equation\";\n}\nfunction isCode(block) {\n    return block.type === \"code\";\n}\nfunction isCallout(block) {\n    return block.type === \"callout\";\n}\nfunction isDivider(block) {\n    return block.type === \"divider\";\n}\nfunction isBreadcrumb(block) {\n    return block.type === \"breadcrumb\";\n}\nfunction isTableOfContents(block) {\n    return block.type === \"table_of_contents\";\n}\nfunction isColumnList(block) {\n    return block.type === \"column_list\";\n}\nfunction isColumn(block) {\n    return block.type === \"column\";\n}\nfunction isLinkToPage(block) {\n    return block.type === \"link_to_page\";\n}\nfunction isTable(block) {\n    return block.type === \"table\";\n}\nfunction isTableRow(block) {\n    return block.type === \"table_row\";\n}\nfunction isEmbed(block) {\n    return block.type === \"embed\";\n}\nfunction isBookmark(block) {\n    return block.type === \"bookmark\";\n}\nfunction isImage(block) {\n    return block.type === \"image\";\n}\nfunction isVideo(block) {\n    return block.type === \"video\";\n}\nfunction isPdf(block) {\n    return block.type === \"pdf\";\n}\nfunction isFile(block) {\n    return block.type === \"file\";\n}\nfunction isAudio(block) {\n    return block.type === \"audio\";\n}\nfunction isLinkPreview(block) {\n    return block.type === \"link_preview\";\n}\nfunction isUnsupported(block) {\n    return block.type === \"unsupported\";\n}\nfunction isBlockObject(object) {\n    return Object.prototype.hasOwnProperty.call(object, \"type\");\n}\nfunction hasChildren(block) {\n    return Object.prototype.hasOwnProperty.call(block, \"children\");\n}\nfunction switcher(block) {\n    if (isParagraph(block)) {\n        return {\n            tagName: \"p\"\n        };\n    } else if (isHeading1(block)) {\n        return {\n            tagName: \"h1\"\n        };\n    } else if (isHeading2(block)) {\n        return {\n            tagName: \"h2\"\n        };\n    } else if (isHeading3(block)) {\n        return {\n            tagName: \"p\"\n        };\n    } else if (isBulletList(block)) {\n        return {\n            tagName: \"ul\"\n        };\n    } else if (isBulletListItem(block)) {\n        return {\n            tagName: \"li\"\n        };\n    } else if (isNumberedList(block)) {\n        return {\n            tagName: \"ol\"\n        };\n    } else if (isNumberedListItem(block)) {\n        return {\n            tagName: \"li\"\n        };\n    } else if (isQuote(block)) {\n        return {\n            tagName: \"blockquote\"\n        };\n    } else if (isTodoList(block)) {\n        return {\n            tagName: \"ul\"\n        };\n    } else if (isTodo(block)) {\n        return {\n            tagName: \"li\"\n        };\n    } else if (isTemplate(block)) {\n        return {\n            tagName: \"template\"\n        };\n    } else if (isSyncedBlock(block)) {\n        return {\n            tagName: \"div\"\n        };\n    } else if (isChildPage(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isChildDatabase(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isEquation(block)) {\n        return {\n            tagName: \"div\"\n        };\n    } else if (isCode(block)) {\n        return {\n            tagName: \"code\"\n        };\n    } else if (isCallout(block)) {\n        return {\n            tagName: \"div\"\n        };\n    } else if (isDivider(block)) {\n        return {\n            tagName: \"hr\"\n        };\n    } else if (isBreadcrumb(block)) {\n        return {\n            tagName: \"ul\"\n        };\n    } else if (isTableOfContents(block)) {\n        return {\n            tagName: \"ul\"\n        };\n    } else if (isColumnList(block)) {\n        return {\n            tagName: \"div\"\n        };\n    } else if (isColumn(block)) {\n        return {\n            tagName: \"div\"\n        };\n    } else if (isLinkToPage(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isTable(block)) {\n        return {\n            tagName: \"table\"\n        };\n    } else if (isTableRow(block)) {\n        return {\n            tagName: \"tr\"\n        };\n    } else if (isEmbed(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isBookmark(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isImage(block)) {\n        return {\n            tagName: \"img\"\n        };\n    } else if (isVideo(block)) {\n        return {\n            tagName: \"video\"\n        };\n    } else if (isPdf(block)) {\n        return {\n            tagName: \"input\"\n        };\n    } else if (isFile(block)) {\n        return {\n            tagName: \"input\"\n        };\n    } else if (isAudio(block)) {\n        return {\n            tagName: \"audio\"\n        };\n    } else if (isLinkPreview(block)) {\n        return {\n            tagName: \"a\"\n        };\n    } else if (isUnsupported(block)) {\n        return {\n            tagName: \"\"\n        };\n    } else {\n        return {\n            tagName: \"\"\n        };\n    }\n}\n/** twitter embedカードを正しく表示する。 */ function isTwitterHref(itemHref) {\n    return itemHref.includes(\"//t.co\") || itemHref.includes(\"twitter.com\");\n}\nfunction getTextContent(items) {\n    let isIframe = false;\n    function itemFilter(item) {\n        /** iframe embedを正しく表示する。 */ if (item.plain_text.includes(\"<iframe\")) {\n            isIframe = true;\n        }\n        if (item.href != null && !isTwitterHref(item.href) && !isIframe) {\n            return `<a href=\"${item.href}\" target=\"_blank\" rel=\"noopener noreferrer\">${item.plain_text}</a>`;\n        } else {\n            return item.plain_text;\n        }\n    }\n    if (Array.isArray(items)) {\n        return items.map((item)=>itemFilter(item)).join(\"\");\n    } else {\n        return itemFilter(items);\n    }\n}\nfunction renderer(block) {\n    const { tagName  } = switcher(block);\n    const Element = `${tagName}`;\n    if (isParagraph(block)) {\n        if (hasChildren(block)) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n                children: block.children.map(renderer)\n            }, void 0, false, {\n                fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n                lineNumber: 431,\n                columnNumber: 14\n            }, this);\n        }\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            dangerouslySetInnerHTML: {\n                __html: getTextContent(block.paragraph.rich_text)\n            }\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 434,\n            columnNumber: 7\n        }, this);\n    } else if (isHeading1(block)) {\n        const content = getTextContent(block.heading_1.rich_text);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            id: content,\n            href: `#${content}`,\n            dangerouslySetInnerHTML: {\n                __html: content\n            }\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 443,\n            columnNumber: 7\n        }, this);\n    } else if (isHeading2(block)) {\n        const content = getTextContent(block.heading_2.rich_text);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            id: content,\n            href: `#${content}`,\n            dangerouslySetInnerHTML: {\n                __html: content\n            }\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 454,\n            columnNumber: 7\n        }, this);\n    } else if (isHeading3(block)) {\n        const content = getTextContent(block.heading_3.rich_text);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            id: content,\n            href: `#${content}`,\n            dangerouslySetInnerHTML: {\n                __html: content\n            }\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 465,\n            columnNumber: 7\n        }, this);\n    } else if (isBulletList(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            children: block.items.map(renderer)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 474,\n            columnNumber: 12\n        }, this);\n    } else if (isBulletListItem(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            dangerouslySetInnerHTML: {\n                __html: getTextContent(block.bulleted_list_item.rich_text)\n            }\n        }, block.id, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 477,\n            columnNumber: 7\n        }, this);\n    } else if (isNumberedList(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            children: block.items.map(renderer)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 485,\n            columnNumber: 12\n        }, this);\n    } else if (isNumberedListItem(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            dangerouslySetInnerHTML: {\n                __html: getTextContent(block.numbered_list_item.rich_text)\n            }\n        }, block.id, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 488,\n            columnNumber: 7\n        }, this);\n    } else if (isQuote(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            dangerouslySetInnerHTML: {\n                __html: getTextContent(block.quote.rich_text)\n            }\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 497,\n            columnNumber: 7\n        }, this);\n    } else if (isTodoList(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n            children: block.items.map(renderer)\n        }, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 504,\n            columnNumber: 12\n        }, this);\n    } else if (isTodo(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, block.id, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 506,\n            columnNumber: 12\n        }, this);\n    } else if (isTemplate(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 508,\n            columnNumber: 12\n        }, this);\n    } else if (isSyncedBlock(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 510,\n            columnNumber: 12\n        }, this);\n    } else if (isChildPage(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 512,\n            columnNumber: 12\n        }, this);\n    } else if (isChildDatabase(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 514,\n            columnNumber: 12\n        }, this);\n    } else if (isEquation(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 516,\n            columnNumber: 12\n        }, this);\n    } else if (isCode(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 518,\n            columnNumber: 12\n        }, this);\n    } else if (isCallout(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 520,\n            columnNumber: 12\n        }, this);\n    } else if (isDivider(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 522,\n            columnNumber: 12\n        }, this);\n    } else if (isBreadcrumb(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 524,\n            columnNumber: 12\n        }, this);\n    } else if (isTableOfContents(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 526,\n            columnNumber: 12\n        }, this);\n    } else if (isColumnList(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 528,\n            columnNumber: 12\n        }, this);\n    } else if (isColumn(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 530,\n            columnNumber: 12\n        }, this);\n    } else if (isLinkToPage(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 532,\n            columnNumber: 12\n        }, this);\n    } else if (isTable(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 534,\n            columnNumber: 12\n        }, this);\n    } else if (isTableRow(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 536,\n            columnNumber: 12\n        }, this);\n    } else if (isEmbed(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 538,\n            columnNumber: 12\n        }, this);\n    } else if (isBookmark(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 540,\n            columnNumber: 12\n        }, this);\n    } else if (isImage(block)) {\n        const meta = (()=>{\n            if (block.image.type === \"external\") {\n                return {\n                    src: block.image.external.url,\n                    alt: block.image.caption.map((text)=>text.plain_text).join(\"\")\n                };\n            } else {\n                return {\n                    src: block.image.file.url,\n                    alt: block.image.caption.map((text)=>text.plain_text).join(\"\")\n                };\n            }\n        })();\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"picture\", {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                    srcSet: meta.src\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n                    lineNumber: 557,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {\n                    ...meta\n                }, void 0, false, {\n                    fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n                    lineNumber: 558,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 556,\n            columnNumber: 7\n        }, this);\n    } else if (isVideo(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 562,\n            columnNumber: 12\n        }, this);\n    } else if (isPdf(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 564,\n            columnNumber: 12\n        }, this);\n    } else if (isFile(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 566,\n            columnNumber: 12\n        }, this);\n    } else if (isAudio(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 568,\n            columnNumber: 12\n        }, this);\n    } else if (isLinkPreview(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 570,\n            columnNumber: 12\n        }, this);\n    } else if (isUnsupported(block)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 572,\n            columnNumber: 12\n        }, this);\n    } else {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Element, {}, void 0, false, {\n            fileName: \"/Users/shuta13/Projects/shuta13/appearance-none/packages/utils/notion-block-renderer.tsx\",\n            lineNumber: 574,\n            columnNumber: 12\n        }, this);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../packages/utils/notion-block-renderer.tsx\n");

/***/ }),

/***/ "../../packages/utils/notion.ts":
/*!**************************************!*\
  !*** ../../packages/utils/notion.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNotionClient\": () => (/* binding */ createNotionClient)\n/* harmony export */ });\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @notionhq/client */ \"@notionhq/client\");\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_notionhq_client__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction createNotionClient() {\n    const accessToken = process.env.NOTION_ACCESS_TOKEN;\n    return new _notionhq_client__WEBPACK_IMPORTED_MODULE_0__.Client({\n        auth: accessToken\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvdXRpbHMvbm90aW9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUVuQyxTQUFTQyxxQkFBcUI7SUFDbkMsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDQyxtQkFBbUI7SUFDbkQsT0FBTyxJQUFJTCxvREFBTUEsQ0FBQztRQUNoQk0sTUFBTUo7SUFDUjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL3BhY2thZ2VzL3V0aWxzL25vdGlvbi50cz85YzJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudCB9IGZyb20gJ0Bub3Rpb25ocS9jbGllbnQnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTm90aW9uQ2xpZW50KCkge1xuICBjb25zdCBhY2Nlc3NUb2tlbiA9IHByb2Nlc3MuZW52Lk5PVElPTl9BQ0NFU1NfVE9LRU4hO1xuICByZXR1cm4gbmV3IENsaWVudCh7XG4gICAgYXV0aDogYWNjZXNzVG9rZW4sXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIkNsaWVudCIsImNyZWF0ZU5vdGlvbkNsaWVudCIsImFjY2Vzc1Rva2VuIiwicHJvY2VzcyIsImVudiIsIk5PVElPTl9BQ0NFU1NfVE9LRU4iLCJhdXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/utils/notion.ts\n");

/***/ }),

/***/ "../../packages/utils/str.ts":
/*!***********************************!*\
  !*** ../../packages/utils/str.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"summarize\": () => (/* binding */ summarize)\n/* harmony export */ });\n/* harmony import */ var remove_markdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! remove-markdown */ \"remove-markdown\");\n/* harmony import */ var remove_markdown__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(remove_markdown__WEBPACK_IMPORTED_MODULE_0__);\n\nconst summarize = (body, limit = 160)=>{\n    const text = remove_markdown__WEBPACK_IMPORTED_MODULE_0___default()(body).replace(/\\n/g, \" \");\n    return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vcGFja2FnZXMvdXRpbHMvc3RyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUV0QyxNQUFNQyxZQUFZLENBQUNDLE1BQWNDLFFBQVEsR0FBRyxHQUFLO0lBQ3RELE1BQU1DLE9BQU9KLHNEQUFjQSxDQUFDRSxNQUFNRyxPQUFPLENBQUMsT0FBTztJQUNqRCxPQUFPRCxLQUFLRSxNQUFNLEdBQUdILFFBQVFDLEtBQUtHLFNBQVMsQ0FBQyxHQUFHSixTQUFTLFFBQVFDLElBQUk7QUFDdEUsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vcGFja2FnZXMvdXRpbHMvc3RyLnRzPzAzNWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlbW92ZU1hcmtkb3duIGZyb20gJ3JlbW92ZS1tYXJrZG93bic7XG5cbmV4cG9ydCBjb25zdCBzdW1tYXJpemUgPSAoYm9keTogc3RyaW5nLCBsaW1pdCA9IDE2MCkgPT4ge1xuICBjb25zdCB0ZXh0ID0gUmVtb3ZlTWFya2Rvd24oYm9keSkucmVwbGFjZSgvXFxuL2csICcgJyk7XG4gIHJldHVybiB0ZXh0Lmxlbmd0aCA+IGxpbWl0ID8gdGV4dC5zdWJzdHJpbmcoMCwgbGltaXQpICsgJy4uLicgOiB0ZXh0O1xufTtcbiJdLCJuYW1lcyI6WyJSZW1vdmVNYXJrZG93biIsInN1bW1hcml6ZSIsImJvZHkiLCJsaW1pdCIsInRleHQiLCJyZXBsYWNlIiwibGVuZ3RoIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../packages/utils/str.ts\n");

/***/ }),

/***/ "../../node_modules/next/dist/lib/is-api-route.js":
/*!********************************************************!*\
  !*** ../../node_modules/next/dist/lib/is-api-route.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isAPIRoute = isAPIRoute;\nfunction isAPIRoute(value) {\n    return value === \"/api\" || Boolean(value == null ? void 0 : value.startsWith(\"/api/\"));\n}\n\n//# sourceMappingURL=is-api-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtYXBpLXJvdXRlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtYXBpLXJvdXRlLmpzPzU2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmlzQVBJUm91dGUgPSBpc0FQSVJvdXRlO1xuZnVuY3Rpb24gaXNBUElSb3V0ZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gXCIvYXBpXCIgfHwgQm9vbGVhbih2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUuc3RhcnRzV2l0aChcIi9hcGkvXCIpKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtYXBpLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/lib/is-api-route.js\n");

/***/ }),

/***/ "../../node_modules/next/dist/lib/is-error.js":
/*!****************************************************!*\
  !*** ../../node_modules/next/dist/lib/is-error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === \"object\" && err !== null && \"name\" in err && \"message\" in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === \"undefined\") {\n            return new Error(\"An undefined error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n        if (err === null) {\n            return new Error(\"A null error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + \"\");\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmLHNCQUFzQjtBQUN0QixxQkFBcUIsbUJBQU8sQ0FBQyxvRUFBK0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLElBQXNDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL2lzLWVycm9yLmpzP2M1NWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc0Vycm9yO1xuZXhwb3J0cy5nZXRQcm9wZXJFcnJvciA9IGdldFByb3BlckVycm9yO1xudmFyIF9pc1BsYWluT2JqZWN0ID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvaXMtcGxhaW4tb2JqZWN0XCIpO1xuZnVuY3Rpb24gaXNFcnJvcihlcnIpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVyciA9PT0gXCJvYmplY3RcIiAmJiBlcnIgIT09IG51bGwgJiYgXCJuYW1lXCIgaW4gZXJyICYmIFwibWVzc2FnZVwiIGluIGVycjtcbn1cbmZ1bmN0aW9uIGdldFByb3BlckVycm9yKGVycikge1xuICAgIGlmIChpc0Vycm9yKGVycikpIHtcbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpIHtcbiAgICAgICAgLy8gcHJvdmlkZSBiZXR0ZXIgZXJyb3IgZm9yIGNhc2Ugd2hlcmUgYHRocm93IHVuZGVmaW5lZGBcbiAgICAgICAgLy8gaXMgY2FsbGVkIGluIGRldmVsb3BtZW50XG4gICAgICAgIGlmICh0eXBlb2YgZXJyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiQW4gdW5kZWZpbmVkIGVycm9yIHdhcyB0aHJvd24sIFwiICsgXCJzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVyciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkEgbnVsbCBlcnJvciB3YXMgdGhyb3duLCBcIiArIFwic2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXJyb3IoKDAsIF9pc1BsYWluT2JqZWN0KS5pc1BsYWluT2JqZWN0KGVycikgPyBKU09OLnN0cmluZ2lmeShlcnIpIDogZXJyICsgXCJcIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "../../node_modules/next/image.js":
/*!****************************************!*\
  !*** ../../node_modules/next/image.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/image */ \"../../node_modules/next/dist/client/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvaW1hZ2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsK0dBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vic2l0ZS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcz8zOWU5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9pbWFnZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/image.js\n");

/***/ }),

/***/ "../../node_modules/next/link.js":
/*!***************************************!*\
  !*** ../../node_modules/next/link.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"../../node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvbGluay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSw2R0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJzaXRlLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2xpbmsuanM/YmE2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvbGluaycpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/link.js\n");

/***/ }),

/***/ "@notionhq/client":
/*!***********************************!*\
  !*** external "@notionhq/client" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@notionhq/client");

/***/ }),

/***/ "dayjs":
/*!************************!*\
  !*** external "dayjs" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("dayjs");

/***/ }),

/***/ "dayjs/locale/ja":
/*!**********************************!*\
  !*** external "dayjs/locale/ja" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("dayjs/locale/ja");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "./amp-context":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/amp-context.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-context.js");

/***/ }),

/***/ "./amp-mode":
/*!***************************************************!*\
  !*** external "next/dist/shared/lib/amp-mode.js" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/amp-mode.js");

/***/ }),

/***/ "../shared/lib/app-router-context":
/*!*************************************************************!*\
  !*** external "next/dist/shared/lib/app-router-context.js" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ "./head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../shared/lib/image-blur-svg":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/image-blur-svg.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-blur-svg.js");

/***/ }),

/***/ "../shared/lib/image-config-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/image-config-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config-context.js");

/***/ }),

/***/ "../shared/lib/image-config":
/*!*******************************************************!*\
  !*** external "next/dist/shared/lib/image-config.js" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config.js");

/***/ }),

/***/ "next/dist/shared/lib/image-loader":
/*!****************************************************!*\
  !*** external "next/dist/shared/lib/image-loader" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-loader");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../page-path/denormalize-page-path":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/denormalize-page-path.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/add-path-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/add-path-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ "./utils/compare-states":
/*!**********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/compare-states.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/compare-states.js");

/***/ }),

/***/ "./utils/format-next-pathname-info":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-next-pathname-info.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ "../shared/lib/router/utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-next-pathname-info":
/*!******************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-next-pathname-info.js" ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ "./utils/is-bot":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot.js" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "../shared/lib/router/utils/parse-path":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-path.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/path-has-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/path-has-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "../shared/lib/router/utils/remove-trailing-slash":
/*!*****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/remove-trailing-slash.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "./side-effect":
/*!******************************************************!*\
  !*** external "next/dist/shared/lib/side-effect.js" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/side-effect.js");

/***/ }),

/***/ "../utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "../shared/lib/utils/warn-once":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/utils/warn-once.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils/warn-once.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react-dom/server":
/*!***********************************!*\
  !*** external "react-dom/server" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom/server");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "remove-markdown":
/*!**********************************!*\
  !*** external "remove-markdown" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("remove-markdown");

/***/ }),

/***/ "hast-util-from-html":
/*!**************************************!*\
  !*** external "hast-util-from-html" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = import("hast-util-from-html");;

/***/ }),

/***/ "unist-util-visit":
/*!***********************************!*\
  !*** external "unist-util-visit" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = import("unist-util-visit");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/entry/[slug].tsx"));
module.exports = __webpack_exports__;

})();